<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="298" onload="init(evt)" viewBox="0 0 1200 298" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="298" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">.venv_dbg/bin/py-spy record -o results/mdp/mdp_opt4/20251025_192939/flamegraph/flamegraph_pyspy_mdp_opt4.svg -r 100 -- .venv_dbg/bin/python3 pyperformance/pyperformance/data-files/benchmarks/bm_mdp/no_pyperf_versions/mdp_opt4.py</text><text id="details" fill="rgb(0,0,0)" x="10" y="40.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="287.00"> </text><svg id="frames" x="10" width="1180" total_samples="2467"><g><title>build_graph (mdp_opt4.py:216) (3 samples, 0.12%)</title><rect x="1.0539%" y="132" width="0.1216%" height="15" fill="rgb(227,0,7)" fg:x="26" fg:w="3"/><text x="1.3039%" y="142.50"></text></g><g><title>build_graph (mdp_opt4.py:220) (3 samples, 0.12%)</title><rect x="1.2161%" y="132" width="0.1216%" height="15" fill="rgb(217,0,24)" fg:x="30" fg:w="3"/><text x="1.4661%" y="142.50"></text></g><g><title>getSuccessors (mdp_opt4.py:176) (4 samples, 0.16%)</title><rect x="1.4998%" y="148" width="0.1621%" height="15" fill="rgb(221,193,54)" fg:x="37" fg:w="4"/><text x="1.7498%" y="158.50"></text></g><g><title>_getSuccessorsB (mdp_opt4.py:139) (12 samples, 0.49%)</title><rect x="2.1078%" y="164" width="0.4864%" height="15" fill="rgb(248,212,6)" fg:x="52" fg:w="12"/><text x="2.3578%" y="174.50"></text></g><g><title>__new__ (fractions.py:93) (3 samples, 0.12%)</title><rect x="2.4726%" y="180" width="0.1216%" height="15" fill="rgb(208,68,35)" fg:x="61" fg:w="3"/><text x="2.7226%" y="190.50"></text></g><g><title>_getSuccessorsB (mdp_opt4.py:140) (7 samples, 0.28%)</title><rect x="2.5942%" y="164" width="0.2837%" height="15" fill="rgb(232,128,0)" fg:x="64" fg:w="7"/><text x="2.8442%" y="174.50"></text></g><g><title>_getSuccessorsB (mdp_opt4.py:141) (6 samples, 0.24%)</title><rect x="2.8780%" y="164" width="0.2432%" height="15" fill="rgb(207,160,47)" fg:x="71" fg:w="6"/><text x="3.1280%" y="174.50"></text></g><g><title>_applyActionSide1 (mdp_opt4.py:83) (12 samples, 0.49%)</title><rect x="3.3644%" y="212" width="0.4864%" height="15" fill="rgb(228,23,34)" fg:x="83" fg:w="12"/><text x="3.6144%" y="222.50"></text></g><g><title>applyHPChange (mdp_opt4.py:62) (11 samples, 0.45%)</title><rect x="3.4049%" y="228" width="0.4459%" height="15" fill="rgb(218,30,26)" fg:x="84" fg:w="11"/><text x="3.6549%" y="238.50"></text></g><g><title>_replace (collections/__init__.py:431) (7 samples, 0.28%)</title><rect x="3.5671%" y="244" width="0.2837%" height="15" fill="rgb(220,122,19)" fg:x="88" fg:w="7"/><text x="3.8171%" y="254.50"></text></g><g><title>_make (collections/__init__.py:422) (6 samples, 0.24%)</title><rect x="3.6076%" y="260" width="0.2432%" height="15" fill="rgb(250,228,42)" fg:x="89" fg:w="6"/><text x="3.8576%" y="270.50"></text></g><g><title>_applyActionPair (mdp_opt4.py:127) (16 samples, 0.65%)</title><rect x="3.3239%" y="180" width="0.6486%" height="15" fill="rgb(240,193,28)" fg:x="82" fg:w="16"/><text x="3.5739%" y="190.50"></text></g><g><title>_applyAction (mdp_opt4.py:103) (15 samples, 0.61%)</title><rect x="3.3644%" y="196" width="0.6080%" height="15" fill="rgb(216,20,37)" fg:x="83" fg:w="15"/><text x="3.6144%" y="206.50"></text></g><g><title>_applyActionSide1 (mdp_opt4.py:84) (3 samples, 0.12%)</title><rect x="3.8508%" y="212" width="0.1216%" height="15" fill="rgb(206,188,39)" fg:x="95" fg:w="3"/><text x="4.1008%" y="222.50"></text></g><g><title>__new__ (fractions.py:93) (6 samples, 0.24%)</title><rect x="4.5805%" y="228" width="0.2432%" height="15" fill="rgb(217,207,13)" fg:x="113" fg:w="6"/><text x="4.8305%" y="238.50"></text></g><g><title>_add (fractions.py:457) (7 samples, 0.28%)</title><rect x="4.5805%" y="212" width="0.2837%" height="15" fill="rgb(231,73,38)" fg:x="113" fg:w="7"/><text x="4.8305%" y="222.50"></text></g><g><title>_getSuccessorsB (mdp_opt4.py:144) (48 samples, 1.95%)</title><rect x="3.2428%" y="164" width="1.9457%" height="15" fill="rgb(225,20,46)" fg:x="80" fg:w="48"/><text x="3.4928%" y="174.50">_..</text></g><g><title>_applyActionPair (mdp_opt4.py:134) (28 samples, 1.13%)</title><rect x="4.0535%" y="180" width="1.1350%" height="15" fill="rgb(210,31,41)" fg:x="100" fg:w="28"/><text x="4.3035%" y="190.50"></text></g><g><title>forward (fractions.py:358) (19 samples, 0.77%)</title><rect x="4.4183%" y="196" width="0.7702%" height="15" fill="rgb(221,200,47)" fg:x="109" fg:w="19"/><text x="4.6683%" y="206.50"></text></g><g><title>_mul (fractions.py:495) (8 samples, 0.32%)</title><rect x="4.8642%" y="212" width="0.3243%" height="15" fill="rgb(226,26,5)" fg:x="120" fg:w="8"/><text x="5.1142%" y="222.50"></text></g><g><title>_applyActionSide1 (mdp_opt4.py:87) (3 samples, 0.12%)</title><rect x="5.5938%" y="212" width="0.1216%" height="15" fill="rgb(249,33,26)" fg:x="138" fg:w="3"/><text x="5.8438%" y="222.50"></text></g><g><title>_applyActionSide1 (mdp_opt4.py:90) (15 samples, 0.61%)</title><rect x="5.7560%" y="212" width="0.6080%" height="15" fill="rgb(235,183,28)" fg:x="142" fg:w="15"/><text x="6.0060%" y="222.50"></text></g><g><title>__new__ (fractions.py:93) (7 samples, 0.28%)</title><rect x="6.0803%" y="228" width="0.2837%" height="15" fill="rgb(221,5,38)" fg:x="150" fg:w="7"/><text x="6.3303%" y="238.50"></text></g><g><title>__eq__ (fractions.py:674) (4 samples, 0.16%)</title><rect x="6.7288%" y="228" width="0.1621%" height="15" fill="rgb(247,18,42)" fg:x="166" fg:w="4"/><text x="6.9788%" y="238.50"></text></g><g><title>__eq__ (fractions.py:675) (3 samples, 0.12%)</title><rect x="6.8910%" y="228" width="0.1216%" height="15" fill="rgb(241,131,45)" fg:x="170" fg:w="3"/><text x="7.1410%" y="238.50"></text></g><g><title>__hash__ (fractions.py:646) (6 samples, 0.24%)</title><rect x="7.0936%" y="228" width="0.2432%" height="15" fill="rgb(249,31,29)" fg:x="175" fg:w="6"/><text x="7.3436%" y="238.50"></text></g><g><title>_applyActionSide1 (mdp_opt4.py:91) (27 samples, 1.09%)</title><rect x="6.3640%" y="212" width="1.0944%" height="15" fill="rgb(225,111,53)" fg:x="157" fg:w="27"/><text x="6.6140%" y="222.50"></text></g><g><title>_applyActionSide1 (mdp_opt4.py:92) (3 samples, 0.12%)</title><rect x="7.4585%" y="212" width="0.1216%" height="15" fill="rgb(238,160,17)" fg:x="184" fg:w="3"/><text x="7.7085%" y="222.50"></text></g><g><title>_applyActionSide1 (mdp_opt4.py:96) (6 samples, 0.24%)</title><rect x="7.7422%" y="212" width="0.2432%" height="15" fill="rgb(214,148,48)" fg:x="191" fg:w="6"/><text x="7.9922%" y="222.50"></text></g><g><title>applyHPChange (mdp_opt4.py:61) (46 samples, 1.86%)</title><rect x="8.5934%" y="228" width="1.8646%" height="15" fill="rgb(232,36,49)" fg:x="212" fg:w="46"/><text x="8.8434%" y="238.50">a..</text></g><g><title>_make (collections/__init__.py:422) (74 samples, 3.00%)</title><rect x="13.4576%" y="260" width="2.9996%" height="15" fill="rgb(209,103,24)" fg:x="332" fg:w="74"/><text x="13.7076%" y="270.50">_ma..</text></g><g><title>_make (collections/__init__.py:423) (5 samples, 0.20%)</title><rect x="16.4572%" y="260" width="0.2027%" height="15" fill="rgb(229,88,8)" fg:x="406" fg:w="5"/><text x="16.7072%" y="270.50"></text></g><g><title>_replace (collections/__init__.py:431) (130 samples, 5.27%)</title><rect x="11.4309%" y="244" width="5.2696%" height="15" fill="rgb(213,181,19)" fg:x="282" fg:w="130"/><text x="11.6809%" y="254.50">_repla..</text></g><g><title>_applyActionSide1 (mdp_opt4.py:97) (216 samples, 8.76%)</title><rect x="7.9854%" y="212" width="8.7556%" height="15" fill="rgb(254,191,54)" fg:x="197" fg:w="216"/><text x="8.2354%" y="222.50">_applyAction..</text></g><g><title>applyHPChange (mdp_opt4.py:62) (155 samples, 6.28%)</title><rect x="10.4580%" y="228" width="6.2829%" height="15" fill="rgb(241,83,37)" fg:x="258" fg:w="155"/><text x="10.7080%" y="238.50">applyHPC..</text></g><g><title>__new__ (fractions.py:93) (8 samples, 0.32%)</title><rect x="19.9027%" y="228" width="0.3243%" height="15" fill="rgb(233,36,39)" fg:x="491" fg:w="8"/><text x="20.1527%" y="238.50"></text></g><g><title>forward (fractions.py:357) (12 samples, 0.49%)</title><rect x="20.3486%" y="228" width="0.4864%" height="15" fill="rgb(226,3,54)" fg:x="502" fg:w="12"/><text x="20.5986%" y="238.50"></text></g><g><title>denominator (fractions.py:262) (4 samples, 0.16%)</title><rect x="21.6457%" y="260" width="0.1621%" height="15" fill="rgb(245,192,40)" fg:x="534" fg:w="4"/><text x="21.8957%" y="270.50"></text></g><g><title>_add (fractions.py:453) (12 samples, 0.49%)</title><rect x="21.4025%" y="244" width="0.4864%" height="15" fill="rgb(238,167,29)" fg:x="528" fg:w="12"/><text x="21.6525%" y="254.50"></text></g><g><title>denominator (fractions.py:262) (5 samples, 0.20%)</title><rect x="22.3348%" y="260" width="0.2027%" height="15" fill="rgb(232,182,51)" fg:x="551" fg:w="5"/><text x="22.5848%" y="270.50"></text></g><g><title>_add (fractions.py:454) (23 samples, 0.93%)</title><rect x="21.8889%" y="244" width="0.9323%" height="15" fill="rgb(231,60,39)" fg:x="540" fg:w="23"/><text x="22.1389%" y="254.50"></text></g><g><title>numerator (fractions.py:258) (7 samples, 0.28%)</title><rect x="22.5375%" y="260" width="0.2837%" height="15" fill="rgb(208,69,12)" fg:x="556" fg:w="7"/><text x="22.7875%" y="270.50"></text></g><g><title>_add (fractions.py:455) (8 samples, 0.32%)</title><rect x="22.8212%" y="244" width="0.3243%" height="15" fill="rgb(235,93,37)" fg:x="563" fg:w="8"/><text x="23.0712%" y="254.50"></text></g><g><title>_add (fractions.py:456) (6 samples, 0.24%)</title><rect x="23.1455%" y="244" width="0.2432%" height="15" fill="rgb(213,116,39)" fg:x="571" fg:w="6"/><text x="23.3955%" y="254.50"></text></g><g><title>_add (fractions.py:457) (18 samples, 0.73%)</title><rect x="23.3887%" y="244" width="0.7296%" height="15" fill="rgb(222,207,29)" fg:x="577" fg:w="18"/><text x="23.6387%" y="254.50"></text></g><g><title>__new__ (fractions.py:93) (7 samples, 0.28%)</title><rect x="23.8346%" y="260" width="0.2837%" height="15" fill="rgb(206,96,30)" fg:x="588" fg:w="7"/><text x="24.0846%" y="270.50"></text></g><g><title>_add (fractions.py:459) (11 samples, 0.45%)</title><rect x="24.1994%" y="244" width="0.4459%" height="15" fill="rgb(218,138,4)" fg:x="597" fg:w="11"/><text x="24.4494%" y="254.50"></text></g><g><title>_add (fractions.py:460) (16 samples, 0.65%)</title><rect x="24.6453%" y="244" width="0.6486%" height="15" fill="rgb(250,191,14)" fg:x="608" fg:w="16"/><text x="24.8953%" y="254.50"></text></g><g><title>__new__ (fractions.py:142) (6 samples, 0.24%)</title><rect x="25.6992%" y="260" width="0.2432%" height="15" fill="rgb(239,60,40)" fg:x="634" fg:w="6"/><text x="25.9492%" y="270.50"></text></g><g><title>__new__ (fractions.py:165) (4 samples, 0.16%)</title><rect x="26.1451%" y="260" width="0.1621%" height="15" fill="rgb(206,27,48)" fg:x="645" fg:w="4"/><text x="26.3951%" y="270.50"></text></g><g><title>_add (fractions.py:462) (32 samples, 1.30%)</title><rect x="25.3344%" y="244" width="1.2971%" height="15" fill="rgb(225,35,8)" fg:x="625" fg:w="32"/><text x="25.5844%" y="254.50"></text></g><g><title>__new__ (fractions.py:93) (8 samples, 0.32%)</title><rect x="26.3073%" y="260" width="0.3243%" height="15" fill="rgb(250,213,24)" fg:x="649" fg:w="8"/><text x="26.5573%" y="270.50"></text></g><g><title>__new__ (fractions.py:93) (19 samples, 0.77%)</title><rect x="27.5233%" y="260" width="0.7702%" height="15" fill="rgb(247,123,22)" fg:x="679" fg:w="19"/><text x="27.7733%" y="270.50"></text></g><g><title>_applyAction (mdp_opt4.py:106) (565 samples, 22.90%)</title><rect x="5.4722%" y="196" width="22.9023%" height="15" fill="rgb(231,138,38)" fg:x="135" fg:w="565"/><text x="5.7222%" y="206.50">_applyAction (mdp_opt4.py:106)</text></g><g><title>_applyActionSide1 (mdp_opt4.py:98) (287 samples, 11.63%)</title><rect x="16.7410%" y="212" width="11.6336%" height="15" fill="rgb(231,145,46)" fg:x="413" fg:w="287"/><text x="16.9910%" y="222.50">_applyActionSide1..</text></g><g><title>forward (fractions.py:358) (186 samples, 7.54%)</title><rect x="20.8350%" y="228" width="7.5395%" height="15" fill="rgb(251,118,11)" fg:x="514" fg:w="186"/><text x="21.0850%" y="238.50">forward (f..</text></g><g><title>_add (fractions.py:463) (43 samples, 1.74%)</title><rect x="26.6315%" y="244" width="1.7430%" height="15" fill="rgb(217,147,25)" fg:x="657" fg:w="43"/><text x="26.8815%" y="254.50"></text></g><g><title>_applyActionPair (mdp_opt4.py:127) (575 samples, 23.31%)</title><rect x="5.3506%" y="180" width="23.3077%" height="15" fill="rgb(247,81,37)" fg:x="132" fg:w="575"/><text x="5.6006%" y="190.50">_applyActionPair (mdp_opt4.py:127)</text></g><g><title>_applyAction (mdp_opt4.py:107) (7 samples, 0.28%)</title><rect x="28.3745%" y="196" width="0.2837%" height="15" fill="rgb(209,12,38)" fg:x="700" fg:w="7"/><text x="28.6245%" y="206.50"></text></g><g><title>&lt;dictcomp&gt; (mdp_opt4.py:107) (4 samples, 0.16%)</title><rect x="28.4961%" y="212" width="0.1621%" height="15" fill="rgb(227,1,9)" fg:x="703" fg:w="4"/><text x="28.7461%" y="222.50"></text></g><g><title>__new__ (fractions.py:93) (12 samples, 0.49%)</title><rect x="29.5906%" y="196" width="0.4864%" height="15" fill="rgb(248,47,43)" fg:x="730" fg:w="12"/><text x="29.8406%" y="206.50"></text></g><g><title>_add (fractions.py:454) (4 samples, 0.16%)</title><rect x="30.2797%" y="212" width="0.1621%" height="15" fill="rgb(221,10,30)" fg:x="747" fg:w="4"/><text x="30.5297%" y="222.50"></text></g><g><title>_add (fractions.py:455) (3 samples, 0.12%)</title><rect x="30.4418%" y="212" width="0.1216%" height="15" fill="rgb(210,229,1)" fg:x="751" fg:w="3"/><text x="30.6918%" y="222.50"></text></g><g><title>_add (fractions.py:457) (25 samples, 1.01%)</title><rect x="30.5634%" y="212" width="1.0134%" height="15" fill="rgb(222,148,37)" fg:x="754" fg:w="25"/><text x="30.8134%" y="222.50"></text></g><g><title>__new__ (fractions.py:93) (14 samples, 0.57%)</title><rect x="31.0093%" y="228" width="0.5675%" height="15" fill="rgb(234,67,33)" fg:x="765" fg:w="14"/><text x="31.2593%" y="238.50"></text></g><g><title>_add (fractions.py:462) (3 samples, 0.12%)</title><rect x="31.6173%" y="212" width="0.1216%" height="15" fill="rgb(247,98,35)" fg:x="780" fg:w="3"/><text x="31.8673%" y="222.50"></text></g><g><title>_mul (fractions.py:486) (3 samples, 0.12%)</title><rect x="31.8606%" y="212" width="0.1216%" height="15" fill="rgb(247,138,52)" fg:x="786" fg:w="3"/><text x="32.1106%" y="222.50"></text></g><g><title>_mul (fractions.py:487) (3 samples, 0.12%)</title><rect x="31.9822%" y="212" width="0.1216%" height="15" fill="rgb(213,79,30)" fg:x="789" fg:w="3"/><text x="32.2322%" y="222.50"></text></g><g><title>_getSuccessorsB (mdp_opt4.py:146) (692 samples, 28.05%)</title><rect x="5.2290%" y="164" width="28.0503%" height="15" fill="rgb(246,177,23)" fg:x="129" fg:w="692"/><text x="5.4790%" y="174.50">_getSuccessorsB (mdp_opt4.py:146)</text></g><g><title>_applyActionPair (mdp_opt4.py:134) (111 samples, 4.50%)</title><rect x="28.7799%" y="180" width="4.4994%" height="15" fill="rgb(230,62,27)" fg:x="710" fg:w="111"/><text x="29.0299%" y="190.50">_appl..</text></g><g><title>forward (fractions.py:358) (78 samples, 3.16%)</title><rect x="30.1176%" y="196" width="3.1617%" height="15" fill="rgb(216,154,8)" fg:x="743" fg:w="78"/><text x="30.3676%" y="206.50">for..</text></g><g><title>_mul (fractions.py:495) (24 samples, 0.97%)</title><rect x="32.3064%" y="212" width="0.9728%" height="15" fill="rgb(244,35,45)" fg:x="797" fg:w="24"/><text x="32.5564%" y="222.50"></text></g><g><title>__new__ (fractions.py:93) (7 samples, 0.28%)</title><rect x="32.9955%" y="228" width="0.2837%" height="15" fill="rgb(251,115,12)" fg:x="814" fg:w="7"/><text x="33.2455%" y="238.50"></text></g><g><title>__float__ (numbers.py:291) (6 samples, 0.24%)</title><rect x="34.0495%" y="196" width="0.2432%" height="15" fill="rgb(240,54,50)" fg:x="840" fg:w="6"/><text x="34.2995%" y="206.50"></text></g><g><title>_richcmp (fractions.py:702) (10 samples, 0.41%)</title><rect x="34.4548%" y="212" width="0.4054%" height="15" fill="rgb(233,84,52)" fg:x="850" fg:w="10"/><text x="34.7048%" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:119) (5 samples, 0.20%)</title><rect x="34.6575%" y="228" width="0.2027%" height="15" fill="rgb(207,117,47)" fg:x="855" fg:w="5"/><text x="34.9075%" y="238.50"></text></g><g><title>_getSuccessorsB (mdp_opt4.py:151) (45 samples, 1.82%)</title><rect x="33.2793%" y="164" width="1.8241%" height="15" fill="rgb(249,43,39)" fg:x="821" fg:w="45"/><text x="33.5293%" y="174.50">_..</text></g><g><title>&lt;genexpr&gt; (mdp_opt4.py:152) (35 samples, 1.42%)</title><rect x="33.6846%" y="180" width="1.4187%" height="15" fill="rgb(209,38,44)" fg:x="831" fg:w="35"/><text x="33.9346%" y="190.50"></text></g><g><title>__gt__ (fractions.py:719) (20 samples, 0.81%)</title><rect x="34.2927%" y="196" width="0.8107%" height="15" fill="rgb(236,212,23)" fg:x="846" fg:w="20"/><text x="34.5427%" y="206.50"></text></g><g><title>_richcmp (fractions.py:703) (6 samples, 0.24%)</title><rect x="34.8602%" y="212" width="0.2432%" height="15" fill="rgb(242,79,21)" fg:x="860" fg:w="6"/><text x="35.1102%" y="222.50"></text></g><g><title>getSuccessors (mdp_opt4.py:187) (825 samples, 33.44%)</title><rect x="1.7430%" y="148" width="33.4414%" height="15" fill="rgb(211,96,35)" fg:x="43" fg:w="825"/><text x="1.9930%" y="158.50">getSuccessors (mdp_opt4.py:187)</text></g><g><title>_getSuccessorsC (mdp_opt4.py:159) (4 samples, 0.16%)</title><rect x="35.3466%" y="164" width="0.1621%" height="15" fill="rgb(253,215,40)" fg:x="872" fg:w="4"/><text x="35.5966%" y="174.50"></text></g><g><title>_applyActionSide1 (mdp_opt4.py:91) (7 samples, 0.28%)</title><rect x="35.7519%" y="196" width="0.2837%" height="15" fill="rgb(211,81,21)" fg:x="882" fg:w="7"/><text x="36.0019%" y="206.50"></text></g><g><title>__hash__ (fractions.py:646) (4 samples, 0.16%)</title><rect x="35.8735%" y="212" width="0.1621%" height="15" fill="rgb(208,190,38)" fg:x="885" fg:w="4"/><text x="36.1235%" y="222.50"></text></g><g><title>applyHPChange (mdp_opt4.py:61) (16 samples, 0.65%)</title><rect x="36.1978%" y="212" width="0.6486%" height="15" fill="rgb(235,213,38)" fg:x="893" fg:w="16"/><text x="36.4478%" y="222.50"></text></g><g><title>_make (collections/__init__.py:422) (11 samples, 0.45%)</title><rect x="37.5355%" y="244" width="0.4459%" height="15" fill="rgb(237,122,38)" fg:x="926" fg:w="11"/><text x="37.7855%" y="254.50"></text></g><g><title>_replace (collections/__init__.py:431) (28 samples, 1.13%)</title><rect x="36.8869%" y="228" width="1.1350%" height="15" fill="rgb(244,218,35)" fg:x="910" fg:w="28"/><text x="37.1369%" y="238.50"></text></g><g><title>_applyActionSide1 (mdp_opt4.py:97) (50 samples, 2.03%)</title><rect x="36.0762%" y="196" width="2.0268%" height="15" fill="rgb(240,68,47)" fg:x="890" fg:w="50"/><text x="36.3262%" y="206.50">_..</text></g><g><title>applyHPChange (mdp_opt4.py:62) (31 samples, 1.26%)</title><rect x="36.8464%" y="212" width="1.2566%" height="15" fill="rgb(210,16,53)" fg:x="909" fg:w="31"/><text x="37.0964%" y="222.50"></text></g><g><title>forward (fractions.py:357) (3 samples, 0.12%)</title><rect x="38.8326%" y="212" width="0.1216%" height="15" fill="rgb(235,124,12)" fg:x="958" fg:w="3"/><text x="39.0826%" y="222.50"></text></g><g><title>_add (fractions.py:453) (3 samples, 0.12%)</title><rect x="39.1569%" y="228" width="0.1216%" height="15" fill="rgb(224,169,11)" fg:x="966" fg:w="3"/><text x="39.4069%" y="238.50"></text></g><g><title>_add (fractions.py:454) (3 samples, 0.12%)</title><rect x="39.2785%" y="228" width="0.1216%" height="15" fill="rgb(250,166,2)" fg:x="969" fg:w="3"/><text x="39.5285%" y="238.50"></text></g><g><title>_add (fractions.py:457) (7 samples, 0.28%)</title><rect x="39.4812%" y="228" width="0.2837%" height="15" fill="rgb(242,216,29)" fg:x="974" fg:w="7"/><text x="39.7312%" y="238.50"></text></g><g><title>_add (fractions.py:459) (3 samples, 0.12%)</title><rect x="39.7649%" y="228" width="0.1216%" height="15" fill="rgb(230,116,27)" fg:x="981" fg:w="3"/><text x="40.0149%" y="238.50"></text></g><g><title>_add (fractions.py:462) (11 samples, 0.45%)</title><rect x="39.9676%" y="228" width="0.4459%" height="15" fill="rgb(228,99,48)" fg:x="986" fg:w="11"/><text x="40.2176%" y="238.50"></text></g><g><title>__new__ (fractions.py:93) (5 samples, 0.20%)</title><rect x="40.2108%" y="244" width="0.2027%" height="15" fill="rgb(253,11,6)" fg:x="992" fg:w="5"/><text x="40.4608%" y="254.50"></text></g><g><title>_applyAction (mdp_opt4.py:103) (118 samples, 4.78%)</title><rect x="35.7114%" y="180" width="4.7831%" height="15" fill="rgb(247,143,39)" fg:x="881" fg:w="118"/><text x="35.9614%" y="190.50">_apply..</text></g><g><title>_applyActionSide1 (mdp_opt4.py:98) (59 samples, 2.39%)</title><rect x="38.1030%" y="196" width="2.3916%" height="15" fill="rgb(236,97,10)" fg:x="940" fg:w="59"/><text x="38.3530%" y="206.50">_a..</text></g><g><title>forward (fractions.py:358) (38 samples, 1.54%)</title><rect x="38.9542%" y="212" width="1.5403%" height="15" fill="rgb(233,208,19)" fg:x="961" fg:w="38"/><text x="39.2042%" y="222.50"></text></g><g><title>_applyActionSide1 (mdp_opt4.py:91) (6 samples, 0.24%)</title><rect x="40.6567%" y="196" width="0.2432%" height="15" fill="rgb(216,164,2)" fg:x="1003" fg:w="6"/><text x="40.9067%" y="206.50"></text></g><g><title>_applyActionSide1 (mdp_opt4.py:96) (3 samples, 0.12%)</title><rect x="40.9809%" y="196" width="0.1216%" height="15" fill="rgb(220,129,5)" fg:x="1011" fg:w="3"/><text x="41.2309%" y="206.50"></text></g><g><title>applyHPChange (mdp_opt4.py:61) (12 samples, 0.49%)</title><rect x="41.3863%" y="212" width="0.4864%" height="15" fill="rgb(242,17,10)" fg:x="1021" fg:w="12"/><text x="41.6363%" y="222.50"></text></g><g><title>_make (collections/__init__.py:422) (24 samples, 0.97%)</title><rect x="42.6429%" y="244" width="0.9728%" height="15" fill="rgb(242,107,0)" fg:x="1052" fg:w="24"/><text x="42.8929%" y="254.50"></text></g><g><title>_replace (collections/__init__.py:431) (40 samples, 1.62%)</title><rect x="42.0349%" y="228" width="1.6214%" height="15" fill="rgb(251,28,31)" fg:x="1037" fg:w="40"/><text x="42.2849%" y="238.50"></text></g><g><title>_applyActionSide1 (mdp_opt4.py:97) (64 samples, 2.59%)</title><rect x="41.1026%" y="196" width="2.5942%" height="15" fill="rgb(233,223,10)" fg:x="1014" fg:w="64"/><text x="41.3526%" y="206.50">_a..</text></g><g><title>applyHPChange (mdp_opt4.py:62) (45 samples, 1.82%)</title><rect x="41.8727%" y="212" width="1.8241%" height="15" fill="rgb(215,21,27)" fg:x="1033" fg:w="45"/><text x="42.1227%" y="222.50">a..</text></g><g><title>__new__ (fractions.py:93) (8 samples, 0.32%)</title><rect x="44.5886%" y="212" width="0.3243%" height="15" fill="rgb(232,23,21)" fg:x="1100" fg:w="8"/><text x="44.8386%" y="222.50"></text></g><g><title>_add (fractions.py:453) (3 samples, 0.12%)</title><rect x="45.1155%" y="228" width="0.1216%" height="15" fill="rgb(244,5,23)" fg:x="1113" fg:w="3"/><text x="45.3655%" y="238.50"></text></g><g><title>_add (fractions.py:454) (6 samples, 0.24%)</title><rect x="45.2371%" y="228" width="0.2432%" height="15" fill="rgb(226,81,46)" fg:x="1116" fg:w="6"/><text x="45.4871%" y="238.50"></text></g><g><title>__new__ (fractions.py:142) (3 samples, 0.12%)</title><rect x="45.8857%" y="244" width="0.1216%" height="15" fill="rgb(247,70,30)" fg:x="1132" fg:w="3"/><text x="46.1357%" y="254.50"></text></g><g><title>_add (fractions.py:457) (19 samples, 0.77%)</title><rect x="45.5614%" y="228" width="0.7702%" height="15" fill="rgb(212,68,19)" fg:x="1124" fg:w="19"/><text x="45.8114%" y="238.50"></text></g><g><title>__new__ (fractions.py:93) (7 samples, 0.28%)</title><rect x="46.0478%" y="244" width="0.2837%" height="15" fill="rgb(240,187,13)" fg:x="1136" fg:w="7"/><text x="46.2978%" y="254.50"></text></g><g><title>_applyAction (mdp_opt4.py:106) (147 samples, 5.96%)</title><rect x="40.4945%" y="180" width="5.9587%" height="15" fill="rgb(223,113,26)" fg:x="999" fg:w="147"/><text x="40.7445%" y="190.50">_applyAc..</text></g><g><title>_applyActionSide1 (mdp_opt4.py:98) (68 samples, 2.76%)</title><rect x="43.6968%" y="196" width="2.7564%" height="15" fill="rgb(206,192,2)" fg:x="1078" fg:w="68"/><text x="43.9468%" y="206.50">_a..</text></g><g><title>forward (fractions.py:358) (36 samples, 1.46%)</title><rect x="44.9939%" y="212" width="1.4593%" height="15" fill="rgb(241,108,4)" fg:x="1110" fg:w="36"/><text x="45.2439%" y="222.50"></text></g><g><title>_getSuccessorsC (mdp_opt4.py:160) (278 samples, 11.27%)</title><rect x="35.5087%" y="164" width="11.2687%" height="15" fill="rgb(247,173,49)" fg:x="876" fg:w="278"/><text x="35.7587%" y="174.50">_getSuccessorsC (..</text></g><g><title>_applyAction (mdp_opt4.py:107) (8 samples, 0.32%)</title><rect x="46.4532%" y="180" width="0.3243%" height="15" fill="rgb(224,114,35)" fg:x="1146" fg:w="8"/><text x="46.7032%" y="190.50"></text></g><g><title>&lt;dictcomp&gt; (mdp_opt4.py:107) (8 samples, 0.32%)</title><rect x="46.4532%" y="196" width="0.3243%" height="15" fill="rgb(245,159,27)" fg:x="1146" fg:w="8"/><text x="46.7032%" y="206.50"></text></g><g><title>__new__ (fractions.py:93) (26 samples, 1.05%)</title><rect x="48.1962%" y="180" width="1.0539%" height="15" fill="rgb(245,172,44)" fg:x="1189" fg:w="26"/><text x="48.4462%" y="190.50"></text></g><g><title>_add (fractions.py:453) (7 samples, 0.28%)</title><rect x="49.6149%" y="196" width="0.2837%" height="15" fill="rgb(236,23,11)" fg:x="1224" fg:w="7"/><text x="49.8649%" y="206.50"></text></g><g><title>_add (fractions.py:454) (3 samples, 0.12%)</title><rect x="49.8987%" y="196" width="0.1216%" height="15" fill="rgb(205,117,38)" fg:x="1231" fg:w="3"/><text x="50.1487%" y="206.50"></text></g><g><title>__new__ (fractions.py:93) (19 samples, 0.77%)</title><rect x="50.7904%" y="212" width="0.7702%" height="15" fill="rgb(237,72,25)" fg:x="1253" fg:w="19"/><text x="51.0404%" y="222.50"></text></g><g><title>_getSuccessorsC (mdp_opt4.py:167) (114 samples, 4.62%)</title><rect x="46.9801%" y="164" width="4.6210%" height="15" fill="rgb(244,70,9)" fg:x="1159" fg:w="114"/><text x="47.2301%" y="174.50">_getS..</text></g><g><title>forward (fractions.py:358) (54 samples, 2.19%)</title><rect x="49.4122%" y="180" width="2.1889%" height="15" fill="rgb(217,125,39)" fg:x="1219" fg:w="54"/><text x="49.6622%" y="190.50">f..</text></g><g><title>_add (fractions.py:457) (37 samples, 1.50%)</title><rect x="50.1013%" y="196" width="1.4998%" height="15" fill="rgb(235,36,10)" fg:x="1236" fg:w="37"/><text x="50.3513%" y="206.50"></text></g><g><title>__float__ (numbers.py:291) (10 samples, 0.41%)</title><rect x="52.4118%" y="196" width="0.4054%" height="15" fill="rgb(251,123,47)" fg:x="1293" fg:w="10"/><text x="52.6618%" y="206.50"></text></g><g><title>_richcmp (fractions.py:702) (14 samples, 0.57%)</title><rect x="53.0199%" y="212" width="0.5675%" height="15" fill="rgb(221,13,13)" fg:x="1308" fg:w="14"/><text x="53.2699%" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:119) (4 samples, 0.16%)</title><rect x="53.4252%" y="228" width="0.1621%" height="15" fill="rgb(238,131,9)" fg:x="1318" fg:w="4"/><text x="53.6752%" y="238.50"></text></g><g><title>&lt;genexpr&gt; (mdp_opt4.py:170) (39 samples, 1.58%)</title><rect x="52.0470%" y="180" width="1.5809%" height="15" fill="rgb(211,50,8)" fg:x="1284" fg:w="39"/><text x="52.2970%" y="190.50"></text></g><g><title>__gt__ (fractions.py:719) (20 samples, 0.81%)</title><rect x="52.8172%" y="196" width="0.8107%" height="15" fill="rgb(245,182,24)" fg:x="1303" fg:w="20"/><text x="53.0672%" y="206.50"></text></g><g><title>_getSuccessorsC (mdp_opt4.py:169) (62 samples, 2.51%)</title><rect x="51.6011%" y="164" width="2.5132%" height="15" fill="rgb(242,14,37)" fg:x="1273" fg:w="62"/><text x="51.8511%" y="174.50">_g..</text></g><g><title>&lt;lambda&gt; (mdp_opt4.py:171) (12 samples, 0.49%)</title><rect x="53.6279%" y="180" width="0.4864%" height="15" fill="rgb(246,228,12)" fg:x="1323" fg:w="12"/><text x="53.8779%" y="190.50"></text></g><g><title>getSuccessors (mdp_opt4.py:189) (468 samples, 18.97%)</title><rect x="35.1844%" y="148" width="18.9704%" height="15" fill="rgb(213,55,15)" fg:x="868" fg:w="468"/><text x="35.4344%" y="158.50">getSuccessors (mdp_opt4.py:189)</text></g><g><title>getSuccessors (mdp_opt4.py:191) (6 samples, 0.24%)</title><rect x="54.1548%" y="148" width="0.2432%" height="15" fill="rgb(209,9,3)" fg:x="1336" fg:w="6"/><text x="54.4048%" y="158.50"></text></g><g><title>build_graph (mdp_opt4.py:236) (1,308 samples, 53.02%)</title><rect x="1.4998%" y="132" width="53.0199%" height="15" fill="rgb(230,59,30)" fg:x="37" fg:w="1308"/><text x="1.7498%" y="142.50">build_graph (mdp_opt4.py:236)</text></g><g><title>getSuccessors (mdp_opt4.py:193) (3 samples, 0.12%)</title><rect x="54.3981%" y="148" width="0.1216%" height="15" fill="rgb(209,121,21)" fg:x="1342" fg:w="3"/><text x="54.6481%" y="158.50"></text></g><g><title>build_graph (mdp_opt4.py:239) (13 samples, 0.53%)</title><rect x="54.5602%" y="132" width="0.5270%" height="15" fill="rgb(220,109,13)" fg:x="1346" fg:w="13"/><text x="54.8102%" y="142.50"></text></g><g><title>build_graph (mdp_opt4.py:240) (4 samples, 0.16%)</title><rect x="55.0872%" y="132" width="0.1621%" height="15" fill="rgb(232,18,1)" fg:x="1359" fg:w="4"/><text x="55.3372%" y="142.50"></text></g><g><title>build_graph (mdp_opt4.py:241) (18 samples, 0.73%)</title><rect x="55.2493%" y="132" width="0.7296%" height="15" fill="rgb(215,41,42)" fg:x="1363" fg:w="18"/><text x="55.4993%" y="142.50"></text></g><g><title>evaluate (mdp_opt4.py:259) (1,357 samples, 55.01%)</title><rect x="1.0134%" y="116" width="55.0061%" height="15" fill="rgb(224,123,36)" fg:x="25" fg:w="1357"/><text x="1.2634%" y="126.50">evaluate (mdp_opt4.py:259)</text></g><g><title>topoSort (mdp_opt4.py:11) (4 samples, 0.16%)</title><rect x="56.0600%" y="132" width="0.1621%" height="15" fill="rgb(240,125,3)" fg:x="1383" fg:w="4"/><text x="56.3100%" y="142.50"></text></g><g><title>topoSort (mdp_opt4.py:13) (13 samples, 0.53%)</title><rect x="56.3032%" y="132" width="0.5270%" height="15" fill="rgb(205,98,50)" fg:x="1389" fg:w="13"/><text x="56.5532%" y="142.50"></text></g><g><title>topoSort (mdp_opt4.py:14) (3 samples, 0.12%)</title><rect x="56.8302%" y="132" width="0.1216%" height="15" fill="rgb(205,185,37)" fg:x="1402" fg:w="3"/><text x="57.0802%" y="142.50"></text></g><g><title>getSuccessorsList (mdp_opt4.py:199) (7 samples, 0.28%)</title><rect x="57.1950%" y="148" width="0.2837%" height="15" fill="rgb(238,207,15)" fg:x="1411" fg:w="7"/><text x="57.4450%" y="158.50"></text></g><g><title>topoSort (mdp_opt4.py:16) (14 samples, 0.57%)</title><rect x="56.9518%" y="132" width="0.5675%" height="15" fill="rgb(213,199,42)" fg:x="1405" fg:w="14"/><text x="57.2018%" y="142.50"></text></g><g><title>evaluate (mdp_opt4.py:278) (39 samples, 1.58%)</title><rect x="56.0195%" y="116" width="1.5809%" height="15" fill="rgb(235,201,11)" fg:x="1382" fg:w="39"/><text x="56.2695%" y="126.50"></text></g><g><title>evaluate (mdp_opt4.py:282) (26 samples, 1.05%)</title><rect x="57.6814%" y="116" width="1.0539%" height="15" fill="rgb(207,46,11)" fg:x="1423" fg:w="26"/><text x="57.9314%" y="126.50"></text></g><g><title>evaluate (mdp_opt4.py:283) (18 samples, 0.73%)</title><rect x="58.7353%" y="116" width="0.7296%" height="15" fill="rgb(241,35,35)" fg:x="1449" fg:w="18"/><text x="58.9853%" y="126.50"></text></g><g><title>evaluate (mdp_opt4.py:286) (27 samples, 1.09%)</title><rect x="59.4649%" y="116" width="1.0944%" height="15" fill="rgb(243,32,47)" fg:x="1467" fg:w="27"/><text x="59.7149%" y="126.50"></text></g><g><title>evaluate (mdp_opt4.py:287) (21 samples, 0.85%)</title><rect x="60.5594%" y="116" width="0.8512%" height="15" fill="rgb(247,202,23)" fg:x="1494" fg:w="21"/><text x="60.8094%" y="126.50"></text></g><g><title>evaluate (mdp_opt4.py:288) (45 samples, 1.82%)</title><rect x="61.4106%" y="116" width="1.8241%" height="15" fill="rgb(219,102,11)" fg:x="1515" fg:w="45"/><text x="61.6606%" y="126.50">e..</text></g><g><title>evaluate (mdp_opt4.py:289) (34 samples, 1.38%)</title><rect x="63.2347%" y="116" width="1.3782%" height="15" fill="rgb(243,110,44)" fg:x="1560" fg:w="34"/><text x="63.4847%" y="126.50"></text></g><g><title>evaluate (mdp_opt4.py:290) (37 samples, 1.50%)</title><rect x="64.6129%" y="116" width="1.4998%" height="15" fill="rgb(222,74,54)" fg:x="1594" fg:w="37"/><text x="64.8629%" y="126.50"></text></g><g><title>evaluate (mdp_opt4.py:291) (34 samples, 1.38%)</title><rect x="66.1127%" y="116" width="1.3782%" height="15" fill="rgb(216,99,12)" fg:x="1631" fg:w="34"/><text x="66.3627%" y="126.50"></text></g><g><title>evaluate (mdp_opt4.py:292) (16 samples, 0.65%)</title><rect x="67.4909%" y="116" width="0.6486%" height="15" fill="rgb(226,22,26)" fg:x="1665" fg:w="16"/><text x="67.7409%" y="126.50"></text></g><g><title>evaluate (mdp_opt4.py:293) (16 samples, 0.65%)</title><rect x="68.1394%" y="116" width="0.6486%" height="15" fill="rgb(217,163,10)" fg:x="1681" fg:w="16"/><text x="68.3894%" y="126.50"></text></g><g><title>evaluate (mdp_opt4.py:294) (4 samples, 0.16%)</title><rect x="68.7880%" y="116" width="0.1621%" height="15" fill="rgb(213,25,53)" fg:x="1697" fg:w="4"/><text x="69.0380%" y="126.50"></text></g><g><title>evaluate (mdp_opt4.py:295) (11 samples, 0.45%)</title><rect x="68.9501%" y="116" width="0.4459%" height="15" fill="rgb(252,105,26)" fg:x="1701" fg:w="11"/><text x="69.2001%" y="126.50"></text></g><g><title>evaluate (mdp_opt4.py:297) (14 samples, 0.57%)</title><rect x="69.3960%" y="116" width="0.5675%" height="15" fill="rgb(220,39,43)" fg:x="1712" fg:w="14"/><text x="69.6460%" y="126.50"></text></g><g><title>evaluate (mdp_opt4.py:300) (178 samples, 7.22%)</title><rect x="70.0446%" y="116" width="7.2152%" height="15" fill="rgb(229,68,48)" fg:x="1728" fg:w="178"/><text x="70.2946%" y="126.50">evaluate (..</text></g><g><title>evaluate (mdp_opt4.py:301) (193 samples, 7.82%)</title><rect x="77.2598%" y="116" width="7.8233%" height="15" fill="rgb(252,8,32)" fg:x="1906" fg:w="193"/><text x="77.5098%" y="126.50">evaluate (m..</text></g><g><title>evaluate (mdp_opt4.py:302) (258 samples, 10.46%)</title><rect x="85.0831%" y="116" width="10.4580%" height="15" fill="rgb(223,20,43)" fg:x="2099" fg:w="258"/><text x="85.3331%" y="126.50">evaluate (mdp_o..</text></g><g><title>evaluate (mdp_opt4.py:303) (17 samples, 0.69%)</title><rect x="95.5411%" y="116" width="0.6891%" height="15" fill="rgb(229,81,49)" fg:x="2357" fg:w="17"/><text x="95.7911%" y="126.50"></text></g><g><title>evaluate (mdp_opt4.py:304) (31 samples, 1.26%)</title><rect x="96.2302%" y="116" width="1.2566%" height="15" fill="rgb(236,28,36)" fg:x="2374" fg:w="31"/><text x="96.4802%" y="126.50"></text></g><g><title>all (2,467 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(249,185,26)" fg:x="0" fg:w="2467"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (mdp_opt4.py:332) (2,467 samples, 100.00%)</title><rect x="0.0000%" y="68" width="100.0000%" height="15" fill="rgb(249,174,33)" fg:x="0" fg:w="2467"/><text x="0.2500%" y="78.50">&lt;module&gt; (mdp_opt4.py:332)</text></g><g><title>main (mdp_opt4.py:328) (2,467 samples, 100.00%)</title><rect x="0.0000%" y="84" width="100.0000%" height="15" fill="rgb(233,201,37)" fg:x="0" fg:w="2467"/><text x="0.2500%" y="94.50">main (mdp_opt4.py:328)</text></g><g><title>bench_mdp (mdp_opt4.py:319) (2,467 samples, 100.00%)</title><rect x="0.0000%" y="100" width="100.0000%" height="15" fill="rgb(221,78,26)" fg:x="0" fg:w="2467"/><text x="0.2500%" y="110.50">bench_mdp (mdp_opt4.py:319)</text></g><g><title>evaluate (mdp_opt4.py:306) (62 samples, 2.51%)</title><rect x="97.4868%" y="116" width="2.5132%" height="15" fill="rgb(250,127,30)" fg:x="2405" fg:w="62"/><text x="97.7368%" y="126.50">ev..</text></g></svg></svg>