<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="330" onload="init(evt)" viewBox="0 0 1200 330" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="330" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">.venv_dbg/bin/py-spy record -o results/mdp/mdp_clean/20251025_192939/flamegraph/flamegraph_pyspy_mdp_clean.svg -r 100 -- .venv_dbg/bin/python3 pyperformance/pyperformance/data-files/benchmarks/bm_mdp/no_pyperf_versions/mdp_clean.py</text><text id="details" fill="rgb(0,0,0)" x="10" y="40.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="319.00"> </text><svg id="frames" x="10" width="1180" total_samples="9325"><g><title>topoSort (mdp_clean.py:20) (10 samples, 0.11%)</title><rect x="0.0536%" y="132" width="0.1072%" height="15" fill="rgb(227,0,7)" fg:x="5" fg:w="10"/><text x="0.3036%" y="142.50"></text></g><g><title>topoSort (mdp_clean.py:23) (14 samples, 0.15%)</title><rect x="0.1930%" y="132" width="0.1501%" height="15" fill="rgb(217,0,24)" fg:x="18" fg:w="14"/><text x="0.4430%" y="142.50"></text></g><g><title>getSuccessors (mdp_clean.py:184) (11 samples, 0.12%)</title><rect x="0.6113%" y="164" width="0.1180%" height="15" fill="rgb(221,193,54)" fg:x="57" fg:w="11"/><text x="0.8613%" y="174.50"></text></g><g><title>_applyActionSide1 (mdp_clean.py:93) (28 samples, 0.30%)</title><rect x="1.1475%" y="228" width="0.3003%" height="15" fill="rgb(248,212,6)" fg:x="107" fg:w="28"/><text x="1.3975%" y="238.50"></text></g><g><title>applyHPChange (mdp_clean.py:71) (22 samples, 0.24%)</title><rect x="1.2118%" y="244" width="0.2359%" height="15" fill="rgb(208,68,35)" fg:x="113" fg:w="22"/><text x="1.4618%" y="254.50"></text></g><g><title>_replace (collections/__init__.py:431) (19 samples, 0.20%)</title><rect x="1.2440%" y="260" width="0.2038%" height="15" fill="rgb(232,128,0)" fg:x="116" fg:w="19"/><text x="1.4940%" y="270.50"></text></g><g><title>_make (collections/__init__.py:422) (11 samples, 0.12%)</title><rect x="1.3298%" y="276" width="0.1180%" height="15" fill="rgb(207,160,47)" fg:x="124" fg:w="11"/><text x="1.5798%" y="286.50"></text></g><g><title>_applyActionPair (mdp_clean.py:141) (38 samples, 0.41%)</title><rect x="1.0938%" y="196" width="0.4075%" height="15" fill="rgb(228,23,34)" fg:x="102" fg:w="38"/><text x="1.3438%" y="206.50"></text></g><g><title>_applyAction (mdp_clean.py:114) (36 samples, 0.39%)</title><rect x="1.1153%" y="212" width="0.3861%" height="15" fill="rgb(218,30,26)" fg:x="104" fg:w="36"/><text x="1.3653%" y="222.50"></text></g><g><title>_getSuccessorsB (mdp_clean.py:160) (81 samples, 0.87%)</title><rect x="1.0724%" y="180" width="0.8686%" height="15" fill="rgb(220,122,19)" fg:x="100" fg:w="81"/><text x="1.3224%" y="190.50"></text></g><g><title>_applyActionPair (mdp_clean.py:148) (39 samples, 0.42%)</title><rect x="1.5228%" y="196" width="0.4182%" height="15" fill="rgb(250,228,42)" fg:x="142" fg:w="39"/><text x="1.7728%" y="206.50"></text></g><g><title>forward (fractions.py:358) (22 samples, 0.24%)</title><rect x="1.7051%" y="212" width="0.2359%" height="15" fill="rgb(240,193,28)" fg:x="159" fg:w="22"/><text x="1.9551%" y="222.50"></text></g><g><title>_mul (fractions.py:495) (10 samples, 0.11%)</title><rect x="1.8338%" y="228" width="0.1072%" height="15" fill="rgb(216,20,37)" fg:x="171" fg:w="10"/><text x="2.0838%" y="238.50"></text></g><g><title>getCritDist (mdp_clean.py:44) (17 samples, 0.18%)</title><rect x="2.2198%" y="244" width="0.1823%" height="15" fill="rgb(206,188,39)" fg:x="207" fg:w="17"/><text x="2.4698%" y="254.50"></text></g><g><title>__lt__ (fractions.py:715) (10 samples, 0.11%)</title><rect x="2.2949%" y="260" width="0.1072%" height="15" fill="rgb(217,207,13)" fg:x="214" fg:w="10"/><text x="2.5449%" y="270.50"></text></g><g><title>getCritDist (mdp_clean.py:45) (28 samples, 0.30%)</title><rect x="2.4021%" y="244" width="0.3003%" height="15" fill="rgb(231,73,38)" fg:x="224" fg:w="28"/><text x="2.6521%" y="254.50"></text></g><g><title>getDamages (mdp_clean.py:40) (23 samples, 0.25%)</title><rect x="2.4558%" y="260" width="0.2466%" height="15" fill="rgb(225,20,46)" fg:x="229" fg:w="23"/><text x="2.7058%" y="270.50"></text></g><g><title>&lt;listcomp&gt; (mdp_clean.py:40) (20 samples, 0.21%)</title><rect x="2.4879%" y="276" width="0.2145%" height="15" fill="rgb(210,31,41)" fg:x="232" fg:w="20"/><text x="2.7379%" y="286.50"></text></g><g><title>getCritDist (mdp_clean.py:46) (34 samples, 0.36%)</title><rect x="2.7024%" y="244" width="0.3646%" height="15" fill="rgb(221,200,47)" fg:x="252" fg:w="34"/><text x="2.9524%" y="254.50"></text></g><g><title>getDamages (mdp_clean.py:40) (33 samples, 0.35%)</title><rect x="2.7131%" y="260" width="0.3539%" height="15" fill="rgb(226,26,5)" fg:x="253" fg:w="33"/><text x="2.9631%" y="270.50"></text></g><g><title>&lt;listcomp&gt; (mdp_clean.py:40) (28 samples, 0.30%)</title><rect x="2.7668%" y="276" width="0.3003%" height="15" fill="rgb(249,33,26)" fg:x="258" fg:w="28"/><text x="3.0168%" y="286.50"></text></g><g><title>getCritDist (mdp_clean.py:49) (19 samples, 0.20%)</title><rect x="3.1206%" y="244" width="0.2038%" height="15" fill="rgb(235,183,28)" fg:x="291" fg:w="19"/><text x="3.3706%" y="254.50"></text></g><g><title>getCritDist (mdp_clean.py:50) (25 samples, 0.27%)</title><rect x="3.3244%" y="244" width="0.2681%" height="15" fill="rgb(221,5,38)" fg:x="310" fg:w="25"/><text x="3.5744%" y="254.50"></text></g><g><title>forward (fractions.py:358) (21 samples, 0.23%)</title><rect x="3.3673%" y="260" width="0.2252%" height="15" fill="rgb(247,18,42)" fg:x="314" fg:w="21"/><text x="3.6173%" y="270.50"></text></g><g><title>__new__ (fractions.py:93) (33 samples, 0.35%)</title><rect x="5.4799%" y="260" width="0.3539%" height="15" fill="rgb(241,131,45)" fg:x="511" fg:w="33"/><text x="5.7299%" y="270.50"></text></g><g><title>forward (fractions.py:357) (54 samples, 0.58%)</title><rect x="5.9303%" y="260" width="0.5791%" height="15" fill="rgb(249,31,29)" fg:x="553" fg:w="54"/><text x="6.1803%" y="270.50"></text></g><g><title>_add (fractions.py:453) (89 samples, 0.95%)</title><rect x="7.1850%" y="276" width="0.9544%" height="15" fill="rgb(225,111,53)" fg:x="670" fg:w="89"/><text x="7.4350%" y="286.50"></text></g><g><title>denominator (fractions.py:262) (11 samples, 0.12%)</title><rect x="8.8257%" y="292" width="0.1180%" height="15" fill="rgb(238,160,17)" fg:x="823" fg:w="11"/><text x="9.0757%" y="302.50"></text></g><g><title>_add (fractions.py:454) (88 samples, 0.94%)</title><rect x="8.1394%" y="276" width="0.9437%" height="15" fill="rgb(214,148,48)" fg:x="759" fg:w="88"/><text x="8.3894%" y="286.50"></text></g><g><title>numerator (fractions.py:258) (13 samples, 0.14%)</title><rect x="8.9437%" y="292" width="0.1394%" height="15" fill="rgb(232,36,49)" fg:x="834" fg:w="13"/><text x="9.1937%" y="302.50"></text></g><g><title>_add (fractions.py:455) (53 samples, 0.57%)</title><rect x="9.0831%" y="276" width="0.5684%" height="15" fill="rgb(209,103,24)" fg:x="847" fg:w="53"/><text x="9.3331%" y="286.50"></text></g><g><title>__new__ (fractions.py:142) (11 samples, 0.12%)</title><rect x="10.0697%" y="292" width="0.1180%" height="15" fill="rgb(229,88,8)" fg:x="939" fg:w="11"/><text x="10.3197%" y="302.50"></text></g><g><title>__new__ (fractions.py:93) (32 samples, 0.34%)</title><rect x="10.3164%" y="292" width="0.3432%" height="15" fill="rgb(213,181,19)" fg:x="962" fg:w="32"/><text x="10.5664%" y="302.50"></text></g><g><title>_add (fractions.py:457) (91 samples, 0.98%)</title><rect x="9.7051%" y="276" width="0.9759%" height="15" fill="rgb(254,191,54)" fg:x="905" fg:w="91"/><text x="9.9551%" y="286.50"></text></g><g><title>_add (fractions.py:458) (16 samples, 0.17%)</title><rect x="10.6810%" y="276" width="0.1716%" height="15" fill="rgb(241,83,37)" fg:x="996" fg:w="16"/><text x="10.9310%" y="286.50"></text></g><g><title>_add (fractions.py:459) (52 samples, 0.56%)</title><rect x="10.8525%" y="276" width="0.5576%" height="15" fill="rgb(233,36,39)" fg:x="1012" fg:w="52"/><text x="11.1025%" y="286.50"></text></g><g><title>_add (fractions.py:460) (54 samples, 0.58%)</title><rect x="11.4102%" y="276" width="0.5791%" height="15" fill="rgb(226,3,54)" fg:x="1064" fg:w="54"/><text x="11.6602%" y="286.50"></text></g><g><title>__new__ (fractions.py:93) (24 samples, 0.26%)</title><rect x="12.6756%" y="292" width="0.2574%" height="15" fill="rgb(245,192,40)" fg:x="1182" fg:w="24"/><text x="12.9256%" y="302.50"></text></g><g><title>_add (fractions.py:462) (85 samples, 0.91%)</title><rect x="12.0322%" y="276" width="0.9115%" height="15" fill="rgb(238,167,29)" fg:x="1122" fg:w="85"/><text x="12.2822%" y="286.50"></text></g><g><title>__new__ (fractions.py:142) (18 samples, 0.19%)</title><rect x="14.3592%" y="292" width="0.1930%" height="15" fill="rgb(232,182,51)" fg:x="1339" fg:w="18"/><text x="14.6092%" y="302.50"></text></g><g><title>__new__ (fractions.py:165) (10 samples, 0.11%)</title><rect x="14.7024%" y="292" width="0.1072%" height="15" fill="rgb(231,60,39)" fg:x="1371" fg:w="10"/><text x="14.9524%" y="302.50"></text></g><g><title>__new__ (fractions.py:93) (89 samples, 0.95%)</title><rect x="14.8097%" y="292" width="0.9544%" height="15" fill="rgb(208,69,12)" fg:x="1381" fg:w="89"/><text x="15.0597%" y="302.50"></text></g><g><title>_applyActionSide1 (mdp_clean.py:100) (1,278 samples, 13.71%)</title><rect x="2.1126%" y="228" width="13.7051%" height="15" fill="rgb(235,93,37)" fg:x="197" fg:w="1278"/><text x="2.3626%" y="238.50">_applyActionSide1 (md..</text></g><g><title>getCritDist (mdp_clean.py:52) (1,131 samples, 12.13%)</title><rect x="3.6890%" y="244" width="12.1287%" height="15" fill="rgb(213,116,39)" fg:x="344" fg:w="1131"/><text x="3.9390%" y="254.50">getCritDist (mdp_c..</text></g><g><title>forward (fractions.py:358) (868 samples, 9.31%)</title><rect x="6.5094%" y="260" width="9.3083%" height="15" fill="rgb(222,207,29)" fg:x="607" fg:w="868"/><text x="6.7594%" y="270.50">forward (frac..</text></g><g><title>_add (fractions.py:463) (268 samples, 2.87%)</title><rect x="12.9437%" y="276" width="2.8740%" height="15" fill="rgb(206,96,30)" fg:x="1207" fg:w="268"/><text x="13.1937%" y="286.50">_a..</text></g><g><title>applyHPChange (mdp_clean.py:70) (60 samples, 0.64%)</title><rect x="16.1287%" y="244" width="0.6434%" height="15" fill="rgb(218,138,4)" fg:x="1504" fg:w="60"/><text x="16.3787%" y="254.50"></text></g><g><title>_make (collections/__init__.py:422) (53 samples, 0.57%)</title><rect x="17.5657%" y="276" width="0.5684%" height="15" fill="rgb(250,191,14)" fg:x="1638" fg:w="53"/><text x="17.8157%" y="286.50"></text></g><g><title>_replace (collections/__init__.py:431) (108 samples, 1.16%)</title><rect x="17.0402%" y="260" width="1.1582%" height="15" fill="rgb(239,60,40)" fg:x="1589" fg:w="108"/><text x="17.2902%" y="270.50"></text></g><g><title>_applyActionSide1 (mdp_clean.py:107) (207 samples, 2.22%)</title><rect x="15.9893%" y="228" width="2.2198%" height="15" fill="rgb(206,27,48)" fg:x="1491" fg:w="207"/><text x="16.2393%" y="238.50">_..</text></g><g><title>applyHPChange (mdp_clean.py:71) (134 samples, 1.44%)</title><rect x="16.7721%" y="244" width="1.4370%" height="15" fill="rgb(225,35,8)" fg:x="1564" fg:w="134"/><text x="17.0221%" y="254.50"></text></g><g><title>forward (fractions.py:357) (10 samples, 0.11%)</title><rect x="18.9812%" y="244" width="0.1072%" height="15" fill="rgb(250,213,24)" fg:x="1770" fg:w="10"/><text x="19.2312%" y="254.50"></text></g><g><title>_add (fractions.py:453) (21 samples, 0.23%)</title><rect x="19.2064%" y="260" width="0.2252%" height="15" fill="rgb(247,123,22)" fg:x="1791" fg:w="21"/><text x="19.4564%" y="270.50"></text></g><g><title>_add (fractions.py:454) (12 samples, 0.13%)</title><rect x="19.4316%" y="260" width="0.1287%" height="15" fill="rgb(231,138,38)" fg:x="1812" fg:w="12"/><text x="19.6816%" y="270.50"></text></g><g><title>_add (fractions.py:455) (11 samples, 0.12%)</title><rect x="19.5603%" y="260" width="0.1180%" height="15" fill="rgb(231,145,46)" fg:x="1824" fg:w="11"/><text x="19.8103%" y="270.50"></text></g><g><title>_add (fractions.py:457) (20 samples, 0.21%)</title><rect x="19.6997%" y="260" width="0.2145%" height="15" fill="rgb(251,118,11)" fg:x="1837" fg:w="20"/><text x="19.9497%" y="270.50"></text></g><g><title>_add (fractions.py:459) (11 samples, 0.12%)</title><rect x="19.9464%" y="260" width="0.1180%" height="15" fill="rgb(217,147,25)" fg:x="1860" fg:w="11"/><text x="20.1964%" y="270.50"></text></g><g><title>_add (fractions.py:460) (16 samples, 0.17%)</title><rect x="20.0643%" y="260" width="0.1716%" height="15" fill="rgb(247,81,37)" fg:x="1871" fg:w="16"/><text x="20.3143%" y="270.50"></text></g><g><title>_add (fractions.py:462) (28 samples, 0.30%)</title><rect x="20.2359%" y="260" width="0.3003%" height="15" fill="rgb(209,12,38)" fg:x="1887" fg:w="28"/><text x="20.4859%" y="270.50"></text></g><g><title>__new__ (fractions.py:93) (11 samples, 0.12%)</title><rect x="20.4182%" y="276" width="0.1180%" height="15" fill="rgb(227,1,9)" fg:x="1904" fg:w="11"/><text x="20.6682%" y="286.50"></text></g><g><title>__new__ (fractions.py:93) (16 samples, 0.17%)</title><rect x="20.8257%" y="276" width="0.1716%" height="15" fill="rgb(248,47,43)" fg:x="1942" fg:w="16"/><text x="21.0757%" y="286.50"></text></g><g><title>_applyActionSide1 (mdp_clean.py:108) (261 samples, 2.80%)</title><rect x="18.2091%" y="228" width="2.7989%" height="15" fill="rgb(221,10,30)" fg:x="1698" fg:w="261"/><text x="18.4591%" y="238.50">_a..</text></g><g><title>forward (fractions.py:358) (179 samples, 1.92%)</title><rect x="19.0885%" y="244" width="1.9196%" height="15" fill="rgb(210,229,1)" fg:x="1780" fg:w="179"/><text x="19.3385%" y="254.50">f..</text></g><g><title>_add (fractions.py:463) (44 samples, 0.47%)</title><rect x="20.5362%" y="260" width="0.4718%" height="15" fill="rgb(222,148,37)" fg:x="1915" fg:w="44"/><text x="20.7862%" y="270.50"></text></g><g><title>_applyAction (mdp_clean.py:117) (1,771 samples, 18.99%)</title><rect x="2.0375%" y="212" width="18.9920%" height="15" fill="rgb(234,67,33)" fg:x="190" fg:w="1771"/><text x="2.2875%" y="222.50">_applyAction (mdp_clean.py:117)</text></g><g><title>_applyActionPair (mdp_clean.py:141) (1,789 samples, 19.18%)</title><rect x="1.9732%" y="196" width="19.1850%" height="15" fill="rgb(247,98,35)" fg:x="184" fg:w="1789"/><text x="2.2232%" y="206.50">_applyActionPair (mdp_clean.py..</text></g><g><title>_applyAction (mdp_clean.py:118) (12 samples, 0.13%)</title><rect x="21.0295%" y="212" width="0.1287%" height="15" fill="rgb(247,138,52)" fg:x="1961" fg:w="12"/><text x="21.2795%" y="222.50"></text></g><g><title>_add (fractions.py:457) (15 samples, 0.16%)</title><rect x="21.9088%" y="228" width="0.1609%" height="15" fill="rgb(213,79,30)" fg:x="2043" fg:w="15"/><text x="22.1588%" y="238.50"></text></g><g><title>_getSuccessorsB (mdp_clean.py:162) (1,921 samples, 20.60%)</title><rect x="1.9410%" y="180" width="20.6005%" height="15" fill="rgb(246,177,23)" fg:x="181" fg:w="1921"/><text x="2.1910%" y="190.50">_getSuccessorsB (mdp_clean.py:16..</text></g><g><title>_applyActionPair (mdp_clean.py:148) (124 samples, 1.33%)</title><rect x="21.2118%" y="196" width="1.3298%" height="15" fill="rgb(230,62,27)" fg:x="1978" fg:w="124"/><text x="21.4618%" y="206.50"></text></g><g><title>forward (fractions.py:358) (74 samples, 0.79%)</title><rect x="21.7480%" y="212" width="0.7936%" height="15" fill="rgb(216,154,8)" fg:x="2028" fg:w="74"/><text x="21.9980%" y="222.50"></text></g><g><title>_mul (fractions.py:495) (18 samples, 0.19%)</title><rect x="22.3485%" y="228" width="0.1930%" height="15" fill="rgb(244,35,45)" fg:x="2084" fg:w="18"/><text x="22.5985%" y="238.50"></text></g><g><title>__float__ (numbers.py:291) (10 samples, 0.11%)</title><rect x="22.7024%" y="212" width="0.1072%" height="15" fill="rgb(251,115,12)" fg:x="2117" fg:w="10"/><text x="22.9524%" y="222.50"></text></g><g><title>getSuccessors (mdp_clean.py:191) (2,076 samples, 22.26%)</title><rect x="0.7721%" y="164" width="22.2627%" height="15" fill="rgb(240,54,50)" fg:x="72" fg:w="2076"/><text x="1.0221%" y="174.50">getSuccessors (mdp_clean.py:191)</text></g><g><title>_getSuccessorsB (mdp_clean.py:167) (46 samples, 0.49%)</title><rect x="22.5416%" y="180" width="0.4933%" height="15" fill="rgb(233,84,52)" fg:x="2102" fg:w="46"/><text x="22.7916%" y="190.50"></text></g><g><title>&lt;dictcomp&gt; (mdp_clean.py:167) (44 samples, 0.47%)</title><rect x="22.5630%" y="196" width="0.4718%" height="15" fill="rgb(207,117,47)" fg:x="2104" fg:w="44"/><text x="22.8130%" y="206.50"></text></g><g><title>__gt__ (fractions.py:719) (21 samples, 0.23%)</title><rect x="22.8097%" y="212" width="0.2252%" height="15" fill="rgb(249,43,39)" fg:x="2127" fg:w="21"/><text x="23.0597%" y="222.50"></text></g><g><title>_richcmp (fractions.py:703) (10 samples, 0.11%)</title><rect x="22.9276%" y="228" width="0.1072%" height="15" fill="rgb(209,38,44)" fg:x="2138" fg:w="10"/><text x="23.1776%" y="238.50"></text></g><g><title>getCritDist (mdp_clean.py:44) (10 samples, 0.11%)</title><rect x="23.1743%" y="228" width="0.1072%" height="15" fill="rgb(236,212,23)" fg:x="2161" fg:w="10"/><text x="23.4243%" y="238.50"></text></g><g><title>getCritDist (mdp_clean.py:46) (12 samples, 0.13%)</title><rect x="23.3780%" y="228" width="0.1287%" height="15" fill="rgb(242,79,21)" fg:x="2180" fg:w="12"/><text x="23.6280%" y="238.50"></text></g><g><title>getDamages (mdp_clean.py:40) (10 samples, 0.11%)</title><rect x="23.3995%" y="244" width="0.1072%" height="15" fill="rgb(211,96,35)" fg:x="2182" fg:w="10"/><text x="23.6495%" y="254.50"></text></g><g><title>forward (fractions.py:357) (15 samples, 0.16%)</title><rect x="24.1930%" y="244" width="0.1609%" height="15" fill="rgb(253,215,40)" fg:x="2256" fg:w="15"/><text x="24.4430%" y="254.50"></text></g><g><title>_add (fractions.py:453) (24 samples, 0.26%)</title><rect x="24.4718%" y="260" width="0.2574%" height="15" fill="rgb(211,81,21)" fg:x="2282" fg:w="24"/><text x="24.7218%" y="270.50"></text></g><g><title>_add (fractions.py:454) (21 samples, 0.23%)</title><rect x="24.7292%" y="260" width="0.2252%" height="15" fill="rgb(208,190,38)" fg:x="2306" fg:w="21"/><text x="24.9792%" y="270.50"></text></g><g><title>_add (fractions.py:455) (11 samples, 0.12%)</title><rect x="24.9544%" y="260" width="0.1180%" height="15" fill="rgb(235,213,38)" fg:x="2327" fg:w="11"/><text x="25.2044%" y="270.50"></text></g><g><title>_add (fractions.py:457) (23 samples, 0.25%)</title><rect x="25.1260%" y="260" width="0.2466%" height="15" fill="rgb(237,122,38)" fg:x="2343" fg:w="23"/><text x="25.3760%" y="270.50"></text></g><g><title>__new__ (fractions.py:93) (13 samples, 0.14%)</title><rect x="25.2332%" y="276" width="0.1394%" height="15" fill="rgb(244,218,35)" fg:x="2353" fg:w="13"/><text x="25.4832%" y="286.50"></text></g><g><title>_add (fractions.py:460) (12 samples, 0.13%)</title><rect x="25.4692%" y="260" width="0.1287%" height="15" fill="rgb(240,68,47)" fg:x="2375" fg:w="12"/><text x="25.7192%" y="270.50"></text></g><g><title>_add (fractions.py:462) (37 samples, 0.40%)</title><rect x="25.6193%" y="260" width="0.3968%" height="15" fill="rgb(210,16,53)" fg:x="2389" fg:w="37"/><text x="25.8693%" y="270.50"></text></g><g><title>__new__ (fractions.py:93) (14 samples, 0.15%)</title><rect x="25.8660%" y="276" width="0.1501%" height="15" fill="rgb(235,124,12)" fg:x="2412" fg:w="14"/><text x="26.1160%" y="286.50"></text></g><g><title>__new__ (fractions.py:93) (15 samples, 0.16%)</title><rect x="26.5416%" y="276" width="0.1609%" height="15" fill="rgb(224,169,11)" fg:x="2475" fg:w="15"/><text x="26.7916%" y="286.50"></text></g><g><title>_applyActionSide1 (mdp_clean.py:100) (334 samples, 3.58%)</title><rect x="23.1314%" y="212" width="3.5818%" height="15" fill="rgb(250,166,2)" fg:x="2157" fg:w="334"/><text x="23.3814%" y="222.50">_app..</text></g><g><title>getCritDist (mdp_clean.py:52) (285 samples, 3.06%)</title><rect x="23.6568%" y="228" width="3.0563%" height="15" fill="rgb(242,216,29)" fg:x="2206" fg:w="285"/><text x="23.9068%" y="238.50">get..</text></g><g><title>forward (fractions.py:358) (220 samples, 2.36%)</title><rect x="24.3539%" y="244" width="2.3592%" height="15" fill="rgb(230,116,27)" fg:x="2271" fg:w="220"/><text x="24.6039%" y="254.50">f..</text></g><g><title>_add (fractions.py:463) (65 samples, 0.70%)</title><rect x="26.0161%" y="260" width="0.6971%" height="15" fill="rgb(228,99,48)" fg:x="2426" fg:w="65"/><text x="26.2661%" y="270.50"></text></g><g><title>applyHPChange (mdp_clean.py:70) (11 samples, 0.12%)</title><rect x="26.7560%" y="228" width="0.1180%" height="15" fill="rgb(253,11,6)" fg:x="2495" fg:w="11"/><text x="27.0060%" y="238.50"></text></g><g><title>_make (collections/__init__.py:422) (15 samples, 0.16%)</title><rect x="27.0992%" y="260" width="0.1609%" height="15" fill="rgb(247,143,39)" fg:x="2527" fg:w="15"/><text x="27.3492%" y="270.50"></text></g><g><title>_applyActionSide1 (mdp_clean.py:107) (53 samples, 0.57%)</title><rect x="26.7131%" y="212" width="0.5684%" height="15" fill="rgb(236,97,10)" fg:x="2491" fg:w="53"/><text x="26.9631%" y="222.50"></text></g><g><title>applyHPChange (mdp_clean.py:71) (38 samples, 0.41%)</title><rect x="26.8740%" y="228" width="0.4075%" height="15" fill="rgb(233,208,19)" fg:x="2506" fg:w="38"/><text x="27.1240%" y="238.50"></text></g><g><title>_replace (collections/__init__.py:431) (32 samples, 0.34%)</title><rect x="26.9383%" y="244" width="0.3432%" height="15" fill="rgb(216,164,2)" fg:x="2512" fg:w="32"/><text x="27.1883%" y="254.50"></text></g><g><title>_applyAction (mdp_clean.py:114) (449 samples, 4.82%)</title><rect x="23.1099%" y="196" width="4.8150%" height="15" fill="rgb(220,129,5)" fg:x="2155" fg:w="449"/><text x="23.3599%" y="206.50">_apply..</text></g><g><title>_applyActionSide1 (mdp_clean.py:108) (60 samples, 0.64%)</title><rect x="27.2815%" y="212" width="0.6434%" height="15" fill="rgb(242,17,10)" fg:x="2544" fg:w="60"/><text x="27.5315%" y="222.50"></text></g><g><title>forward (fractions.py:358) (39 samples, 0.42%)</title><rect x="27.5067%" y="228" width="0.4182%" height="15" fill="rgb(242,107,0)" fg:x="2565" fg:w="39"/><text x="27.7567%" y="238.50"></text></g><g><title>getCritDist (mdp_clean.py:45) (17 samples, 0.18%)</title><rect x="28.0214%" y="228" width="0.1823%" height="15" fill="rgb(251,28,31)" fg:x="2613" fg:w="17"/><text x="28.2714%" y="238.50"></text></g><g><title>getDamages (mdp_clean.py:40) (14 samples, 0.15%)</title><rect x="28.0536%" y="244" width="0.1501%" height="15" fill="rgb(233,223,10)" fg:x="2616" fg:w="14"/><text x="28.3036%" y="254.50"></text></g><g><title>&lt;listcomp&gt; (mdp_clean.py:40) (12 samples, 0.13%)</title><rect x="28.0751%" y="260" width="0.1287%" height="15" fill="rgb(215,21,27)" fg:x="2618" fg:w="12"/><text x="28.3251%" y="270.50"></text></g><g><title>getCritDist (mdp_clean.py:46) (16 samples, 0.17%)</title><rect x="28.2038%" y="228" width="0.1716%" height="15" fill="rgb(232,23,21)" fg:x="2630" fg:w="16"/><text x="28.4538%" y="238.50"></text></g><g><title>getDamages (mdp_clean.py:40) (15 samples, 0.16%)</title><rect x="28.2145%" y="244" width="0.1609%" height="15" fill="rgb(244,5,23)" fg:x="2631" fg:w="15"/><text x="28.4645%" y="254.50"></text></g><g><title>&lt;listcomp&gt; (mdp_clean.py:40) (13 samples, 0.14%)</title><rect x="28.2359%" y="260" width="0.1394%" height="15" fill="rgb(226,81,46)" fg:x="2633" fg:w="13"/><text x="28.4859%" y="270.50"></text></g><g><title>getCritDist (mdp_clean.py:49) (10 samples, 0.11%)</title><rect x="28.3753%" y="228" width="0.1072%" height="15" fill="rgb(247,70,30)" fg:x="2646" fg:w="10"/><text x="28.6253%" y="238.50"></text></g><g><title>__new__ (fractions.py:93) (18 samples, 0.19%)</title><rect x="29.2332%" y="244" width="0.1930%" height="15" fill="rgb(212,68,19)" fg:x="2726" fg:w="18"/><text x="29.4832%" y="254.50"></text></g><g><title>forward (fractions.py:357) (13 samples, 0.14%)</title><rect x="29.4584%" y="244" width="0.1394%" height="15" fill="rgb(240,187,13)" fg:x="2747" fg:w="13"/><text x="29.7084%" y="254.50"></text></g><g><title>_add (fractions.py:453) (16 samples, 0.17%)</title><rect x="29.7373%" y="260" width="0.1716%" height="15" fill="rgb(223,113,26)" fg:x="2773" fg:w="16"/><text x="29.9873%" y="270.50"></text></g><g><title>_add (fractions.py:454) (22 samples, 0.24%)</title><rect x="29.9088%" y="260" width="0.2359%" height="15" fill="rgb(206,192,2)" fg:x="2789" fg:w="22"/><text x="30.1588%" y="270.50"></text></g><g><title>_add (fractions.py:455) (12 samples, 0.13%)</title><rect x="30.1448%" y="260" width="0.1287%" height="15" fill="rgb(241,108,4)" fg:x="2811" fg:w="12"/><text x="30.3948%" y="270.50"></text></g><g><title>_add (fractions.py:457) (21 samples, 0.23%)</title><rect x="30.3056%" y="260" width="0.2252%" height="15" fill="rgb(247,173,49)" fg:x="2826" fg:w="21"/><text x="30.5556%" y="270.50"></text></g><g><title>_add (fractions.py:459) (17 samples, 0.18%)</title><rect x="30.5737%" y="260" width="0.1823%" height="15" fill="rgb(224,114,35)" fg:x="2851" fg:w="17"/><text x="30.8237%" y="270.50"></text></g><g><title>_add (fractions.py:460) (20 samples, 0.21%)</title><rect x="30.7560%" y="260" width="0.2145%" height="15" fill="rgb(245,159,27)" fg:x="2868" fg:w="20"/><text x="31.0060%" y="270.50"></text></g><g><title>_add (fractions.py:462) (23 samples, 0.25%)</title><rect x="30.9812%" y="260" width="0.2466%" height="15" fill="rgb(245,172,44)" fg:x="2889" fg:w="23"/><text x="31.2312%" y="270.50"></text></g><g><title>__new__ (fractions.py:93) (21 samples, 0.23%)</title><rect x="31.8499%" y="276" width="0.2252%" height="15" fill="rgb(236,23,11)" fg:x="2970" fg:w="21"/><text x="32.0999%" y="286.50"></text></g><g><title>_applyActionSide1 (mdp_clean.py:100) (384 samples, 4.12%)</title><rect x="27.9678%" y="212" width="4.1180%" height="15" fill="rgb(205,117,38)" fg:x="2608" fg:w="384"/><text x="28.2178%" y="222.50">_app..</text></g><g><title>getCritDist (mdp_clean.py:52) (327 samples, 3.51%)</title><rect x="28.5791%" y="228" width="3.5067%" height="15" fill="rgb(237,72,25)" fg:x="2665" fg:w="327"/><text x="28.8291%" y="238.50">get..</text></g><g><title>forward (fractions.py:358) (232 samples, 2.49%)</title><rect x="29.5979%" y="244" width="2.4879%" height="15" fill="rgb(244,70,9)" fg:x="2760" fg:w="232"/><text x="29.8479%" y="254.50">fo..</text></g><g><title>_add (fractions.py:463) (80 samples, 0.86%)</title><rect x="31.2279%" y="260" width="0.8579%" height="15" fill="rgb(217,125,39)" fg:x="2912" fg:w="80"/><text x="31.4779%" y="270.50"></text></g><g><title>_make (collections/__init__.py:422) (37 samples, 0.40%)</title><rect x="32.4718%" y="260" width="0.3968%" height="15" fill="rgb(235,36,10)" fg:x="3028" fg:w="37"/><text x="32.7218%" y="270.50"></text></g><g><title>_replace (collections/__init__.py:431) (50 samples, 0.54%)</title><rect x="32.3432%" y="244" width="0.5362%" height="15" fill="rgb(251,123,47)" fg:x="3016" fg:w="50"/><text x="32.5932%" y="254.50"></text></g><g><title>_applyActionSide1 (mdp_clean.py:107) (74 samples, 0.79%)</title><rect x="32.1072%" y="212" width="0.7936%" height="15" fill="rgb(221,13,13)" fg:x="2994" fg:w="74"/><text x="32.3572%" y="222.50"></text></g><g><title>applyHPChange (mdp_clean.py:71) (60 samples, 0.64%)</title><rect x="32.2574%" y="228" width="0.6434%" height="15" fill="rgb(238,131,9)" fg:x="3008" fg:w="60"/><text x="32.5074%" y="238.50"></text></g><g><title>__new__ (fractions.py:93) (10 samples, 0.11%)</title><rect x="33.2225%" y="228" width="0.1072%" height="15" fill="rgb(211,50,8)" fg:x="3098" fg:w="10"/><text x="33.4725%" y="238.50"></text></g><g><title>_add (fractions.py:457) (26 samples, 0.28%)</title><rect x="33.6193%" y="244" width="0.2788%" height="15" fill="rgb(245,182,24)" fg:x="3135" fg:w="26"/><text x="33.8693%" y="254.50"></text></g><g><title>_applyActionSide1 (mdp_clean.py:108) (95 samples, 1.02%)</title><rect x="32.9008%" y="212" width="1.0188%" height="15" fill="rgb(242,14,37)" fg:x="3068" fg:w="95"/><text x="33.1508%" y="222.50"></text></g><g><title>forward (fractions.py:358) (47 samples, 0.50%)</title><rect x="33.4155%" y="228" width="0.5040%" height="15" fill="rgb(246,228,12)" fg:x="3116" fg:w="47"/><text x="33.6655%" y="238.50"></text></g><g><title>_applyAction (mdp_clean.py:117) (560 samples, 6.01%)</title><rect x="27.9249%" y="196" width="6.0054%" height="15" fill="rgb(213,55,15)" fg:x="2604" fg:w="560"/><text x="28.1749%" y="206.50">_applyAc..</text></g><g><title>_getSuccessorsC (mdp_clean.py:172) (1,025 samples, 10.99%)</title><rect x="23.0670%" y="180" width="10.9920%" height="15" fill="rgb(209,9,3)" fg:x="2151" fg:w="1025"/><text x="23.3170%" y="190.50">_getSuccessorsC ..</text></g><g><title>_applyAction (mdp_clean.py:118) (12 samples, 0.13%)</title><rect x="33.9303%" y="196" width="0.1287%" height="15" fill="rgb(230,59,30)" fg:x="3164" fg:w="12"/><text x="34.1803%" y="206.50"></text></g><g><title>&lt;dictcomp&gt; (mdp_clean.py:118) (12 samples, 0.13%)</title><rect x="33.9303%" y="212" width="0.1287%" height="15" fill="rgb(209,121,21)" fg:x="3164" fg:w="12"/><text x="34.1803%" y="222.50"></text></g><g><title>_add (fractions.py:453) (10 samples, 0.11%)</title><rect x="34.5094%" y="212" width="0.1072%" height="15" fill="rgb(220,109,13)" fg:x="3218" fg:w="10"/><text x="34.7594%" y="222.50"></text></g><g><title>_getSuccessorsC (mdp_clean.py:179) (83 samples, 0.89%)</title><rect x="34.1019%" y="180" width="0.8901%" height="15" fill="rgb(232,18,1)" fg:x="3180" fg:w="83"/><text x="34.3519%" y="190.50"></text></g><g><title>forward (fractions.py:358) (46 samples, 0.49%)</title><rect x="34.4987%" y="196" width="0.4933%" height="15" fill="rgb(215,41,42)" fg:x="3217" fg:w="46"/><text x="34.7487%" y="206.50"></text></g><g><title>_add (fractions.py:457) (29 samples, 0.31%)</title><rect x="34.6810%" y="212" width="0.3110%" height="15" fill="rgb(224,123,36)" fg:x="3234" fg:w="29"/><text x="34.9310%" y="222.50"></text></g><g><title>__new__ (fractions.py:93) (13 samples, 0.14%)</title><rect x="34.8525%" y="228" width="0.1394%" height="15" fill="rgb(240,125,3)" fg:x="3250" fg:w="13"/><text x="35.1025%" y="238.50"></text></g><g><title>_richcmp (fractions.py:702) (19 samples, 0.20%)</title><rect x="35.2815%" y="228" width="0.2038%" height="15" fill="rgb(205,98,50)" fg:x="3290" fg:w="19"/><text x="35.5315%" y="238.50"></text></g><g><title>getSuccessors (mdp_clean.py:193) (1,166 samples, 12.50%)</title><rect x="23.0349%" y="164" width="12.5040%" height="15" fill="rgb(205,185,37)" fg:x="2148" fg:w="1166"/><text x="23.2849%" y="174.50">getSuccessors (mdp_..</text></g><g><title>_getSuccessorsC (mdp_clean.py:180) (51 samples, 0.55%)</title><rect x="34.9920%" y="180" width="0.5469%" height="15" fill="rgb(238,207,15)" fg:x="3263" fg:w="51"/><text x="35.2420%" y="190.50"></text></g><g><title>&lt;dictcomp&gt; (mdp_clean.py:180) (46 samples, 0.49%)</title><rect x="35.0456%" y="196" width="0.4933%" height="15" fill="rgb(213,199,42)" fg:x="3268" fg:w="46"/><text x="35.2956%" y="206.50"></text></g><g><title>__gt__ (fractions.py:719) (29 samples, 0.31%)</title><rect x="35.2279%" y="212" width="0.3110%" height="15" fill="rgb(235,201,11)" fg:x="3285" fg:w="29"/><text x="35.4779%" y="222.50"></text></g><g><title>getSuccessors (mdp_clean.py:194) (31 samples, 0.33%)</title><rect x="35.5389%" y="164" width="0.3324%" height="15" fill="rgb(207,46,11)" fg:x="3314" fg:w="31"/><text x="35.7889%" y="174.50"></text></g><g><title>getSuccessorsList (mdp_clean.py:201) (3,292 samples, 35.30%)</title><rect x="0.5898%" y="148" width="35.3029%" height="15" fill="rgb(241,35,35)" fg:x="55" fg:w="3292"/><text x="0.8398%" y="158.50">getSuccessorsList (mdp_clean.py:201)</text></g><g><title>topoSort (mdp_clean.py:26) (3,330 samples, 35.71%)</title><rect x="0.4075%" y="132" width="35.7105%" height="15" fill="rgb(243,32,47)" fg:x="38" fg:w="3330"/><text x="0.6575%" y="142.50">topoSort (mdp_clean.py:26)</text></g><g><title>getSuccessorsList (mdp_clean.py:203) (21 samples, 0.23%)</title><rect x="35.8928%" y="148" width="0.2252%" height="15" fill="rgb(247,202,23)" fg:x="3347" fg:w="21"/><text x="36.1428%" y="158.50"></text></g><g><title>evaluate (mdp_clean.py:219) (3,369 samples, 36.13%)</title><rect x="0.0536%" y="116" width="36.1287%" height="15" fill="rgb(219,102,11)" fg:x="5" fg:w="3369"/><text x="0.3036%" y="126.50">evaluate (mdp_clean.py:219)</text></g><g><title>evaluate (mdp_clean.py:225) (23 samples, 0.25%)</title><rect x="36.2038%" y="116" width="0.2466%" height="15" fill="rgb(243,110,44)" fg:x="3376" fg:w="23"/><text x="36.4538%" y="126.50"></text></g><g><title>evaluate (mdp_clean.py:226) (231 samples, 2.48%)</title><rect x="36.4504%" y="116" width="2.4772%" height="15" fill="rgb(222,74,54)" fg:x="3399" fg:w="231"/><text x="36.7004%" y="126.50">ev..</text></g><g><title>evaluate (mdp_clean.py:229) (21 samples, 0.23%)</title><rect x="38.9276%" y="116" width="0.2252%" height="15" fill="rgb(216,99,12)" fg:x="3630" fg:w="21"/><text x="39.1776%" y="126.50"></text></g><g><title>&lt;genexpr&gt; (mdp_clean.py:231) (164 samples, 1.76%)</title><rect x="42.3056%" y="132" width="1.7587%" height="15" fill="rgb(226,22,26)" fg:x="3945" fg:w="164"/><text x="42.5556%" y="142.50"></text></g><g><title>evaluate (mdp_clean.py:231) (542 samples, 5.81%)</title><rect x="39.1528%" y="116" width="5.8123%" height="15" fill="rgb(217,163,10)" fg:x="3651" fg:w="542"/><text x="39.4028%" y="126.50">evaluat..</text></g><g><title>getSuccessors (mdp_clean.py:184) (80 samples, 0.86%)</title><rect x="44.1072%" y="132" width="0.8579%" height="15" fill="rgb(213,25,53)" fg:x="4113" fg:w="80"/><text x="44.3572%" y="142.50"></text></g><g><title>&lt;genexpr&gt; (mdp_clean.py:232) (157 samples, 1.68%)</title><rect x="47.9035%" y="132" width="1.6836%" height="15" fill="rgb(252,105,26)" fg:x="4467" fg:w="157"/><text x="48.1535%" y="142.50"></text></g><g><title>getSuccessors (mdp_clean.py:183) (10 samples, 0.11%)</title><rect x="49.5871%" y="132" width="0.1072%" height="15" fill="rgb(220,39,43)" fg:x="4624" fg:w="10"/><text x="49.8371%" y="142.50"></text></g><g><title>evaluate (mdp_clean.py:232) (498 samples, 5.34%)</title><rect x="44.9651%" y="116" width="5.3405%" height="15" fill="rgb(229,68,48)" fg:x="4193" fg:w="498"/><text x="45.2151%" y="126.50">evaluat..</text></g><g><title>getSuccessors (mdp_clean.py:184) (57 samples, 0.61%)</title><rect x="49.6944%" y="132" width="0.6113%" height="15" fill="rgb(252,8,32)" fg:x="4634" fg:w="57"/><text x="49.9444%" y="142.50"></text></g><g><title>&lt;genexpr&gt; (mdp_clean.py:234) (1,399 samples, 15.00%)</title><rect x="56.4182%" y="132" width="15.0027%" height="15" fill="rgb(223,20,43)" fg:x="5261" fg:w="1399"/><text x="56.6682%" y="142.50">&lt;genexpr&gt; (mdp_clean.py..</text></g><g><title>evaluate (mdp_clean.py:234) (1,979 samples, 21.22%)</title><rect x="50.3056%" y="116" width="21.2225%" height="15" fill="rgb(229,81,49)" fg:x="4691" fg:w="1979"/><text x="50.5556%" y="126.50">evaluate (mdp_clean.py:234)</text></g><g><title>&lt;genexpr&gt; (mdp_clean.py:235) (10 samples, 0.11%)</title><rect x="71.4209%" y="132" width="0.1072%" height="15" fill="rgb(236,28,36)" fg:x="6660" fg:w="10"/><text x="71.6709%" y="142.50"></text></g><g><title>getSuccessors (mdp_clean.py:183) (10 samples, 0.11%)</title><rect x="72.2574%" y="132" width="0.1072%" height="15" fill="rgb(249,185,26)" fg:x="6738" fg:w="10"/><text x="72.5074%" y="142.50"></text></g><g><title>evaluate (mdp_clean.py:235) (231 samples, 2.48%)</title><rect x="71.5282%" y="116" width="2.4772%" height="15" fill="rgb(249,174,33)" fg:x="6670" fg:w="231"/><text x="71.7782%" y="126.50">ev..</text></g><g><title>getSuccessors (mdp_clean.py:184) (153 samples, 1.64%)</title><rect x="72.3646%" y="132" width="1.6408%" height="15" fill="rgb(233,201,37)" fg:x="6748" fg:w="153"/><text x="72.6146%" y="142.50"></text></g><g><title>&lt;genexpr&gt; (mdp_clean.py:236) (1,271 samples, 13.63%)</title><rect x="80.0429%" y="132" width="13.6300%" height="15" fill="rgb(221,78,26)" fg:x="7464" fg:w="1271"/><text x="80.2929%" y="142.50">&lt;genexpr&gt; (mdp_clean...</text></g><g><title>evaluate (mdp_clean.py:236) (1,841 samples, 19.74%)</title><rect x="74.0054%" y="116" width="19.7426%" height="15" fill="rgb(250,127,30)" fg:x="6901" fg:w="1841"/><text x="74.2554%" y="126.50">evaluate (mdp_clean.py:236)</text></g><g><title>getSuccessors (mdp_clean.py:183) (11 samples, 0.12%)</title><rect x="94.3164%" y="132" width="0.1180%" height="15" fill="rgb(230,49,44)" fg:x="8795" fg:w="11"/><text x="94.5664%" y="142.50"></text></g><g><title>evaluate (mdp_clean.py:237) (176 samples, 1.89%)</title><rect x="93.7480%" y="116" width="1.8874%" height="15" fill="rgb(229,67,23)" fg:x="8742" fg:w="176"/><text x="93.9980%" y="126.50">e..</text></g><g><title>getSuccessors (mdp_clean.py:184) (112 samples, 1.20%)</title><rect x="94.4343%" y="132" width="1.2011%" height="15" fill="rgb(249,83,47)" fg:x="8806" fg:w="112"/><text x="94.6843%" y="142.50"></text></g><g><title>evaluate (mdp_clean.py:239) (402 samples, 4.31%)</title><rect x="95.6354%" y="116" width="4.3110%" height="15" fill="rgb(215,43,3)" fg:x="8918" fg:w="402"/><text x="95.8854%" y="126.50">evalu..</text></g><g><title>all (9,325 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(238,154,13)" fg:x="0" fg:w="9325"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (mdp_clean.py:265) (9,325 samples, 100.00%)</title><rect x="0.0000%" y="68" width="100.0000%" height="15" fill="rgb(219,56,2)" fg:x="0" fg:w="9325"/><text x="0.2500%" y="78.50">&lt;module&gt; (mdp_clean.py:265)</text></g><g><title>main (mdp_clean.py:260) (9,325 samples, 100.00%)</title><rect x="0.0000%" y="84" width="100.0000%" height="15" fill="rgb(233,0,4)" fg:x="0" fg:w="9325"/><text x="0.2500%" y="94.50">main (mdp_clean.py:260)</text></g><g><title>bench_mdp (mdp_clean.py:250) (9,325 samples, 100.00%)</title><rect x="0.0000%" y="100" width="100.0000%" height="15" fill="rgb(235,30,7)" fg:x="0" fg:w="9325"/><text x="0.2500%" y="110.50">bench_mdp (mdp_clean.py:250)</text></g></svg></svg>