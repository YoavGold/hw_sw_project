<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="298" onload="init(evt)" viewBox="0 0 1200 298" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="298" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">/csl/yoav.gold/hw_sw_project/.venv_dbg/bin/py-spy record -o mdp_results_11_10/mdp_op4/20251011_155609/flamegraph/flamegraph_pyspy_mdp_op4.svg -r 100 -- ../.venv_dbg/bin/python3 mdp_opt4.py 100</text><text id="details" fill="rgb(0,0,0)" x="10" y="40.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="287.00"> </text><svg id="frames" x="10" width="1180" total_samples="2335"><g><title>build_graph (mdp_opt4.py:221) (4 samples, 0.17%)</title><rect x="1.1563%" y="132" width="0.1713%" height="15" fill="rgb(227,0,7)" fg:x="27" fg:w="4"/><text x="1.4063%" y="142.50"></text></g><g><title>getSuccessors (mdp_opt4.py:177) (4 samples, 0.17%)</title><rect x="1.5418%" y="148" width="0.1713%" height="15" fill="rgb(217,0,24)" fg:x="36" fg:w="4"/><text x="1.7918%" y="158.50"></text></g><g><title>_getSuccessorsB (mdp_opt4.py:139) (5 samples, 0.21%)</title><rect x="1.8844%" y="164" width="0.2141%" height="15" fill="rgb(221,193,54)" fg:x="44" fg:w="5"/><text x="2.1344%" y="174.50"></text></g><g><title>_getSuccessorsB (mdp_opt4.py:140) (4 samples, 0.17%)</title><rect x="2.0985%" y="164" width="0.1713%" height="15" fill="rgb(248,212,6)" fg:x="49" fg:w="4"/><text x="2.3485%" y="174.50"></text></g><g><title>__new__ (fractions.py:93) (3 samples, 0.13%)</title><rect x="2.1413%" y="180" width="0.1285%" height="15" fill="rgb(208,68,35)" fg:x="50" fg:w="3"/><text x="2.3913%" y="190.50"></text></g><g><title>_getSuccessorsB (mdp_opt4.py:141) (3 samples, 0.13%)</title><rect x="2.2698%" y="164" width="0.1285%" height="15" fill="rgb(232,128,0)" fg:x="53" fg:w="3"/><text x="2.5198%" y="174.50"></text></g><g><title>_applyActionSide1 (mdp_opt4.py:77) (13 samples, 0.56%)</title><rect x="2.6124%" y="212" width="0.5567%" height="15" fill="rgb(207,160,47)" fg:x="61" fg:w="13"/><text x="2.8624%" y="222.50"></text></g><g><title>applyHPChange (mdp_opt4.py:59) (11 samples, 0.47%)</title><rect x="2.6981%" y="228" width="0.4711%" height="15" fill="rgb(228,23,34)" fg:x="63" fg:w="11"/><text x="2.9481%" y="238.50"></text></g><g><title>_replace (collections/__init__.py:431) (7 samples, 0.30%)</title><rect x="2.8694%" y="244" width="0.2998%" height="15" fill="rgb(218,30,26)" fg:x="67" fg:w="7"/><text x="3.1194%" y="254.50"></text></g><g><title>_make (collections/__init__.py:423) (3 samples, 0.13%)</title><rect x="3.0407%" y="260" width="0.1285%" height="15" fill="rgb(220,122,19)" fg:x="71" fg:w="3"/><text x="3.2907%" y="270.50"></text></g><g><title>__new__ (fractions.py:93) (3 samples, 0.13%)</title><rect x="3.2976%" y="228" width="0.1285%" height="15" fill="rgb(250,228,42)" fg:x="77" fg:w="3"/><text x="3.5476%" y="238.50"></text></g><g><title>_applyActionPair (mdp_opt4.py:126) (23 samples, 0.99%)</title><rect x="2.5268%" y="180" width="0.9850%" height="15" fill="rgb(240,193,28)" fg:x="59" fg:w="23"/><text x="2.7768%" y="190.50"></text></g><g><title>_applyAction (mdp_opt4.py:98) (21 samples, 0.90%)</title><rect x="2.6124%" y="196" width="0.8994%" height="15" fill="rgb(216,20,37)" fg:x="61" fg:w="21"/><text x="2.8624%" y="206.50"></text></g><g><title>_applyActionSide1 (mdp_opt4.py:78) (8 samples, 0.34%)</title><rect x="3.1692%" y="212" width="0.3426%" height="15" fill="rgb(206,188,39)" fg:x="74" fg:w="8"/><text x="3.4192%" y="222.50"></text></g><g><title>_add (fractions.py:454) (3 samples, 0.13%)</title><rect x="3.9829%" y="212" width="0.1285%" height="15" fill="rgb(217,207,13)" fg:x="93" fg:w="3"/><text x="4.2329%" y="222.50"></text></g><g><title>_add (fractions.py:457) (6 samples, 0.26%)</title><rect x="4.1542%" y="212" width="0.2570%" height="15" fill="rgb(231,73,38)" fg:x="97" fg:w="6"/><text x="4.4042%" y="222.50"></text></g><g><title>_getSuccessorsB (mdp_opt4.py:144) (52 samples, 2.23%)</title><rect x="2.4839%" y="164" width="2.2270%" height="15" fill="rgb(225,20,46)" fg:x="58" fg:w="52"/><text x="2.7339%" y="174.50">_..</text></g><g><title>_applyActionPair (mdp_opt4.py:133) (28 samples, 1.20%)</title><rect x="3.5118%" y="180" width="1.1991%" height="15" fill="rgb(210,31,41)" fg:x="82" fg:w="28"/><text x="3.7618%" y="190.50"></text></g><g><title>forward (fractions.py:358) (18 samples, 0.77%)</title><rect x="3.9400%" y="196" width="0.7709%" height="15" fill="rgb(221,200,47)" fg:x="92" fg:w="18"/><text x="4.1900%" y="206.50"></text></g><g><title>_mul (fractions.py:495) (3 samples, 0.13%)</title><rect x="4.5824%" y="212" width="0.1285%" height="15" fill="rgb(226,26,5)" fg:x="107" fg:w="3"/><text x="4.8324%" y="222.50"></text></g><g><title>_applyActionSide1 (mdp_opt4.py:85) (11 samples, 0.47%)</title><rect x="5.3961%" y="212" width="0.4711%" height="15" fill="rgb(249,33,26)" fg:x="126" fg:w="11"/><text x="5.6461%" y="222.50"></text></g><g><title>__new__ (fractions.py:93) (5 samples, 0.21%)</title><rect x="5.6531%" y="228" width="0.2141%" height="15" fill="rgb(235,183,28)" fg:x="132" fg:w="5"/><text x="5.9031%" y="238.50"></text></g><g><title>__eq__ (fractions.py:674) (4 samples, 0.17%)</title><rect x="6.0385%" y="228" width="0.1713%" height="15" fill="rgb(221,5,38)" fg:x="141" fg:w="4"/><text x="6.2885%" y="238.50"></text></g><g><title>__hash__ (fractions.py:646) (12 samples, 0.51%)</title><rect x="6.3812%" y="228" width="0.5139%" height="15" fill="rgb(247,18,42)" fg:x="149" fg:w="12"/><text x="6.6312%" y="238.50"></text></g><g><title>_applyActionSide1 (mdp_opt4.py:86) (28 samples, 1.20%)</title><rect x="5.8672%" y="212" width="1.1991%" height="15" fill="rgb(241,131,45)" fg:x="137" fg:w="28"/><text x="6.1172%" y="222.50"></text></g><g><title>__hash__ (fractions.py:667) (3 samples, 0.13%)</title><rect x="6.9379%" y="228" width="0.1285%" height="15" fill="rgb(249,31,29)" fg:x="162" fg:w="3"/><text x="7.1879%" y="238.50"></text></g><g><title>_applyActionSide1 (mdp_opt4.py:91) (7 samples, 0.30%)</title><rect x="7.2377%" y="212" width="0.2998%" height="15" fill="rgb(225,111,53)" fg:x="169" fg:w="7"/><text x="7.4877%" y="222.50"></text></g><g><title>applyHPChange (mdp_opt4.py:58) (44 samples, 1.88%)</title><rect x="8.0942%" y="228" width="1.8844%" height="15" fill="rgb(238,160,17)" fg:x="189" fg:w="44"/><text x="8.3442%" y="238.50">a..</text></g><g><title>_make (collections/__init__.py:422) (57 samples, 2.44%)</title><rect x="13.8758%" y="260" width="2.4411%" height="15" fill="rgb(214,148,48)" fg:x="324" fg:w="57"/><text x="14.1258%" y="270.50">_m..</text></g><g><title>_replace (collections/__init__.py:431) (128 samples, 5.48%)</title><rect x="10.9208%" y="244" width="5.4818%" height="15" fill="rgb(232,36,49)" fg:x="255" fg:w="128"/><text x="11.1708%" y="254.50">_replac..</text></g><g><title>_applyActionSide1 (mdp_opt4.py:92) (209 samples, 8.95%)</title><rect x="7.5375%" y="212" width="8.9507%" height="15" fill="rgb(209,103,24)" fg:x="176" fg:w="209"/><text x="7.7875%" y="222.50">_applyActionS..</text></g><g><title>applyHPChange (mdp_opt4.py:59) (152 samples, 6.51%)</title><rect x="9.9786%" y="228" width="6.5096%" height="15" fill="rgb(229,88,8)" fg:x="233" fg:w="152"/><text x="10.2286%" y="238.50">applyHPCh..</text></g><g><title>__new__ (fractions.py:93) (5 samples, 0.21%)</title><rect x="19.2291%" y="228" width="0.2141%" height="15" fill="rgb(213,181,19)" fg:x="449" fg:w="5"/><text x="19.4791%" y="238.50"></text></g><g><title>forward (fractions.py:357) (10 samples, 0.43%)</title><rect x="19.5289%" y="228" width="0.4283%" height="15" fill="rgb(254,191,54)" fg:x="456" fg:w="10"/><text x="19.7789%" y="238.50"></text></g><g><title>_add (fractions.py:453) (11 samples, 0.47%)</title><rect x="20.4711%" y="244" width="0.4711%" height="15" fill="rgb(241,83,37)" fg:x="478" fg:w="11"/><text x="20.7211%" y="254.50"></text></g><g><title>_add (fractions.py:454) (14 samples, 0.60%)</title><rect x="20.9422%" y="244" width="0.5996%" height="15" fill="rgb(233,36,39)" fg:x="489" fg:w="14"/><text x="21.1922%" y="254.50"></text></g><g><title>numerator (fractions.py:258) (4 samples, 0.17%)</title><rect x="21.3704%" y="260" width="0.1713%" height="15" fill="rgb(226,3,54)" fg:x="499" fg:w="4"/><text x="21.6204%" y="270.50"></text></g><g><title>_add (fractions.py:455) (6 samples, 0.26%)</title><rect x="21.5418%" y="244" width="0.2570%" height="15" fill="rgb(245,192,40)" fg:x="503" fg:w="6"/><text x="21.7918%" y="254.50"></text></g><g><title>__new__ (fractions.py:93) (3 samples, 0.13%)</title><rect x="22.4411%" y="260" width="0.1285%" height="15" fill="rgb(238,167,29)" fg:x="524" fg:w="3"/><text x="22.6911%" y="270.50"></text></g><g><title>_add (fractions.py:457) (19 samples, 0.81%)</title><rect x="21.7987%" y="244" width="0.8137%" height="15" fill="rgb(232,182,51)" fg:x="509" fg:w="19"/><text x="22.0487%" y="254.50"></text></g><g><title>_add (fractions.py:458) (3 samples, 0.13%)</title><rect x="22.6124%" y="244" width="0.1285%" height="15" fill="rgb(231,60,39)" fg:x="528" fg:w="3"/><text x="22.8624%" y="254.50"></text></g><g><title>_add (fractions.py:459) (16 samples, 0.69%)</title><rect x="22.7409%" y="244" width="0.6852%" height="15" fill="rgb(208,69,12)" fg:x="531" fg:w="16"/><text x="22.9909%" y="254.50"></text></g><g><title>_add (fractions.py:460) (8 samples, 0.34%)</title><rect x="23.4261%" y="244" width="0.3426%" height="15" fill="rgb(235,93,37)" fg:x="547" fg:w="8"/><text x="23.6761%" y="254.50"></text></g><g><title>_add (fractions.py:461) (3 samples, 0.13%)</title><rect x="23.7687%" y="244" width="0.1285%" height="15" fill="rgb(213,116,39)" fg:x="555" fg:w="3"/><text x="24.0187%" y="254.50"></text></g><g><title>__new__ (fractions.py:142) (3 samples, 0.13%)</title><rect x="24.4968%" y="260" width="0.1285%" height="15" fill="rgb(222,207,29)" fg:x="572" fg:w="3"/><text x="24.7468%" y="270.50"></text></g><g><title>_add (fractions.py:462) (26 samples, 1.11%)</title><rect x="23.8972%" y="244" width="1.1135%" height="15" fill="rgb(206,96,30)" fg:x="558" fg:w="26"/><text x="24.1472%" y="254.50"></text></g><g><title>__new__ (fractions.py:93) (7 samples, 0.30%)</title><rect x="24.7109%" y="260" width="0.2998%" height="15" fill="rgb(218,138,4)" fg:x="577" fg:w="7"/><text x="24.9609%" y="270.50"></text></g><g><title>__new__ (fractions.py:142) (3 samples, 0.13%)</title><rect x="25.3961%" y="260" width="0.1285%" height="15" fill="rgb(250,191,14)" fg:x="593" fg:w="3"/><text x="25.6461%" y="270.50"></text></g><g><title>__new__ (fractions.py:93) (14 samples, 0.60%)</title><rect x="25.6531%" y="260" width="0.5996%" height="15" fill="rgb(239,60,40)" fg:x="599" fg:w="14"/><text x="25.9031%" y="270.50"></text></g><g><title>_applyAction (mdp_opt4.py:101) (495 samples, 21.20%)</title><rect x="5.0964%" y="196" width="21.1991%" height="15" fill="rgb(206,27,48)" fg:x="119" fg:w="495"/><text x="5.3464%" y="206.50">_applyAction (mdp_opt4.py:101)</text></g><g><title>_applyActionSide1 (mdp_opt4.py:93) (229 samples, 9.81%)</title><rect x="16.4882%" y="212" width="9.8073%" height="15" fill="rgb(225,35,8)" fg:x="385" fg:w="229"/><text x="16.7382%" y="222.50">_applyActionSi..</text></g><g><title>forward (fractions.py:358) (148 samples, 6.34%)</title><rect x="19.9572%" y="228" width="6.3383%" height="15" fill="rgb(250,213,24)" fg:x="466" fg:w="148"/><text x="20.2072%" y="238.50">forward ..</text></g><g><title>_add (fractions.py:463) (30 samples, 1.28%)</title><rect x="25.0107%" y="244" width="1.2848%" height="15" fill="rgb(247,123,22)" fg:x="584" fg:w="30"/><text x="25.2607%" y="254.50"></text></g><g><title>_applyActionPair (mdp_opt4.py:126) (512 samples, 21.93%)</title><rect x="4.7966%" y="180" width="21.9272%" height="15" fill="rgb(231,138,38)" fg:x="112" fg:w="512"/><text x="5.0466%" y="190.50">_applyActionPair (mdp_opt4.py:126)</text></g><g><title>_applyAction (mdp_opt4.py:102) (10 samples, 0.43%)</title><rect x="26.2955%" y="196" width="0.4283%" height="15" fill="rgb(231,145,46)" fg:x="614" fg:w="10"/><text x="26.5455%" y="206.50"></text></g><g><title>&lt;dictcomp&gt; (mdp_opt4.py:102) (7 samples, 0.30%)</title><rect x="26.4240%" y="212" width="0.2998%" height="15" fill="rgb(251,118,11)" fg:x="617" fg:w="7"/><text x="26.6740%" y="222.50"></text></g><g><title>__new__ (fractions.py:93) (5 samples, 0.21%)</title><rect x="27.8801%" y="196" width="0.2141%" height="15" fill="rgb(217,147,25)" fg:x="651" fg:w="5"/><text x="28.1301%" y="206.50"></text></g><g><title>forward (fractions.py:357) (3 samples, 0.13%)</title><rect x="28.2227%" y="196" width="0.1285%" height="15" fill="rgb(247,81,37)" fg:x="659" fg:w="3"/><text x="28.4727%" y="206.50"></text></g><g><title>_add (fractions.py:453) (4 samples, 0.17%)</title><rect x="28.5653%" y="212" width="0.1713%" height="15" fill="rgb(209,12,38)" fg:x="667" fg:w="4"/><text x="28.8153%" y="222.50"></text></g><g><title>_add (fractions.py:454) (4 samples, 0.17%)</title><rect x="28.7366%" y="212" width="0.1713%" height="15" fill="rgb(227,1,9)" fg:x="671" fg:w="4"/><text x="28.9866%" y="222.50"></text></g><g><title>_add (fractions.py:457) (21 samples, 0.90%)</title><rect x="28.9936%" y="212" width="0.8994%" height="15" fill="rgb(248,47,43)" fg:x="677" fg:w="21"/><text x="29.2436%" y="222.50"></text></g><g><title>__new__ (fractions.py:93) (10 samples, 0.43%)</title><rect x="29.4647%" y="228" width="0.4283%" height="15" fill="rgb(221,10,30)" fg:x="688" fg:w="10"/><text x="29.7147%" y="238.50"></text></g><g><title>_add (fractions.py:459) (4 samples, 0.17%)</title><rect x="29.9358%" y="212" width="0.1713%" height="15" fill="rgb(210,229,1)" fg:x="699" fg:w="4"/><text x="30.1858%" y="222.50"></text></g><g><title>_add (fractions.py:462) (6 samples, 0.26%)</title><rect x="30.1499%" y="212" width="0.2570%" height="15" fill="rgb(222,148,37)" fg:x="704" fg:w="6"/><text x="30.3999%" y="222.50"></text></g><g><title>__new__ (fractions.py:93) (3 samples, 0.13%)</title><rect x="30.2784%" y="228" width="0.1285%" height="15" fill="rgb(234,67,33)" fg:x="707" fg:w="3"/><text x="30.5284%" y="238.50"></text></g><g><title>_mul (fractions.py:486) (5 samples, 0.21%)</title><rect x="30.5353%" y="212" width="0.2141%" height="15" fill="rgb(247,98,35)" fg:x="713" fg:w="5"/><text x="30.7853%" y="222.50"></text></g><g><title>__new__ (fractions.py:164) (3 samples, 0.13%)</title><rect x="31.3919%" y="228" width="0.1285%" height="15" fill="rgb(247,138,52)" fg:x="733" fg:w="3"/><text x="31.6419%" y="238.50"></text></g><g><title>_getSuccessorsB (mdp_opt4.py:146) (631 samples, 27.02%)</title><rect x="4.7109%" y="164" width="27.0236%" height="15" fill="rgb(213,79,30)" fg:x="110" fg:w="631"/><text x="4.9609%" y="174.50">_getSuccessorsB (mdp_opt4.py:146)</text></g><g><title>_applyActionPair (mdp_opt4.py:133) (116 samples, 4.97%)</title><rect x="26.7666%" y="180" width="4.9679%" height="15" fill="rgb(246,177,23)" fg:x="625" fg:w="116"/><text x="27.0166%" y="190.50">_apply..</text></g><g><title>forward (fractions.py:358) (79 samples, 3.38%)</title><rect x="28.3512%" y="196" width="3.3833%" height="15" fill="rgb(230,62,27)" fg:x="662" fg:w="79"/><text x="28.6012%" y="206.50">for..</text></g><g><title>_mul (fractions.py:495) (20 samples, 0.86%)</title><rect x="30.8779%" y="212" width="0.8565%" height="15" fill="rgb(216,154,8)" fg:x="721" fg:w="20"/><text x="31.1279%" y="222.50"></text></g><g><title>__new__ (fractions.py:93) (5 samples, 0.21%)</title><rect x="31.5203%" y="228" width="0.2141%" height="15" fill="rgb(244,35,45)" fg:x="736" fg:w="5"/><text x="31.7703%" y="238.50"></text></g><g><title>denominator (fractions.py:262) (3 samples, 0.13%)</title><rect x="32.6338%" y="212" width="0.1285%" height="15" fill="rgb(251,115,12)" fg:x="762" fg:w="3"/><text x="32.8838%" y="222.50"></text></g><g><title>__float__ (numbers.py:291) (9 samples, 0.39%)</title><rect x="32.4197%" y="196" width="0.3854%" height="15" fill="rgb(240,54,50)" fg:x="757" fg:w="9"/><text x="32.6697%" y="206.50"></text></g><g><title>_richcmp (fractions.py:702) (13 samples, 0.56%)</title><rect x="33.0621%" y="212" width="0.5567%" height="15" fill="rgb(233,84,52)" fg:x="772" fg:w="13"/><text x="33.3121%" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:119) (6 samples, 0.26%)</title><rect x="33.3619%" y="228" width="0.2570%" height="15" fill="rgb(207,117,47)" fg:x="779" fg:w="6"/><text x="33.6119%" y="238.50"></text></g><g><title>_richcmp (fractions.py:703) (6 samples, 0.26%)</title><rect x="33.6188%" y="212" width="0.2570%" height="15" fill="rgb(249,43,39)" fg:x="785" fg:w="6"/><text x="33.8688%" y="222.50"></text></g><g><title>&lt;genexpr&gt; (mdp_opt4.py:153) (44 samples, 1.88%)</title><rect x="32.0343%" y="180" width="1.8844%" height="15" fill="rgb(209,38,44)" fg:x="748" fg:w="44"/><text x="32.2843%" y="190.50">&lt;..</text></g><g><title>__gt__ (fractions.py:719) (26 samples, 1.11%)</title><rect x="32.8051%" y="196" width="1.1135%" height="15" fill="rgb(236,212,23)" fg:x="766" fg:w="26"/><text x="33.0551%" y="206.50"></text></g><g><title>_getSuccessorsB (mdp_opt4.py:152) (53 samples, 2.27%)</title><rect x="31.7345%" y="164" width="2.2698%" height="15" fill="rgb(242,79,21)" fg:x="741" fg:w="53"/><text x="31.9845%" y="174.50">_..</text></g><g><title>_getSuccessorsB (mdp_opt4.py:153) (3 samples, 0.13%)</title><rect x="34.0043%" y="164" width="0.1285%" height="15" fill="rgb(211,96,35)" fg:x="794" fg:w="3"/><text x="34.2543%" y="174.50"></text></g><g><title>getSuccessors (mdp_opt4.py:188) (757 samples, 32.42%)</title><rect x="1.7559%" y="148" width="32.4197%" height="15" fill="rgb(253,215,40)" fg:x="41" fg:w="757"/><text x="2.0059%" y="158.50">getSuccessors (mdp_opt4.py:188)</text></g><g><title>__eq__ (fractions.py:674) (3 samples, 0.13%)</title><rect x="34.8608%" y="212" width="0.1285%" height="15" fill="rgb(211,81,21)" fg:x="814" fg:w="3"/><text x="35.1108%" y="222.50"></text></g><g><title>_applyActionSide1 (mdp_opt4.py:86) (6 samples, 0.26%)</title><rect x="34.8180%" y="196" width="0.2570%" height="15" fill="rgb(208,190,38)" fg:x="813" fg:w="6"/><text x="35.0680%" y="206.50"></text></g><g><title>applyHPChange (mdp_opt4.py:58) (18 samples, 0.77%)</title><rect x="35.3319%" y="212" width="0.7709%" height="15" fill="rgb(235,213,38)" fg:x="825" fg:w="18"/><text x="35.5819%" y="222.50"></text></g><g><title>_make (collections/__init__.py:422) (34 samples, 1.46%)</title><rect x="37.1734%" y="244" width="1.4561%" height="15" fill="rgb(237,122,38)" fg:x="868" fg:w="34"/><text x="37.4234%" y="254.50"></text></g><g><title>_replace (collections/__init__.py:431) (52 samples, 2.23%)</title><rect x="36.4454%" y="228" width="2.2270%" height="15" fill="rgb(244,218,35)" fg:x="851" fg:w="52"/><text x="36.6954%" y="238.50">_..</text></g><g><title>_applyActionSide1 (mdp_opt4.py:92) (82 samples, 3.51%)</title><rect x="35.2034%" y="196" width="3.5118%" height="15" fill="rgb(240,68,47)" fg:x="822" fg:w="82"/><text x="35.4534%" y="206.50">_ap..</text></g><g><title>applyHPChange (mdp_opt4.py:59) (61 samples, 2.61%)</title><rect x="36.1028%" y="212" width="2.6124%" height="15" fill="rgb(210,16,53)" fg:x="843" fg:w="61"/><text x="36.3528%" y="222.50">ap..</text></g><g><title>__new__ (fractions.py:93) (7 samples, 0.30%)</title><rect x="39.9572%" y="212" width="0.2998%" height="15" fill="rgb(235,124,12)" fg:x="933" fg:w="7"/><text x="40.2072%" y="222.50"></text></g><g><title>__new__ (fractions.py:97) (5 samples, 0.21%)</title><rect x="40.3426%" y="212" width="0.2141%" height="15" fill="rgb(224,169,11)" fg:x="942" fg:w="5"/><text x="40.5926%" y="222.50"></text></g><g><title>forward (fractions.py:357) (6 samples, 0.26%)</title><rect x="40.5567%" y="212" width="0.2570%" height="15" fill="rgb(250,166,2)" fg:x="947" fg:w="6"/><text x="40.8067%" y="222.50"></text></g><g><title>_add (fractions.py:453) (6 samples, 0.26%)</title><rect x="40.8565%" y="228" width="0.2570%" height="15" fill="rgb(242,216,29)" fg:x="954" fg:w="6"/><text x="41.1065%" y="238.50"></text></g><g><title>_add (fractions.py:454) (6 samples, 0.26%)</title><rect x="41.1135%" y="228" width="0.2570%" height="15" fill="rgb(230,116,27)" fg:x="960" fg:w="6"/><text x="41.3635%" y="238.50"></text></g><g><title>_add (fractions.py:457) (23 samples, 0.99%)</title><rect x="41.4133%" y="228" width="0.9850%" height="15" fill="rgb(228,99,48)" fg:x="967" fg:w="23"/><text x="41.6633%" y="238.50"></text></g><g><title>__new__ (fractions.py:93) (7 samples, 0.30%)</title><rect x="42.0985%" y="244" width="0.2998%" height="15" fill="rgb(253,11,6)" fg:x="983" fg:w="7"/><text x="42.3485%" y="254.50"></text></g><g><title>_applyAction (mdp_opt4.py:101) (182 samples, 7.79%)</title><rect x="34.6895%" y="180" width="7.7944%" height="15" fill="rgb(247,143,39)" fg:x="810" fg:w="182"/><text x="34.9395%" y="190.50">_applyActio..</text></g><g><title>_applyActionSide1 (mdp_opt4.py:93) (88 samples, 3.77%)</title><rect x="38.7152%" y="196" width="3.7687%" height="15" fill="rgb(236,97,10)" fg:x="904" fg:w="88"/><text x="38.9652%" y="206.50">_app..</text></g><g><title>forward (fractions.py:358) (39 samples, 1.67%)</title><rect x="40.8137%" y="212" width="1.6702%" height="15" fill="rgb(233,208,19)" fg:x="953" fg:w="39"/><text x="41.0637%" y="222.50"></text></g><g><title>_applyAction (mdp_opt4.py:102) (17 samples, 0.73%)</title><rect x="42.4839%" y="180" width="0.7281%" height="15" fill="rgb(216,164,2)" fg:x="992" fg:w="17"/><text x="42.7339%" y="190.50"></text></g><g><title>&lt;dictcomp&gt; (mdp_opt4.py:102) (16 samples, 0.69%)</title><rect x="42.5268%" y="196" width="0.6852%" height="15" fill="rgb(220,129,5)" fg:x="993" fg:w="16"/><text x="42.7768%" y="206.50"></text></g><g><title>_applyActionSide1 (mdp_opt4.py:86) (6 samples, 0.26%)</title><rect x="43.2120%" y="196" width="0.2570%" height="15" fill="rgb(242,17,10)" fg:x="1009" fg:w="6"/><text x="43.4620%" y="206.50"></text></g><g><title>applyHPChange (mdp_opt4.py:58) (12 samples, 0.51%)</title><rect x="43.6831%" y="212" width="0.5139%" height="15" fill="rgb(242,107,0)" fg:x="1020" fg:w="12"/><text x="43.9331%" y="222.50"></text></g><g><title>_applyActionSide1 (mdp_opt4.py:92) (58 samples, 2.48%)</title><rect x="43.5118%" y="196" width="2.4839%" height="15" fill="rgb(251,28,31)" fg:x="1016" fg:w="58"/><text x="43.7618%" y="206.50">_a..</text></g><g><title>applyHPChange (mdp_opt4.py:59) (42 samples, 1.80%)</title><rect x="44.1970%" y="212" width="1.7987%" height="15" fill="rgb(233,223,10)" fg:x="1032" fg:w="42"/><text x="44.4470%" y="222.50">a..</text></g><g><title>_replace (collections/__init__.py:431) (37 samples, 1.58%)</title><rect x="44.4111%" y="228" width="1.5846%" height="15" fill="rgb(215,21,27)" fg:x="1037" fg:w="37"/><text x="44.6611%" y="238.50"></text></g><g><title>_make (collections/__init__.py:422) (23 samples, 0.99%)</title><rect x="45.0107%" y="244" width="0.9850%" height="15" fill="rgb(232,23,21)" fg:x="1051" fg:w="23"/><text x="45.2607%" y="254.50"></text></g><g><title>_add (fractions.py:454) (3 samples, 0.13%)</title><rect x="47.2377%" y="228" width="0.1285%" height="15" fill="rgb(244,5,23)" fg:x="1103" fg:w="3"/><text x="47.4877%" y="238.50"></text></g><g><title>_add (fractions.py:455) (4 samples, 0.17%)</title><rect x="47.3662%" y="228" width="0.1713%" height="15" fill="rgb(226,81,46)" fg:x="1106" fg:w="4"/><text x="47.6162%" y="238.50"></text></g><g><title>_add (fractions.py:457) (7 samples, 0.30%)</title><rect x="47.5375%" y="228" width="0.2998%" height="15" fill="rgb(247,70,30)" fg:x="1110" fg:w="7"/><text x="47.7875%" y="238.50"></text></g><g><title>__new__ (fractions.py:93) (3 samples, 0.13%)</title><rect x="47.7088%" y="244" width="0.1285%" height="15" fill="rgb(212,68,19)" fg:x="1114" fg:w="3"/><text x="47.9588%" y="254.50"></text></g><g><title>_add (fractions.py:462) (9 samples, 0.39%)</title><rect x="47.8801%" y="228" width="0.3854%" height="15" fill="rgb(240,187,13)" fg:x="1118" fg:w="9"/><text x="48.1301%" y="238.50"></text></g><g><title>__new__ (fractions.py:93) (4 samples, 0.17%)</title><rect x="48.0942%" y="244" width="0.1713%" height="15" fill="rgb(223,113,26)" fg:x="1123" fg:w="4"/><text x="48.3442%" y="254.50"></text></g><g><title>_getSuccessorsC (mdp_opt4.py:161) (332 samples, 14.22%)</title><rect x="34.5182%" y="164" width="14.2184%" height="15" fill="rgb(206,192,2)" fg:x="806" fg:w="332"/><text x="34.7682%" y="174.50">_getSuccessorsC (mdp_o..</text></g><g><title>_applyAction (mdp_opt4.py:98) (129 samples, 5.52%)</title><rect x="43.2120%" y="180" width="5.5246%" height="15" fill="rgb(241,108,4)" fg:x="1009" fg:w="129"/><text x="43.4620%" y="190.50">_applyA..</text></g><g><title>_applyActionSide1 (mdp_opt4.py:93) (64 samples, 2.74%)</title><rect x="45.9957%" y="196" width="2.7409%" height="15" fill="rgb(247,173,49)" fg:x="1074" fg:w="64"/><text x="46.2457%" y="206.50">_a..</text></g><g><title>forward (fractions.py:358) (39 samples, 1.67%)</title><rect x="47.0664%" y="212" width="1.6702%" height="15" fill="rgb(224,114,35)" fg:x="1099" fg:w="39"/><text x="47.3164%" y="222.50"></text></g><g><title>_add (fractions.py:463) (11 samples, 0.47%)</title><rect x="48.2655%" y="228" width="0.4711%" height="15" fill="rgb(245,159,27)" fg:x="1127" fg:w="11"/><text x="48.5155%" y="238.50"></text></g><g><title>__new__ (fractions.py:93) (4 samples, 0.17%)</title><rect x="48.5653%" y="244" width="0.1713%" height="15" fill="rgb(245,172,44)" fg:x="1134" fg:w="4"/><text x="48.8153%" y="254.50"></text></g><g><title>_getSuccessorsC (mdp_opt4.py:162) (4 samples, 0.17%)</title><rect x="48.7366%" y="164" width="0.1713%" height="15" fill="rgb(236,23,11)" fg:x="1138" fg:w="4"/><text x="48.9866%" y="174.50"></text></g><g><title>__new__ (fractions.py:93) (17 samples, 0.73%)</title><rect x="49.7216%" y="180" width="0.7281%" height="15" fill="rgb(205,117,38)" fg:x="1161" fg:w="17"/><text x="49.9716%" y="190.50"></text></g><g><title>forward (fractions.py:357) (5 samples, 0.21%)</title><rect x="50.5353%" y="180" width="0.2141%" height="15" fill="rgb(237,72,25)" fg:x="1180" fg:w="5"/><text x="50.7853%" y="190.50"></text></g><g><title>_add (fractions.py:453) (4 samples, 0.17%)</title><rect x="50.8351%" y="196" width="0.1713%" height="15" fill="rgb(244,70,9)" fg:x="1187" fg:w="4"/><text x="51.0851%" y="206.50"></text></g><g><title>_add (fractions.py:454) (5 samples, 0.21%)</title><rect x="51.0064%" y="196" width="0.2141%" height="15" fill="rgb(217,125,39)" fg:x="1191" fg:w="5"/><text x="51.2564%" y="206.50"></text></g><g><title>_add (fractions.py:455) (3 samples, 0.13%)</title><rect x="51.2206%" y="196" width="0.1285%" height="15" fill="rgb(235,36,10)" fg:x="1196" fg:w="3"/><text x="51.4706%" y="206.50"></text></g><g><title>_getSuccessorsC (mdp_opt4.py:168) (101 samples, 4.33%)</title><rect x="48.9079%" y="164" width="4.3255%" height="15" fill="rgb(251,123,47)" fg:x="1142" fg:w="101"/><text x="49.1579%" y="174.50">_getS..</text></g><g><title>forward (fractions.py:358) (58 samples, 2.48%)</title><rect x="50.7495%" y="180" width="2.4839%" height="15" fill="rgb(221,13,13)" fg:x="1185" fg:w="58"/><text x="50.9995%" y="190.50">fo..</text></g><g><title>_add (fractions.py:457) (44 samples, 1.88%)</title><rect x="51.3490%" y="196" width="1.8844%" height="15" fill="rgb(238,131,9)" fg:x="1199" fg:w="44"/><text x="51.5990%" y="206.50">_..</text></g><g><title>__new__ (fractions.py:93) (23 samples, 0.99%)</title><rect x="52.2484%" y="212" width="0.9850%" height="15" fill="rgb(211,50,8)" fg:x="1220" fg:w="23"/><text x="52.4984%" y="222.50"></text></g><g><title>__float__ (numbers.py:291) (7 samples, 0.30%)</title><rect x="54.0471%" y="196" width="0.2998%" height="15" fill="rgb(245,182,24)" fg:x="1262" fg:w="7"/><text x="54.2971%" y="206.50"></text></g><g><title>_richcmp (fractions.py:702) (9 samples, 0.39%)</title><rect x="54.6039%" y="212" width="0.3854%" height="15" fill="rgb(242,14,37)" fg:x="1275" fg:w="9"/><text x="54.8539%" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:119) (5 samples, 0.21%)</title><rect x="54.7752%" y="228" width="0.2141%" height="15" fill="rgb(246,228,12)" fg:x="1279" fg:w="5"/><text x="55.0252%" y="238.50"></text></g><g><title>&lt;genexpr&gt; (mdp_opt4.py:171) (34 samples, 1.46%)</title><rect x="53.6617%" y="180" width="1.4561%" height="15" fill="rgb(213,55,15)" fg:x="1253" fg:w="34"/><text x="53.9117%" y="190.50"></text></g><g><title>__gt__ (fractions.py:719) (18 samples, 0.77%)</title><rect x="54.3469%" y="196" width="0.7709%" height="15" fill="rgb(209,9,3)" fg:x="1269" fg:w="18"/><text x="54.5969%" y="206.50"></text></g><g><title>_getSuccessorsC (mdp_opt4.py:170) (60 samples, 2.57%)</title><rect x="53.2334%" y="164" width="2.5696%" height="15" fill="rgb(230,59,30)" fg:x="1243" fg:w="60"/><text x="53.4834%" y="174.50">_g..</text></g><g><title>&lt;lambda&gt; (mdp_opt4.py:172) (16 samples, 0.69%)</title><rect x="55.1178%" y="180" width="0.6852%" height="15" fill="rgb(209,121,21)" fg:x="1287" fg:w="16"/><text x="55.3678%" y="190.50"></text></g><g><title>getSuccessors (mdp_opt4.py:190) (508 samples, 21.76%)</title><rect x="34.1756%" y="148" width="21.7559%" height="15" fill="rgb(220,109,13)" fg:x="798" fg:w="508"/><text x="34.4256%" y="158.50">getSuccessors (mdp_opt4.py:190)</text></g><g><title>_getSuccessorsC (mdp_opt4.py:171) (3 samples, 0.13%)</title><rect x="55.8030%" y="164" width="0.1285%" height="15" fill="rgb(232,18,1)" fg:x="1303" fg:w="3"/><text x="56.0530%" y="174.50"></text></g><g><title>getSuccessors (mdp_opt4.py:192) (12 samples, 0.51%)</title><rect x="55.9315%" y="148" width="0.5139%" height="15" fill="rgb(215,41,42)" fg:x="1306" fg:w="12"/><text x="56.1815%" y="158.50"></text></g><g><title>&lt;listcomp&gt; (mdp_opt4.py:192) (5 samples, 0.21%)</title><rect x="56.2313%" y="164" width="0.2141%" height="15" fill="rgb(224,123,36)" fg:x="1313" fg:w="5"/><text x="56.4813%" y="174.50"></text></g><g><title>build_graph (mdp_opt4.py:237) (1,288 samples, 55.16%)</title><rect x="1.4561%" y="132" width="55.1606%" height="15" fill="rgb(240,125,3)" fg:x="34" fg:w="1288"/><text x="1.7061%" y="142.50">build_graph (mdp_opt4.py:237)</text></g><g><title>getSuccessors (mdp_opt4.py:194) (4 samples, 0.17%)</title><rect x="56.4454%" y="148" width="0.1713%" height="15" fill="rgb(205,98,50)" fg:x="1318" fg:w="4"/><text x="56.6954%" y="158.50"></text></g><g><title>build_graph (mdp_opt4.py:240) (12 samples, 0.51%)</title><rect x="56.6595%" y="132" width="0.5139%" height="15" fill="rgb(205,185,37)" fg:x="1323" fg:w="12"/><text x="56.9095%" y="142.50"></text></g><g><title>build_graph (mdp_opt4.py:241) (3 samples, 0.13%)</title><rect x="57.1734%" y="132" width="0.1285%" height="15" fill="rgb(238,207,15)" fg:x="1335" fg:w="3"/><text x="57.4234%" y="142.50"></text></g><g><title>build_graph (mdp_opt4.py:242) (16 samples, 0.69%)</title><rect x="57.3019%" y="132" width="0.6852%" height="15" fill="rgb(213,199,42)" fg:x="1338" fg:w="16"/><text x="57.5519%" y="142.50"></text></g><g><title>evaluate (mdp_opt4.py:260) (1,334 samples, 57.13%)</title><rect x="1.0278%" y="116" width="57.1306%" height="15" fill="rgb(235,201,11)" fg:x="24" fg:w="1334"/><text x="1.2778%" y="126.50">evaluate (mdp_opt4.py:260)</text></g><g><title>topoSort (mdp_opt4.py:13) (4 samples, 0.17%)</title><rect x="58.2869%" y="132" width="0.1713%" height="15" fill="rgb(207,46,11)" fg:x="1361" fg:w="4"/><text x="58.5369%" y="142.50"></text></g><g><title>topoSort (mdp_opt4.py:15) (14 samples, 0.60%)</title><rect x="58.5011%" y="132" width="0.5996%" height="15" fill="rgb(241,35,35)" fg:x="1366" fg:w="14"/><text x="58.7511%" y="142.50"></text></g><g><title>&lt;genexpr&gt; (mdp_opt4.py:18) (6 samples, 0.26%)</title><rect x="59.3148%" y="148" width="0.2570%" height="15" fill="rgb(243,32,47)" fg:x="1385" fg:w="6"/><text x="59.5648%" y="158.50"></text></g><g><title>topoSort (mdp_opt4.py:18) (15 samples, 0.64%)</title><rect x="59.1863%" y="132" width="0.6424%" height="15" fill="rgb(247,202,23)" fg:x="1382" fg:w="15"/><text x="59.4363%" y="142.50"></text></g><g><title>getSuccessorsList (mdp_opt4.py:200) (5 samples, 0.21%)</title><rect x="59.6146%" y="148" width="0.2141%" height="15" fill="rgb(219,102,11)" fg:x="1392" fg:w="5"/><text x="59.8646%" y="158.50"></text></g><g><title>evaluate (mdp_opt4.py:279) (41 samples, 1.76%)</title><rect x="58.1585%" y="116" width="1.7559%" height="15" fill="rgb(243,110,44)" fg:x="1358" fg:w="41"/><text x="58.4085%" y="126.50"></text></g><g><title>evaluate (mdp_opt4.py:283) (19 samples, 0.81%)</title><rect x="59.9572%" y="116" width="0.8137%" height="15" fill="rgb(222,74,54)" fg:x="1400" fg:w="19"/><text x="60.2072%" y="126.50"></text></g><g><title>evaluate (mdp_opt4.py:284) (22 samples, 0.94%)</title><rect x="60.7709%" y="116" width="0.9422%" height="15" fill="rgb(216,99,12)" fg:x="1419" fg:w="22"/><text x="61.0209%" y="126.50"></text></g><g><title>evaluate (mdp_opt4.py:287) (19 samples, 0.81%)</title><rect x="61.7131%" y="116" width="0.8137%" height="15" fill="rgb(226,22,26)" fg:x="1441" fg:w="19"/><text x="61.9631%" y="126.50"></text></g><g><title>evaluate (mdp_opt4.py:288) (21 samples, 0.90%)</title><rect x="62.5268%" y="116" width="0.8994%" height="15" fill="rgb(217,163,10)" fg:x="1460" fg:w="21"/><text x="62.7768%" y="126.50"></text></g><g><title>evaluate (mdp_opt4.py:289) (28 samples, 1.20%)</title><rect x="63.4261%" y="116" width="1.1991%" height="15" fill="rgb(213,25,53)" fg:x="1481" fg:w="28"/><text x="63.6761%" y="126.50"></text></g><g><title>evaluate (mdp_opt4.py:290) (27 samples, 1.16%)</title><rect x="64.6253%" y="116" width="1.1563%" height="15" fill="rgb(252,105,26)" fg:x="1509" fg:w="27"/><text x="64.8753%" y="126.50"></text></g><g><title>evaluate (mdp_opt4.py:291) (37 samples, 1.58%)</title><rect x="65.7816%" y="116" width="1.5846%" height="15" fill="rgb(220,39,43)" fg:x="1536" fg:w="37"/><text x="66.0316%" y="126.50"></text></g><g><title>evaluate (mdp_opt4.py:292) (25 samples, 1.07%)</title><rect x="67.3662%" y="116" width="1.0707%" height="15" fill="rgb(229,68,48)" fg:x="1573" fg:w="25"/><text x="67.6162%" y="126.50"></text></g><g><title>evaluate (mdp_opt4.py:293) (16 samples, 0.69%)</title><rect x="68.4368%" y="116" width="0.6852%" height="15" fill="rgb(252,8,32)" fg:x="1598" fg:w="16"/><text x="68.6868%" y="126.50"></text></g><g><title>evaluate (mdp_opt4.py:294) (11 samples, 0.47%)</title><rect x="69.1221%" y="116" width="0.4711%" height="15" fill="rgb(223,20,43)" fg:x="1614" fg:w="11"/><text x="69.3721%" y="126.50"></text></g><g><title>evaluate (mdp_opt4.py:295) (3 samples, 0.13%)</title><rect x="69.5931%" y="116" width="0.1285%" height="15" fill="rgb(229,81,49)" fg:x="1625" fg:w="3"/><text x="69.8431%" y="126.50"></text></g><g><title>evaluate (mdp_opt4.py:296) (12 samples, 0.51%)</title><rect x="69.7216%" y="116" width="0.5139%" height="15" fill="rgb(236,28,36)" fg:x="1628" fg:w="12"/><text x="69.9716%" y="126.50"></text></g><g><title>evaluate (mdp_opt4.py:298) (19 samples, 0.81%)</title><rect x="70.2355%" y="116" width="0.8137%" height="15" fill="rgb(249,185,26)" fg:x="1640" fg:w="19"/><text x="70.4855%" y="126.50"></text></g><g><title>evaluate (mdp_opt4.py:301) (160 samples, 6.85%)</title><rect x="71.1777%" y="116" width="6.8522%" height="15" fill="rgb(249,174,33)" fg:x="1662" fg:w="160"/><text x="71.4277%" y="126.50">evaluate ..</text></g><g><title>evaluate (mdp_opt4.py:302) (183 samples, 7.84%)</title><rect x="78.0300%" y="116" width="7.8373%" height="15" fill="rgb(233,201,37)" fg:x="1822" fg:w="183"/><text x="78.2800%" y="126.50">evaluate (m..</text></g><g><title>evaluate (mdp_opt4.py:303) (229 samples, 9.81%)</title><rect x="85.8672%" y="116" width="9.8073%" height="15" fill="rgb(221,78,26)" fg:x="2005" fg:w="229"/><text x="86.1172%" y="126.50">evaluate (mdp_..</text></g><g><title>evaluate (mdp_opt4.py:304) (15 samples, 0.64%)</title><rect x="95.6745%" y="116" width="0.6424%" height="15" fill="rgb(250,127,30)" fg:x="2234" fg:w="15"/><text x="95.9245%" y="126.50"></text></g><g><title>evaluate (mdp_opt4.py:305) (19 samples, 0.81%)</title><rect x="96.3169%" y="116" width="0.8137%" height="15" fill="rgb(230,49,44)" fg:x="2249" fg:w="19"/><text x="96.5669%" y="126.50"></text></g><g><title>&lt;module&gt; (mdp_opt4.py:334) (2,334 samples, 99.96%)</title><rect x="0.0000%" y="68" width="99.9572%" height="15" fill="rgb(229,67,23)" fg:x="0" fg:w="2334"/><text x="0.2500%" y="78.50">&lt;module&gt; (mdp_opt4.py:334)</text></g><g><title>main (mdp_opt4.py:330) (2,334 samples, 99.96%)</title><rect x="0.0000%" y="84" width="99.9572%" height="15" fill="rgb(249,83,47)" fg:x="0" fg:w="2334"/><text x="0.2500%" y="94.50">main (mdp_opt4.py:330)</text></g><g><title>bench_mdp (mdp_opt4.py:321) (2,334 samples, 99.96%)</title><rect x="0.0000%" y="100" width="99.9572%" height="15" fill="rgb(215,43,3)" fg:x="0" fg:w="2334"/><text x="0.2500%" y="110.50">bench_mdp (mdp_opt4.py:321)</text></g><g><title>evaluate (mdp_opt4.py:307) (66 samples, 2.83%)</title><rect x="97.1306%" y="116" width="2.8266%" height="15" fill="rgb(238,154,13)" fg:x="2268" fg:w="66"/><text x="97.3806%" y="126.50">ev..</text></g><g><title>all (2,335 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(219,56,2)" fg:x="0" fg:w="2335"/><text x="0.2500%" y="62.50"></text></g></svg></svg>