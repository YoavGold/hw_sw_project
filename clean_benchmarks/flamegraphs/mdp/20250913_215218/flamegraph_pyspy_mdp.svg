<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="330" onload="init(evt)" viewBox="0 0 1200 330" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="330" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">/csl/yoav.gold/hw_sw_project/.venv_dbg/bin/py-spy record -o flamegraphs/mdp/20250913_215218/flamegraph_pyspy_mdp.svg -d 20 -r 100 -- /csl/yoav.gold/hw_sw_project/.venv_dbg/bin/python mdp_clean.py</text><text id="details" fill="rgb(0,0,0)" x="10" y="40.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="319.00"> </text><svg id="frames" x="10" width="1180" total_samples="1999"><g><title>topoSort (mdp_clean.py:23) (4 samples, 0.20%)</title><rect x="0.2001%" y="132" width="0.2001%" height="15" fill="rgb(227,0,7)" fg:x="4" fg:w="4"/><text x="0.4501%" y="142.50"></text></g><g><title>_getSuccessorsB (mdp_clean.py:153) (8 samples, 0.40%)</title><rect x="0.8504%" y="180" width="0.4002%" height="15" fill="rgb(217,0,24)" fg:x="17" fg:w="8"/><text x="1.1004%" y="190.50"></text></g><g><title>__new__ (fractions.py:93) (2 samples, 0.10%)</title><rect x="1.1506%" y="196" width="0.1001%" height="15" fill="rgb(221,193,54)" fg:x="23" fg:w="2"/><text x="1.4006%" y="206.50"></text></g><g><title>_make (collections/__init__.py:422) (2 samples, 0.10%)</title><rect x="1.4507%" y="276" width="0.1001%" height="15" fill="rgb(248,212,6)" fg:x="29" fg:w="2"/><text x="1.7007%" y="286.50"></text></g><g><title>_applyActionSide1 (mdp_clean.py:93) (4 samples, 0.20%)</title><rect x="1.4007%" y="228" width="0.2001%" height="15" fill="rgb(208,68,35)" fg:x="28" fg:w="4"/><text x="1.6507%" y="238.50"></text></g><g><title>applyHPChange (mdp_clean.py:71) (4 samples, 0.20%)</title><rect x="1.4007%" y="244" width="0.2001%" height="15" fill="rgb(232,128,0)" fg:x="28" fg:w="4"/><text x="1.6507%" y="254.50"></text></g><g><title>_replace (collections/__init__.py:431) (4 samples, 0.20%)</title><rect x="1.4007%" y="260" width="0.2001%" height="15" fill="rgb(207,160,47)" fg:x="28" fg:w="4"/><text x="1.6507%" y="270.50"></text></g><g><title>_applyActionPair (mdp_clean.py:141) (5 samples, 0.25%)</title><rect x="1.4007%" y="196" width="0.2501%" height="15" fill="rgb(228,23,34)" fg:x="28" fg:w="5"/><text x="1.6507%" y="206.50"></text></g><g><title>_applyAction (mdp_clean.py:114) (5 samples, 0.25%)</title><rect x="1.4007%" y="212" width="0.2501%" height="15" fill="rgb(218,30,26)" fg:x="28" fg:w="5"/><text x="1.6507%" y="222.50"></text></g><g><title>_add (fractions.py:457) (2 samples, 0.10%)</title><rect x="1.7509%" y="228" width="0.1001%" height="15" fill="rgb(220,122,19)" fg:x="35" fg:w="2"/><text x="2.0009%" y="238.50"></text></g><g><title>__new__ (fractions.py:93) (2 samples, 0.10%)</title><rect x="1.7509%" y="244" width="0.1001%" height="15" fill="rgb(250,228,42)" fg:x="35" fg:w="2"/><text x="2.0009%" y="254.50"></text></g><g><title>_getSuccessorsB (mdp_clean.py:160) (11 samples, 0.55%)</title><rect x="1.4007%" y="180" width="0.5503%" height="15" fill="rgb(240,193,28)" fg:x="28" fg:w="11"/><text x="1.6507%" y="190.50"></text></g><g><title>_applyActionPair (mdp_clean.py:148) (6 samples, 0.30%)</title><rect x="1.6508%" y="196" width="0.3002%" height="15" fill="rgb(216,20,37)" fg:x="33" fg:w="6"/><text x="1.9008%" y="206.50"></text></g><g><title>forward (fractions.py:358) (4 samples, 0.20%)</title><rect x="1.7509%" y="212" width="0.2001%" height="15" fill="rgb(206,188,39)" fg:x="35" fg:w="4"/><text x="2.0009%" y="222.50"></text></g><g><title>getCritDist (mdp_clean.py:44) (2 samples, 0.10%)</title><rect x="2.3512%" y="244" width="0.1001%" height="15" fill="rgb(217,207,13)" fg:x="47" fg:w="2"/><text x="2.6012%" y="254.50"></text></g><g><title>getCritDist (mdp_clean.py:45) (6 samples, 0.30%)</title><rect x="2.4512%" y="244" width="0.3002%" height="15" fill="rgb(231,73,38)" fg:x="49" fg:w="6"/><text x="2.7012%" y="254.50"></text></g><g><title>getDamages (mdp_clean.py:40) (6 samples, 0.30%)</title><rect x="2.4512%" y="260" width="0.3002%" height="15" fill="rgb(225,20,46)" fg:x="49" fg:w="6"/><text x="2.7012%" y="270.50"></text></g><g><title>&lt;listcomp&gt; (mdp_clean.py:40) (6 samples, 0.30%)</title><rect x="2.4512%" y="276" width="0.3002%" height="15" fill="rgb(210,31,41)" fg:x="49" fg:w="6"/><text x="2.7012%" y="286.50"></text></g><g><title>getCritDist (mdp_clean.py:46) (7 samples, 0.35%)</title><rect x="2.7514%" y="244" width="0.3502%" height="15" fill="rgb(221,200,47)" fg:x="55" fg:w="7"/><text x="3.0014%" y="254.50"></text></g><g><title>getDamages (mdp_clean.py:40) (7 samples, 0.35%)</title><rect x="2.7514%" y="260" width="0.3502%" height="15" fill="rgb(226,26,5)" fg:x="55" fg:w="7"/><text x="3.0014%" y="270.50"></text></g><g><title>&lt;listcomp&gt; (mdp_clean.py:40) (5 samples, 0.25%)</title><rect x="2.8514%" y="276" width="0.2501%" height="15" fill="rgb(249,33,26)" fg:x="57" fg:w="5"/><text x="3.1014%" y="286.50"></text></g><g><title>getCritDist (mdp_clean.py:49) (11 samples, 0.55%)</title><rect x="3.1016%" y="244" width="0.5503%" height="15" fill="rgb(235,183,28)" fg:x="62" fg:w="11"/><text x="3.3516%" y="254.50"></text></g><g><title>reverse (fractions.py:371) (6 samples, 0.30%)</title><rect x="3.3517%" y="260" width="0.3002%" height="15" fill="rgb(221,5,38)" fg:x="67" fg:w="6"/><text x="3.6017%" y="270.50"></text></g><g><title>_sub (fractions.py:473) (5 samples, 0.25%)</title><rect x="3.4017%" y="276" width="0.2501%" height="15" fill="rgb(247,18,42)" fg:x="68" fg:w="5"/><text x="3.6517%" y="286.50"></text></g><g><title>getCritDist (mdp_clean.py:50) (5 samples, 0.25%)</title><rect x="3.6518%" y="244" width="0.2501%" height="15" fill="rgb(241,131,45)" fg:x="73" fg:w="5"/><text x="3.9018%" y="254.50"></text></g><g><title>forward (fractions.py:358) (4 samples, 0.20%)</title><rect x="3.7019%" y="260" width="0.2001%" height="15" fill="rgb(249,31,29)" fg:x="74" fg:w="4"/><text x="3.9519%" y="270.50"></text></g><g><title>_div (fractions.py:515) (2 samples, 0.10%)</title><rect x="3.8019%" y="276" width="0.1001%" height="15" fill="rgb(225,111,53)" fg:x="76" fg:w="2"/><text x="4.0519%" y="286.50"></text></g><g><title>__new__ (fractions.py:93) (11 samples, 0.55%)</title><rect x="5.7029%" y="260" width="0.5503%" height="15" fill="rgb(238,160,17)" fg:x="114" fg:w="11"/><text x="5.9529%" y="270.50"></text></g><g><title>forward (fractions.py:357) (14 samples, 0.70%)</title><rect x="6.2531%" y="260" width="0.7004%" height="15" fill="rgb(214,148,48)" fg:x="125" fg:w="14"/><text x="6.5031%" y="270.50"></text></g><g><title>denominator (fractions.py:262) (6 samples, 0.30%)</title><rect x="8.2041%" y="292" width="0.3002%" height="15" fill="rgb(232,36,49)" fg:x="164" fg:w="6"/><text x="8.4541%" y="302.50"></text></g><g><title>_add (fractions.py:453) (20 samples, 1.00%)</title><rect x="7.8039%" y="276" width="1.0005%" height="15" fill="rgb(209,103,24)" fg:x="156" fg:w="20"/><text x="8.0539%" y="286.50"></text></g><g><title>numerator (fractions.py:258) (6 samples, 0.30%)</title><rect x="8.5043%" y="292" width="0.3002%" height="15" fill="rgb(229,88,8)" fg:x="170" fg:w="6"/><text x="8.7543%" y="302.50"></text></g><g><title>denominator (fractions.py:262) (3 samples, 0.15%)</title><rect x="9.4547%" y="292" width="0.1501%" height="15" fill="rgb(213,181,19)" fg:x="189" fg:w="3"/><text x="9.7047%" y="302.50"></text></g><g><title>_add (fractions.py:454) (21 samples, 1.05%)</title><rect x="8.8044%" y="276" width="1.0505%" height="15" fill="rgb(254,191,54)" fg:x="176" fg:w="21"/><text x="9.0544%" y="286.50"></text></g><g><title>numerator (fractions.py:258) (5 samples, 0.25%)</title><rect x="9.6048%" y="292" width="0.2501%" height="15" fill="rgb(241,83,37)" fg:x="192" fg:w="5"/><text x="9.8548%" y="302.50"></text></g><g><title>_add (fractions.py:455) (8 samples, 0.40%)</title><rect x="9.8549%" y="276" width="0.4002%" height="15" fill="rgb(233,36,39)" fg:x="197" fg:w="8"/><text x="10.1049%" y="286.50"></text></g><g><title>_add (fractions.py:457) (13 samples, 0.65%)</title><rect x="10.3052%" y="276" width="0.6503%" height="15" fill="rgb(226,3,54)" fg:x="206" fg:w="13"/><text x="10.5552%" y="286.50"></text></g><g><title>__new__ (fractions.py:93) (5 samples, 0.25%)</title><rect x="10.7054%" y="292" width="0.2501%" height="15" fill="rgb(245,192,40)" fg:x="214" fg:w="5"/><text x="10.9554%" y="302.50"></text></g><g><title>_add (fractions.py:458) (2 samples, 0.10%)</title><rect x="10.9555%" y="276" width="0.1001%" height="15" fill="rgb(238,167,29)" fg:x="219" fg:w="2"/><text x="11.2055%" y="286.50"></text></g><g><title>_add (fractions.py:459) (15 samples, 0.75%)</title><rect x="11.0555%" y="276" width="0.7504%" height="15" fill="rgb(232,182,51)" fg:x="221" fg:w="15"/><text x="11.3055%" y="286.50"></text></g><g><title>_add (fractions.py:460) (12 samples, 0.60%)</title><rect x="11.8059%" y="276" width="0.6003%" height="15" fill="rgb(231,60,39)" fg:x="236" fg:w="12"/><text x="12.0559%" y="286.50"></text></g><g><title>__new__ (fractions.py:142) (3 samples, 0.15%)</title><rect x="13.1066%" y="292" width="0.1501%" height="15" fill="rgb(208,69,12)" fg:x="262" fg:w="3"/><text x="13.3566%" y="302.50"></text></g><g><title>__new__ (fractions.py:164) (2 samples, 0.10%)</title><rect x="13.3067%" y="292" width="0.1001%" height="15" fill="rgb(235,93,37)" fg:x="266" fg:w="2"/><text x="13.5567%" y="302.50"></text></g><g><title>__new__ (fractions.py:93) (8 samples, 0.40%)</title><rect x="13.4067%" y="292" width="0.4002%" height="15" fill="rgb(213,116,39)" fg:x="268" fg:w="8"/><text x="13.6567%" y="302.50"></text></g><g><title>_add (fractions.py:462) (30 samples, 1.50%)</title><rect x="12.4062%" y="276" width="1.5008%" height="15" fill="rgb(222,207,29)" fg:x="248" fg:w="30"/><text x="12.6562%" y="286.50"></text></g><g><title>__new__ (fractions.py:95) (2 samples, 0.10%)</title><rect x="13.8069%" y="292" width="0.1001%" height="15" fill="rgb(206,96,30)" fg:x="276" fg:w="2"/><text x="14.0569%" y="302.50"></text></g><g><title>__new__ (fractions.py:142) (3 samples, 0.15%)</title><rect x="15.3077%" y="292" width="0.1501%" height="15" fill="rgb(218,138,4)" fg:x="306" fg:w="3"/><text x="15.5577%" y="302.50"></text></g><g><title>__new__ (fractions.py:164) (2 samples, 0.10%)</title><rect x="15.5078%" y="292" width="0.1001%" height="15" fill="rgb(250,191,14)" fg:x="310" fg:w="2"/><text x="15.7578%" y="302.50"></text></g><g><title>_applyActionSide1 (mdp_clean.py:100) (296 samples, 14.81%)</title><rect x="2.2011%" y="228" width="14.8074%" height="15" fill="rgb(239,60,40)" fg:x="44" fg:w="296"/><text x="2.4511%" y="238.50">_applyActionSide1 (mdp_..</text></g><g><title>getCritDist (mdp_clean.py:52) (262 samples, 13.11%)</title><rect x="3.9020%" y="244" width="13.1066%" height="15" fill="rgb(206,27,48)" fg:x="78" fg:w="262"/><text x="4.1520%" y="254.50">getCritDist (mdp_cle..</text></g><g><title>forward (fractions.py:358) (201 samples, 10.06%)</title><rect x="6.9535%" y="260" width="10.0550%" height="15" fill="rgb(225,35,8)" fg:x="139" fg:w="201"/><text x="7.2035%" y="270.50">forward (fracti..</text></g><g><title>_add (fractions.py:463) (62 samples, 3.10%)</title><rect x="13.9070%" y="276" width="3.1016%" height="15" fill="rgb(250,213,24)" fg:x="278" fg:w="62"/><text x="14.1570%" y="286.50">_ad..</text></g><g><title>__new__ (fractions.py:93) (27 samples, 1.35%)</title><rect x="15.6578%" y="292" width="1.3507%" height="15" fill="rgb(247,123,22)" fg:x="313" fg:w="27"/><text x="15.9078%" y="302.50"></text></g><g><title>applyHPChange (mdp_clean.py:70) (8 samples, 0.40%)</title><rect x="17.0585%" y="244" width="0.4002%" height="15" fill="rgb(231,138,38)" fg:x="341" fg:w="8"/><text x="17.3085%" y="254.50"></text></g><g><title>_applyActionSide1 (mdp_clean.py:107) (43 samples, 2.15%)</title><rect x="17.0085%" y="228" width="2.1511%" height="15" fill="rgb(231,145,46)" fg:x="340" fg:w="43"/><text x="17.2585%" y="238.50">_..</text></g><g><title>applyHPChange (mdp_clean.py:71) (34 samples, 1.70%)</title><rect x="17.4587%" y="244" width="1.7009%" height="15" fill="rgb(251,118,11)" fg:x="349" fg:w="34"/><text x="17.7087%" y="254.50"></text></g><g><title>_replace (collections/__init__.py:431) (26 samples, 1.30%)</title><rect x="17.8589%" y="260" width="1.3007%" height="15" fill="rgb(217,147,25)" fg:x="357" fg:w="26"/><text x="18.1089%" y="270.50"></text></g><g><title>_make (collections/__init__.py:422) (14 samples, 0.70%)</title><rect x="18.4592%" y="276" width="0.7004%" height="15" fill="rgb(247,81,37)" fg:x="369" fg:w="14"/><text x="18.7092%" y="286.50"></text></g><g><title>__new__ (fractions.py:93) (4 samples, 0.20%)</title><rect x="19.9600%" y="244" width="0.2001%" height="15" fill="rgb(209,12,38)" fg:x="399" fg:w="4"/><text x="20.2100%" y="254.50"></text></g><g><title>_add (fractions.py:453) (5 samples, 0.25%)</title><rect x="20.2101%" y="260" width="0.2501%" height="15" fill="rgb(227,1,9)" fg:x="404" fg:w="5"/><text x="20.4601%" y="270.50"></text></g><g><title>numerator (fractions.py:258) (2 samples, 0.10%)</title><rect x="20.3602%" y="276" width="0.1001%" height="15" fill="rgb(248,47,43)" fg:x="407" fg:w="2"/><text x="20.6102%" y="286.50"></text></g><g><title>_add (fractions.py:454) (4 samples, 0.20%)</title><rect x="20.4602%" y="260" width="0.2001%" height="15" fill="rgb(221,10,30)" fg:x="409" fg:w="4"/><text x="20.7102%" y="270.50"></text></g><g><title>_add (fractions.py:455) (4 samples, 0.20%)</title><rect x="20.6603%" y="260" width="0.2001%" height="15" fill="rgb(210,229,1)" fg:x="413" fg:w="4"/><text x="20.9103%" y="270.50"></text></g><g><title>_add (fractions.py:457) (5 samples, 0.25%)</title><rect x="20.8604%" y="260" width="0.2501%" height="15" fill="rgb(222,148,37)" fg:x="417" fg:w="5"/><text x="21.1104%" y="270.50"></text></g><g><title>__new__ (fractions.py:93) (3 samples, 0.15%)</title><rect x="20.9605%" y="276" width="0.1501%" height="15" fill="rgb(234,67,33)" fg:x="419" fg:w="3"/><text x="21.2105%" y="286.50"></text></g><g><title>_add (fractions.py:458) (2 samples, 0.10%)</title><rect x="21.1106%" y="260" width="0.1001%" height="15" fill="rgb(247,98,35)" fg:x="422" fg:w="2"/><text x="21.3606%" y="270.50"></text></g><g><title>_add (fractions.py:459) (7 samples, 0.35%)</title><rect x="21.2106%" y="260" width="0.3502%" height="15" fill="rgb(247,138,52)" fg:x="424" fg:w="7"/><text x="21.4606%" y="270.50"></text></g><g><title>__new__ (fractions.py:142) (2 samples, 0.10%)</title><rect x="21.6608%" y="276" width="0.1001%" height="15" fill="rgb(213,79,30)" fg:x="433" fg:w="2"/><text x="21.9108%" y="286.50"></text></g><g><title>__new__ (fractions.py:165) (2 samples, 0.10%)</title><rect x="21.8109%" y="276" width="0.1001%" height="15" fill="rgb(246,177,23)" fg:x="436" fg:w="2"/><text x="22.0609%" y="286.50"></text></g><g><title>_add (fractions.py:462) (6 samples, 0.30%)</title><rect x="21.6608%" y="260" width="0.3002%" height="15" fill="rgb(230,62,27)" fg:x="433" fg:w="6"/><text x="21.9108%" y="270.50"></text></g><g><title>_applyActionSide1 (mdp_clean.py:108) (66 samples, 3.30%)</title><rect x="19.1596%" y="228" width="3.3017%" height="15" fill="rgb(216,154,8)" fg:x="383" fg:w="66"/><text x="19.4096%" y="238.50">_ap..</text></g><g><title>forward (fractions.py:358) (46 samples, 2.30%)</title><rect x="20.1601%" y="244" width="2.3012%" height="15" fill="rgb(244,35,45)" fg:x="403" fg:w="46"/><text x="20.4101%" y="254.50">f..</text></g><g><title>_add (fractions.py:463) (10 samples, 0.50%)</title><rect x="21.9610%" y="260" width="0.5003%" height="15" fill="rgb(251,115,12)" fg:x="439" fg:w="10"/><text x="22.2110%" y="270.50"></text></g><g><title>__new__ (fractions.py:93) (6 samples, 0.30%)</title><rect x="22.1611%" y="276" width="0.3002%" height="15" fill="rgb(240,54,50)" fg:x="443" fg:w="6"/><text x="22.4111%" y="286.50"></text></g><g><title>_applyAction (mdp_clean.py:117) (406 samples, 20.31%)</title><rect x="2.2011%" y="212" width="20.3102%" height="15" fill="rgb(233,84,52)" fg:x="44" fg:w="406"/><text x="2.4511%" y="222.50">_applyAction (mdp_clean.py:117)</text></g><g><title>_applyActionPair (mdp_clean.py:141) (410 samples, 20.51%)</title><rect x="2.0510%" y="196" width="20.5103%" height="15" fill="rgb(207,117,47)" fg:x="41" fg:w="410"/><text x="2.3010%" y="206.50">_applyActionPair (mdp_clean.py:1..</text></g><g><title>forward (fractions.py:357) (2 samples, 0.10%)</title><rect x="22.9115%" y="212" width="0.1001%" height="15" fill="rgb(249,43,39)" fg:x="458" fg:w="2"/><text x="23.1615%" y="222.50"></text></g><g><title>_add (fractions.py:453) (2 samples, 0.10%)</title><rect x="23.1116%" y="228" width="0.1001%" height="15" fill="rgb(209,38,44)" fg:x="462" fg:w="2"/><text x="23.3616%" y="238.50"></text></g><g><title>_add (fractions.py:454) (3 samples, 0.15%)</title><rect x="23.2116%" y="228" width="0.1501%" height="15" fill="rgb(236,212,23)" fg:x="464" fg:w="3"/><text x="23.4616%" y="238.50"></text></g><g><title>_add (fractions.py:457) (2 samples, 0.10%)</title><rect x="23.4117%" y="228" width="0.1001%" height="15" fill="rgb(242,79,21)" fg:x="468" fg:w="2"/><text x="23.6617%" y="238.50"></text></g><g><title>_mul (fractions.py:486) (2 samples, 0.10%)</title><rect x="23.6118%" y="228" width="0.1001%" height="15" fill="rgb(211,96,35)" fg:x="472" fg:w="2"/><text x="23.8618%" y="238.50"></text></g><g><title>_getSuccessorsB (mdp_clean.py:162) (439 samples, 21.96%)</title><rect x="1.9510%" y="180" width="21.9610%" height="15" fill="rgb(253,215,40)" fg:x="39" fg:w="439"/><text x="2.2010%" y="190.50">_getSuccessorsB (mdp_clean.py:162)</text></g><g><title>_applyActionPair (mdp_clean.py:148) (26 samples, 1.30%)</title><rect x="22.6113%" y="196" width="1.3007%" height="15" fill="rgb(211,81,21)" fg:x="452" fg:w="26"/><text x="22.8613%" y="206.50"></text></g><g><title>forward (fractions.py:358) (18 samples, 0.90%)</title><rect x="23.0115%" y="212" width="0.9005%" height="15" fill="rgb(208,190,38)" fg:x="460" fg:w="18"/><text x="23.2615%" y="222.50"></text></g><g><title>_mul (fractions.py:495) (4 samples, 0.20%)</title><rect x="23.7119%" y="228" width="0.2001%" height="15" fill="rgb(235,213,38)" fg:x="474" fg:w="4"/><text x="23.9619%" y="238.50"></text></g><g><title>__float__ (numbers.py:291) (2 samples, 0.10%)</title><rect x="24.0120%" y="212" width="0.1001%" height="15" fill="rgb(237,122,38)" fg:x="480" fg:w="2"/><text x="24.2620%" y="222.50"></text></g><g><title>getSuccessors (mdp_clean.py:191) (468 samples, 23.41%)</title><rect x="0.7504%" y="164" width="23.4117%" height="15" fill="rgb(244,218,35)" fg:x="15" fg:w="468"/><text x="1.0004%" y="174.50">getSuccessors (mdp_clean.py:191)</text></g><g><title>_getSuccessorsB (mdp_clean.py:167) (5 samples, 0.25%)</title><rect x="23.9120%" y="180" width="0.2501%" height="15" fill="rgb(240,68,47)" fg:x="478" fg:w="5"/><text x="24.1620%" y="190.50"></text></g><g><title>&lt;dictcomp&gt; (mdp_clean.py:167) (3 samples, 0.15%)</title><rect x="24.0120%" y="196" width="0.1501%" height="15" fill="rgb(210,16,53)" fg:x="480" fg:w="3"/><text x="24.2620%" y="206.50"></text></g><g><title>getCritDist (mdp_clean.py:46) (3 samples, 0.15%)</title><rect x="24.6123%" y="228" width="0.1501%" height="15" fill="rgb(235,124,12)" fg:x="492" fg:w="3"/><text x="24.8623%" y="238.50"></text></g><g><title>getDamages (mdp_clean.py:40) (3 samples, 0.15%)</title><rect x="24.6123%" y="244" width="0.1501%" height="15" fill="rgb(224,169,11)" fg:x="492" fg:w="3"/><text x="24.8623%" y="254.50"></text></g><g><title>&lt;listcomp&gt; (mdp_clean.py:40) (2 samples, 0.10%)</title><rect x="24.6623%" y="260" width="0.1001%" height="15" fill="rgb(250,166,2)" fg:x="493" fg:w="2"/><text x="24.9123%" y="270.50"></text></g><g><title>getCritDist (mdp_clean.py:49) (2 samples, 0.10%)</title><rect x="24.7624%" y="228" width="0.1001%" height="15" fill="rgb(242,216,29)" fg:x="495" fg:w="2"/><text x="25.0124%" y="238.50"></text></g><g><title>reverse (fractions.py:371) (2 samples, 0.10%)</title><rect x="24.7624%" y="244" width="0.1001%" height="15" fill="rgb(230,116,27)" fg:x="495" fg:w="2"/><text x="25.0124%" y="254.50"></text></g><g><title>getCritDist (mdp_clean.py:50) (2 samples, 0.10%)</title><rect x="24.8624%" y="228" width="0.1001%" height="15" fill="rgb(228,99,48)" fg:x="497" fg:w="2"/><text x="25.1124%" y="238.50"></text></g><g><title>forward (fractions.py:358) (2 samples, 0.10%)</title><rect x="24.8624%" y="244" width="0.1001%" height="15" fill="rgb(253,11,6)" fg:x="497" fg:w="2"/><text x="25.1124%" y="254.50"></text></g><g><title>forward (fractions.py:357) (5 samples, 0.25%)</title><rect x="25.5628%" y="244" width="0.2501%" height="15" fill="rgb(247,143,39)" fg:x="511" fg:w="5"/><text x="25.8128%" y="254.50"></text></g><g><title>_add (fractions.py:453) (7 samples, 0.35%)</title><rect x="26.0130%" y="260" width="0.3502%" height="15" fill="rgb(236,97,10)" fg:x="520" fg:w="7"/><text x="26.2630%" y="270.50"></text></g><g><title>denominator (fractions.py:262) (3 samples, 0.15%)</title><rect x="26.2131%" y="276" width="0.1501%" height="15" fill="rgb(233,208,19)" fg:x="524" fg:w="3"/><text x="26.4631%" y="286.50"></text></g><g><title>_add (fractions.py:454) (3 samples, 0.15%)</title><rect x="26.3632%" y="260" width="0.1501%" height="15" fill="rgb(216,164,2)" fg:x="527" fg:w="3"/><text x="26.6132%" y="270.50"></text></g><g><title>_add (fractions.py:455) (4 samples, 0.20%)</title><rect x="26.5133%" y="260" width="0.2001%" height="15" fill="rgb(220,129,5)" fg:x="530" fg:w="4"/><text x="26.7633%" y="270.50"></text></g><g><title>_add (fractions.py:459) (5 samples, 0.25%)</title><rect x="26.8634%" y="260" width="0.2501%" height="15" fill="rgb(242,17,10)" fg:x="537" fg:w="5"/><text x="27.1134%" y="270.50"></text></g><g><title>_add (fractions.py:460) (2 samples, 0.10%)</title><rect x="27.1136%" y="260" width="0.1001%" height="15" fill="rgb(242,107,0)" fg:x="542" fg:w="2"/><text x="27.3636%" y="270.50"></text></g><g><title>_add (fractions.py:462) (10 samples, 0.50%)</title><rect x="27.2636%" y="260" width="0.5003%" height="15" fill="rgb(251,28,31)" fg:x="545" fg:w="10"/><text x="27.5136%" y="270.50"></text></g><g><title>__new__ (fractions.py:93) (5 samples, 0.25%)</title><rect x="27.5138%" y="276" width="0.2501%" height="15" fill="rgb(233,223,10)" fg:x="550" fg:w="5"/><text x="27.7638%" y="286.50"></text></g><g><title>_applyActionSide1 (mdp_clean.py:100) (77 samples, 3.85%)</title><rect x="24.5623%" y="212" width="3.8519%" height="15" fill="rgb(215,21,27)" fg:x="491" fg:w="77"/><text x="24.8123%" y="222.50">_app..</text></g><g><title>getCritDist (mdp_clean.py:52) (69 samples, 3.45%)</title><rect x="24.9625%" y="228" width="3.4517%" height="15" fill="rgb(232,23,21)" fg:x="499" fg:w="69"/><text x="25.2125%" y="238.50">get..</text></g><g><title>forward (fractions.py:358) (52 samples, 2.60%)</title><rect x="25.8129%" y="244" width="2.6013%" height="15" fill="rgb(244,5,23)" fg:x="516" fg:w="52"/><text x="26.0629%" y="254.50">fo..</text></g><g><title>_add (fractions.py:463) (13 samples, 0.65%)</title><rect x="27.7639%" y="260" width="0.6503%" height="15" fill="rgb(226,81,46)" fg:x="555" fg:w="13"/><text x="28.0139%" y="270.50"></text></g><g><title>__new__ (fractions.py:93) (7 samples, 0.35%)</title><rect x="28.0640%" y="276" width="0.3502%" height="15" fill="rgb(247,70,30)" fg:x="561" fg:w="7"/><text x="28.3140%" y="286.50"></text></g><g><title>applyHPChange (mdp_clean.py:70) (7 samples, 0.35%)</title><rect x="28.4142%" y="228" width="0.3502%" height="15" fill="rgb(212,68,19)" fg:x="568" fg:w="7"/><text x="28.6642%" y="238.50"></text></g><g><title>_applyActionSide1 (mdp_clean.py:107) (17 samples, 0.85%)</title><rect x="28.4142%" y="212" width="0.8504%" height="15" fill="rgb(240,187,13)" fg:x="568" fg:w="17"/><text x="28.6642%" y="222.50"></text></g><g><title>applyHPChange (mdp_clean.py:71) (10 samples, 0.50%)</title><rect x="28.7644%" y="228" width="0.5003%" height="15" fill="rgb(223,113,26)" fg:x="575" fg:w="10"/><text x="29.0144%" y="238.50"></text></g><g><title>_replace (collections/__init__.py:431) (10 samples, 0.50%)</title><rect x="28.7644%" y="244" width="0.5003%" height="15" fill="rgb(206,192,2)" fg:x="575" fg:w="10"/><text x="29.0144%" y="254.50"></text></g><g><title>_make (collections/__init__.py:422) (6 samples, 0.30%)</title><rect x="28.9645%" y="260" width="0.3002%" height="15" fill="rgb(241,108,4)" fg:x="579" fg:w="6"/><text x="29.2145%" y="270.50"></text></g><g><title>__new__ (fractions.py:93) (2 samples, 0.10%)</title><rect x="29.5148%" y="228" width="0.1001%" height="15" fill="rgb(247,173,49)" fg:x="590" fg:w="2"/><text x="29.7648%" y="238.50"></text></g><g><title>_add (fractions.py:457) (4 samples, 0.20%)</title><rect x="29.7649%" y="244" width="0.2001%" height="15" fill="rgb(224,114,35)" fg:x="595" fg:w="4"/><text x="30.0149%" y="254.50"></text></g><g><title>_applyAction (mdp_clean.py:114) (114 samples, 5.70%)</title><rect x="24.5123%" y="196" width="5.7029%" height="15" fill="rgb(245,159,27)" fg:x="490" fg:w="114"/><text x="24.7623%" y="206.50">_applyA..</text></g><g><title>_applyActionSide1 (mdp_clean.py:108) (19 samples, 0.95%)</title><rect x="29.2646%" y="212" width="0.9505%" height="15" fill="rgb(245,172,44)" fg:x="585" fg:w="19"/><text x="29.5146%" y="222.50"></text></g><g><title>forward (fractions.py:358) (12 samples, 0.60%)</title><rect x="29.6148%" y="228" width="0.6003%" height="15" fill="rgb(236,23,11)" fg:x="592" fg:w="12"/><text x="29.8648%" y="238.50"></text></g><g><title>_add (fractions.py:463) (3 samples, 0.15%)</title><rect x="30.0650%" y="244" width="0.1501%" height="15" fill="rgb(205,117,38)" fg:x="601" fg:w="3"/><text x="30.3150%" y="254.50"></text></g><g><title>getCritDist (mdp_clean.py:45) (4 samples, 0.20%)</title><rect x="30.3652%" y="228" width="0.2001%" height="15" fill="rgb(237,72,25)" fg:x="607" fg:w="4"/><text x="30.6152%" y="238.50"></text></g><g><title>getDamages (mdp_clean.py:40) (4 samples, 0.20%)</title><rect x="30.3652%" y="244" width="0.2001%" height="15" fill="rgb(244,70,9)" fg:x="607" fg:w="4"/><text x="30.6152%" y="254.50"></text></g><g><title>&lt;listcomp&gt; (mdp_clean.py:40) (3 samples, 0.15%)</title><rect x="30.4152%" y="260" width="0.1501%" height="15" fill="rgb(217,125,39)" fg:x="608" fg:w="3"/><text x="30.6652%" y="270.50"></text></g><g><title>getCritDist (mdp_clean.py:50) (3 samples, 0.15%)</title><rect x="30.6653%" y="228" width="0.1501%" height="15" fill="rgb(235,36,10)" fg:x="613" fg:w="3"/><text x="30.9153%" y="238.50"></text></g><g><title>forward (fractions.py:358) (2 samples, 0.10%)</title><rect x="30.7154%" y="244" width="0.1001%" height="15" fill="rgb(251,123,47)" fg:x="614" fg:w="2"/><text x="30.9654%" y="254.50"></text></g><g><title>__new__ (fractions.py:93) (2 samples, 0.10%)</title><rect x="31.5158%" y="244" width="0.1001%" height="15" fill="rgb(221,13,13)" fg:x="630" fg:w="2"/><text x="31.7658%" y="254.50"></text></g><g><title>__new__ (fractions.py:98) (2 samples, 0.10%)</title><rect x="31.6658%" y="244" width="0.1001%" height="15" fill="rgb(238,131,9)" fg:x="633" fg:w="2"/><text x="31.9158%" y="254.50"></text></g><g><title>forward (fractions.py:357) (6 samples, 0.30%)</title><rect x="31.7659%" y="244" width="0.3002%" height="15" fill="rgb(211,50,8)" fg:x="635" fg:w="6"/><text x="32.0159%" y="254.50"></text></g><g><title>denominator (fractions.py:262) (2 samples, 0.10%)</title><rect x="32.7664%" y="276" width="0.1001%" height="15" fill="rgb(245,182,24)" fg:x="655" fg:w="2"/><text x="33.0164%" y="286.50"></text></g><g><title>_add (fractions.py:453) (12 samples, 0.60%)</title><rect x="32.3662%" y="260" width="0.6003%" height="15" fill="rgb(242,14,37)" fg:x="647" fg:w="12"/><text x="32.6162%" y="270.50"></text></g><g><title>numerator (fractions.py:258) (2 samples, 0.10%)</title><rect x="32.8664%" y="276" width="0.1001%" height="15" fill="rgb(246,228,12)" fg:x="657" fg:w="2"/><text x="33.1164%" y="286.50"></text></g><g><title>_add (fractions.py:454) (2 samples, 0.10%)</title><rect x="32.9665%" y="260" width="0.1001%" height="15" fill="rgb(213,55,15)" fg:x="659" fg:w="2"/><text x="33.2165%" y="270.50"></text></g><g><title>denominator (fractions.py:262) (2 samples, 0.10%)</title><rect x="32.9665%" y="276" width="0.1001%" height="15" fill="rgb(209,9,3)" fg:x="659" fg:w="2"/><text x="33.2165%" y="286.50"></text></g><g><title>_add (fractions.py:455) (3 samples, 0.15%)</title><rect x="33.0665%" y="260" width="0.1501%" height="15" fill="rgb(230,59,30)" fg:x="661" fg:w="3"/><text x="33.3165%" y="270.50"></text></g><g><title>_add (fractions.py:459) (3 samples, 0.15%)</title><rect x="33.3167%" y="260" width="0.1501%" height="15" fill="rgb(209,121,21)" fg:x="666" fg:w="3"/><text x="33.5667%" y="270.50"></text></g><g><title>_add (fractions.py:460) (2 samples, 0.10%)</title><rect x="33.4667%" y="260" width="0.1001%" height="15" fill="rgb(220,109,13)" fg:x="669" fg:w="2"/><text x="33.7167%" y="270.50"></text></g><g><title>__new__ (fractions.py:165) (3 samples, 0.15%)</title><rect x="33.8669%" y="276" width="0.1501%" height="15" fill="rgb(232,18,1)" fg:x="677" fg:w="3"/><text x="34.1169%" y="286.50"></text></g><g><title>_add (fractions.py:462) (11 samples, 0.55%)</title><rect x="33.5668%" y="260" width="0.5503%" height="15" fill="rgb(215,41,42)" fg:x="671" fg:w="11"/><text x="33.8168%" y="270.50"></text></g><g><title>__new__ (fractions.py:93) (2 samples, 0.10%)</title><rect x="34.0170%" y="276" width="0.1001%" height="15" fill="rgb(224,123,36)" fg:x="680" fg:w="2"/><text x="34.2670%" y="286.50"></text></g><g><title>__new__ (fractions.py:165) (2 samples, 0.10%)</title><rect x="34.7174%" y="276" width="0.1001%" height="15" fill="rgb(240,125,3)" fg:x="694" fg:w="2"/><text x="34.9674%" y="286.50"></text></g><g><title>_applyActionSide1 (mdp_clean.py:100) (95 samples, 4.75%)</title><rect x="30.2151%" y="212" width="4.7524%" height="15" fill="rgb(205,98,50)" fg:x="604" fg:w="95"/><text x="30.4651%" y="222.50">_apply..</text></g><g><title>getCritDist (mdp_clean.py:52) (82 samples, 4.10%)</title><rect x="30.8654%" y="228" width="4.1021%" height="15" fill="rgb(205,185,37)" fg:x="617" fg:w="82"/><text x="31.1154%" y="238.50">getC..</text></g><g><title>forward (fractions.py:358) (58 samples, 2.90%)</title><rect x="32.0660%" y="244" width="2.9015%" height="15" fill="rgb(238,207,15)" fg:x="641" fg:w="58"/><text x="32.3160%" y="254.50">fo..</text></g><g><title>_add (fractions.py:463) (17 samples, 0.85%)</title><rect x="34.1171%" y="260" width="0.8504%" height="15" fill="rgb(213,199,42)" fg:x="682" fg:w="17"/><text x="34.3671%" y="270.50"></text></g><g><title>__new__ (fractions.py:93) (3 samples, 0.15%)</title><rect x="34.8174%" y="276" width="0.1501%" height="15" fill="rgb(235,201,11)" fg:x="696" fg:w="3"/><text x="35.0674%" y="286.50"></text></g><g><title>applyHPChange (mdp_clean.py:70) (4 samples, 0.20%)</title><rect x="35.0175%" y="228" width="0.2001%" height="15" fill="rgb(207,46,11)" fg:x="700" fg:w="4"/><text x="35.2675%" y="238.50"></text></g><g><title>_make (collections/__init__.py:422) (7 samples, 0.35%)</title><rect x="35.4677%" y="260" width="0.3502%" height="15" fill="rgb(241,35,35)" fg:x="709" fg:w="7"/><text x="35.7177%" y="270.50"></text></g><g><title>_applyActionSide1 (mdp_clean.py:107) (18 samples, 0.90%)</title><rect x="34.9675%" y="212" width="0.9005%" height="15" fill="rgb(243,32,47)" fg:x="699" fg:w="18"/><text x="35.2175%" y="222.50"></text></g><g><title>applyHPChange (mdp_clean.py:71) (13 samples, 0.65%)</title><rect x="35.2176%" y="228" width="0.6503%" height="15" fill="rgb(247,202,23)" fg:x="704" fg:w="13"/><text x="35.4676%" y="238.50"></text></g><g><title>_replace (collections/__init__.py:431) (12 samples, 0.60%)</title><rect x="35.2676%" y="244" width="0.6003%" height="15" fill="rgb(219,102,11)" fg:x="705" fg:w="12"/><text x="35.5176%" y="254.50"></text></g><g><title>__new__ (fractions.py:93) (3 samples, 0.15%)</title><rect x="36.2681%" y="228" width="0.1501%" height="15" fill="rgb(243,110,44)" fg:x="725" fg:w="3"/><text x="36.5181%" y="238.50"></text></g><g><title>_add (fractions.py:453) (3 samples, 0.15%)</title><rect x="36.4682%" y="244" width="0.1501%" height="15" fill="rgb(222,74,54)" fg:x="729" fg:w="3"/><text x="36.7182%" y="254.50"></text></g><g><title>_applyAction (mdp_clean.py:117) (133 samples, 6.65%)</title><rect x="30.2151%" y="196" width="6.6533%" height="15" fill="rgb(216,99,12)" fg:x="604" fg:w="133"/><text x="30.4651%" y="206.50">_applyAct..</text></g><g><title>_applyActionSide1 (mdp_clean.py:108) (20 samples, 1.00%)</title><rect x="35.8679%" y="212" width="1.0005%" height="15" fill="rgb(226,22,26)" fg:x="717" fg:w="20"/><text x="36.1179%" y="222.50"></text></g><g><title>forward (fractions.py:358) (8 samples, 0.40%)</title><rect x="36.4682%" y="228" width="0.4002%" height="15" fill="rgb(217,163,10)" fg:x="729" fg:w="8"/><text x="36.7182%" y="238.50"></text></g><g><title>_add (fractions.py:457) (5 samples, 0.25%)</title><rect x="36.6183%" y="244" width="0.2501%" height="15" fill="rgb(213,25,53)" fg:x="732" fg:w="5"/><text x="36.8683%" y="254.50"></text></g><g><title>_getSuccessorsC (mdp_clean.py:172) (252 samples, 12.61%)</title><rect x="24.4122%" y="180" width="12.6063%" height="15" fill="rgb(252,105,26)" fg:x="488" fg:w="252"/><text x="24.6622%" y="190.50">_getSuccessorsC (md..</text></g><g><title>_applyAction (mdp_clean.py:118) (3 samples, 0.15%)</title><rect x="36.8684%" y="196" width="0.1501%" height="15" fill="rgb(220,39,43)" fg:x="737" fg:w="3"/><text x="37.1184%" y="206.50"></text></g><g><title>&lt;dictcomp&gt; (mdp_clean.py:118) (3 samples, 0.15%)</title><rect x="36.8684%" y="212" width="0.1501%" height="15" fill="rgb(229,68,48)" fg:x="737" fg:w="3"/><text x="37.1184%" y="222.50"></text></g><g><title>__new__ (fractions.py:93) (2 samples, 0.10%)</title><rect x="37.4687%" y="196" width="0.1001%" height="15" fill="rgb(252,8,32)" fg:x="749" fg:w="2"/><text x="37.7187%" y="206.50"></text></g><g><title>_add (fractions.py:455) (2 samples, 0.10%)</title><rect x="37.6688%" y="212" width="0.1001%" height="15" fill="rgb(223,20,43)" fg:x="753" fg:w="2"/><text x="37.9188%" y="222.50"></text></g><g><title>_getSuccessorsC (mdp_clean.py:179) (24 samples, 1.20%)</title><rect x="37.0685%" y="180" width="1.2006%" height="15" fill="rgb(229,81,49)" fg:x="741" fg:w="24"/><text x="37.3185%" y="190.50"></text></g><g><title>forward (fractions.py:358) (13 samples, 0.65%)</title><rect x="37.6188%" y="196" width="0.6503%" height="15" fill="rgb(236,28,36)" fg:x="752" fg:w="13"/><text x="37.8688%" y="206.50"></text></g><g><title>_add (fractions.py:457) (10 samples, 0.50%)</title><rect x="37.7689%" y="212" width="0.5003%" height="15" fill="rgb(249,185,26)" fg:x="755" fg:w="10"/><text x="38.0189%" y="222.50"></text></g><g><title>__new__ (fractions.py:93) (3 samples, 0.15%)</title><rect x="38.1191%" y="228" width="0.1501%" height="15" fill="rgb(249,174,33)" fg:x="762" fg:w="3"/><text x="38.3691%" y="238.50"></text></g><g><title>__float__ (numbers.py:291) (3 samples, 0.15%)</title><rect x="38.6193%" y="212" width="0.1501%" height="15" fill="rgb(233,201,37)" fg:x="772" fg:w="3"/><text x="38.8693%" y="222.50"></text></g><g><title>_richcmp (fractions.py:702) (4 samples, 0.20%)</title><rect x="38.7694%" y="228" width="0.2001%" height="15" fill="rgb(221,78,26)" fg:x="775" fg:w="4"/><text x="39.0194%" y="238.50"></text></g><g><title>getSuccessors (mdp_clean.py:193) (298 samples, 14.91%)</title><rect x="24.1621%" y="164" width="14.9075%" height="15" fill="rgb(250,127,30)" fg:x="483" fg:w="298"/><text x="24.4121%" y="174.50">getSuccessors (mdp_clea..</text></g><g><title>_getSuccessorsC (mdp_clean.py:180) (16 samples, 0.80%)</title><rect x="38.2691%" y="180" width="0.8004%" height="15" fill="rgb(230,49,44)" fg:x="765" fg:w="16"/><text x="38.5191%" y="190.50"></text></g><g><title>&lt;dictcomp&gt; (mdp_clean.py:180) (14 samples, 0.70%)</title><rect x="38.3692%" y="196" width="0.7004%" height="15" fill="rgb(229,67,23)" fg:x="767" fg:w="14"/><text x="38.6192%" y="206.50"></text></g><g><title>__gt__ (fractions.py:719) (6 samples, 0.30%)</title><rect x="38.7694%" y="212" width="0.3002%" height="15" fill="rgb(249,83,47)" fg:x="775" fg:w="6"/><text x="39.0194%" y="222.50"></text></g><g><title>getSuccessors (mdp_clean.py:194) (9 samples, 0.45%)</title><rect x="39.0695%" y="164" width="0.4502%" height="15" fill="rgb(215,43,3)" fg:x="781" fg:w="9"/><text x="39.3195%" y="174.50"></text></g><g><title>&lt;lambda&gt; (mdp_clean.py:194) (3 samples, 0.15%)</title><rect x="39.3697%" y="180" width="0.1501%" height="15" fill="rgb(238,154,13)" fg:x="787" fg:w="3"/><text x="39.6197%" y="190.50"></text></g><g><title>getSuccessorsList (mdp_clean.py:201) (778 samples, 38.92%)</title><rect x="0.6503%" y="148" width="38.9195%" height="15" fill="rgb(219,56,2)" fg:x="13" fg:w="778"/><text x="0.9003%" y="158.50">getSuccessorsList (mdp_clean.py:201)</text></g><g><title>evaluate (mdp_clean.py:219) (793 samples, 39.67%)</title><rect x="0.1501%" y="116" width="39.6698%" height="15" fill="rgb(233,0,4)" fg:x="3" fg:w="793"/><text x="0.4001%" y="126.50">evaluate (mdp_clean.py:219)</text></g><g><title>topoSort (mdp_clean.py:26) (787 samples, 39.37%)</title><rect x="0.4502%" y="132" width="39.3697%" height="15" fill="rgb(235,30,7)" fg:x="9" fg:w="787"/><text x="0.7002%" y="142.50">topoSort (mdp_clean.py:26)</text></g><g><title>getSuccessorsList (mdp_clean.py:203) (5 samples, 0.25%)</title><rect x="39.5698%" y="148" width="0.2501%" height="15" fill="rgb(250,79,13)" fg:x="791" fg:w="5"/><text x="39.8198%" y="158.50"></text></g><g><title>evaluate (mdp_clean.py:225) (5 samples, 0.25%)</title><rect x="39.8699%" y="116" width="0.2501%" height="15" fill="rgb(211,146,34)" fg:x="797" fg:w="5"/><text x="40.1199%" y="126.50"></text></g><g><title>evaluate (mdp_clean.py:226) (48 samples, 2.40%)</title><rect x="40.1201%" y="116" width="2.4012%" height="15" fill="rgb(228,22,38)" fg:x="802" fg:w="48"/><text x="40.3701%" y="126.50">ev..</text></g><g><title>evaluate (mdp_clean.py:229) (10 samples, 0.50%)</title><rect x="42.5213%" y="116" width="0.5003%" height="15" fill="rgb(235,168,5)" fg:x="850" fg:w="10"/><text x="42.7713%" y="126.50"></text></g><g><title>&lt;genexpr&gt; (mdp_clean.py:231) (25 samples, 1.25%)</title><rect x="45.8729%" y="132" width="1.2506%" height="15" fill="rgb(221,155,16)" fg:x="917" fg:w="25"/><text x="46.1229%" y="142.50"></text></g><g><title>getSuccessors (mdp_clean.py:183) (2 samples, 0.10%)</title><rect x="47.1236%" y="132" width="0.1001%" height="15" fill="rgb(215,215,53)" fg:x="942" fg:w="2"/><text x="47.3736%" y="142.50"></text></g><g><title>evaluate (mdp_clean.py:231) (94 samples, 4.70%)</title><rect x="43.0215%" y="116" width="4.7024%" height="15" fill="rgb(223,4,10)" fg:x="860" fg:w="94"/><text x="43.2715%" y="126.50">evalu..</text></g><g><title>getSuccessors (mdp_clean.py:184) (10 samples, 0.50%)</title><rect x="47.2236%" y="132" width="0.5003%" height="15" fill="rgb(234,103,6)" fg:x="944" fg:w="10"/><text x="47.4736%" y="142.50"></text></g><g><title>&lt;genexpr&gt; (mdp_clean.py:232) (39 samples, 1.95%)</title><rect x="50.4252%" y="132" width="1.9510%" height="15" fill="rgb(227,97,0)" fg:x="1008" fg:w="39"/><text x="50.6752%" y="142.50">&lt;..</text></g><g><title>evaluate (mdp_clean.py:232) (99 samples, 4.95%)</title><rect x="47.7239%" y="116" width="4.9525%" height="15" fill="rgb(234,150,53)" fg:x="954" fg:w="99"/><text x="47.9739%" y="126.50">evalua..</text></g><g><title>getSuccessors (mdp_clean.py:184) (6 samples, 0.30%)</title><rect x="52.3762%" y="132" width="0.3002%" height="15" fill="rgb(228,201,54)" fg:x="1047" fg:w="6"/><text x="52.6262%" y="142.50"></text></g><g><title>&lt;genexpr&gt; (mdp_clean.py:234) (257 samples, 12.86%)</title><rect x="59.5798%" y="132" width="12.8564%" height="15" fill="rgb(222,22,37)" fg:x="1191" fg:w="257"/><text x="59.8298%" y="142.50">&lt;genexpr&gt; (mdp_clea..</text></g><g><title>evaluate (mdp_clean.py:234) (396 samples, 19.81%)</title><rect x="52.6763%" y="116" width="19.8099%" height="15" fill="rgb(237,53,32)" fg:x="1053" fg:w="396"/><text x="52.9263%" y="126.50">evaluate (mdp_clean.py:234)</text></g><g><title>getSuccessors (mdp_clean.py:183) (4 samples, 0.20%)</title><rect x="72.9865%" y="132" width="0.2001%" height="15" fill="rgb(233,25,53)" fg:x="1459" fg:w="4"/><text x="73.2365%" y="142.50"></text></g><g><title>evaluate (mdp_clean.py:235) (44 samples, 2.20%)</title><rect x="72.4862%" y="116" width="2.2011%" height="15" fill="rgb(210,40,34)" fg:x="1449" fg:w="44"/><text x="72.7362%" y="126.50">e..</text></g><g><title>getSuccessors (mdp_clean.py:184) (30 samples, 1.50%)</title><rect x="73.1866%" y="132" width="1.5008%" height="15" fill="rgb(241,220,44)" fg:x="1463" fg:w="30"/><text x="73.4366%" y="142.50"></text></g><g><title>evaluate (mdp_clean.py:236) (385 samples, 19.26%)</title><rect x="74.6873%" y="116" width="19.2596%" height="15" fill="rgb(235,28,35)" fg:x="1493" fg:w="385"/><text x="74.9373%" y="126.50">evaluate (mdp_clean.py:236)</text></g><g><title>&lt;genexpr&gt; (mdp_clean.py:236) (267 samples, 13.36%)</title><rect x="80.5903%" y="132" width="13.3567%" height="15" fill="rgb(210,56,17)" fg:x="1611" fg:w="267"/><text x="80.8403%" y="142.50">&lt;genexpr&gt; (mdp_clean..</text></g><g><title>getSuccessors (mdp_clean.py:183) (7 samples, 0.35%)</title><rect x="94.3972%" y="132" width="0.3502%" height="15" fill="rgb(224,130,29)" fg:x="1887" fg:w="7"/><text x="94.6472%" y="142.50"></text></g><g><title>evaluate (mdp_clean.py:237) (45 samples, 2.25%)</title><rect x="93.9470%" y="116" width="2.2511%" height="15" fill="rgb(235,212,8)" fg:x="1878" fg:w="45"/><text x="94.1970%" y="126.50">e..</text></g><g><title>getSuccessors (mdp_clean.py:184) (29 samples, 1.45%)</title><rect x="94.7474%" y="132" width="1.4507%" height="15" fill="rgb(223,33,50)" fg:x="1894" fg:w="29"/><text x="94.9974%" y="142.50"></text></g><g><title>evaluate (mdp_clean.py:239) (75 samples, 3.75%)</title><rect x="96.1981%" y="116" width="3.7519%" height="15" fill="rgb(219,149,13)" fg:x="1923" fg:w="75"/><text x="96.4481%" y="126.50">eval..</text></g><g><title>all (1,999 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(250,156,29)" fg:x="0" fg:w="1999"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (mdp_clean.py:265) (1,999 samples, 100.00%)</title><rect x="0.0000%" y="68" width="100.0000%" height="15" fill="rgb(216,193,19)" fg:x="0" fg:w="1999"/><text x="0.2500%" y="78.50">&lt;module&gt; (mdp_clean.py:265)</text></g><g><title>main (mdp_clean.py:260) (1,999 samples, 100.00%)</title><rect x="0.0000%" y="84" width="100.0000%" height="15" fill="rgb(216,135,14)" fg:x="0" fg:w="1999"/><text x="0.2500%" y="94.50">main (mdp_clean.py:260)</text></g><g><title>bench_mdp (mdp_clean.py:250) (1,999 samples, 100.00%)</title><rect x="0.0000%" y="100" width="100.0000%" height="15" fill="rgb(241,47,5)" fg:x="0" fg:w="1999"/><text x="0.2500%" y="110.50">bench_mdp (mdp_clean.py:250)</text></g></svg></svg>