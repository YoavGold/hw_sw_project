<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="382" onload="init(evt)" viewBox="0 0 1200 382" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="382.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph: pathlib</text>
<text id="subtitle" x="600.00" y="48" >Generated: 2025-09-13 22:51:06</text>
<text id="details" x="10.00" y="365" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="365" > </text>
<g id="frames">
<g >
<title>x64_sys_call (52,468,881 samples, 1.84%)</title><rect x="173.6" y="221" width="21.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="176.63" y="231.5" >x..</text>
</g>
<g >
<title>arena_map_is_used (52,467,230 samples, 1.84%)</title><rect x="500.0" y="285" width="21.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="502.98" y="295.5" >a..</text>
</g>
<g >
<title>filename_lookup (52,470,792 samples, 1.84%)</title><rect x="882.9" y="173" width="21.7" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="885.86" y="183.5" >f..</text>
</g>
<g >
<title>_PyObject_Malloc (26,235,408 samples, 0.92%)</title><rect x="817.6" y="301" width="10.9" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="820.62" y="311.5" ></text>
</g>
<g >
<title>_PyType_Lookup (52,462,524 samples, 1.84%)</title><rect x="369.5" y="285" width="21.8" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="372.51" y="295.5" >_..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (183,637,871 samples, 6.45%)</title><rect x="195.4" y="285" width="76.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="198.38" y="295.5" >_PyEval_..</text>
</g>
<g >
<title>path_lookupat (52,470,792 samples, 1.84%)</title><rect x="882.9" y="157" width="21.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="885.86" y="167.5" >p..</text>
</g>
<g >
<title>PyCallable_Check (26,241,586 samples, 0.92%)</title><rect x="10.0" y="301" width="10.9" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="13.01" y="311.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (26,222,999 samples, 0.92%)</title><rect x="904.6" y="125" width="10.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="907.61" y="135.5" ></text>
</g>
<g >
<title>PyFloat_FromDouble (26,237,511 samples, 0.92%)</title><rect x="20.9" y="301" width="10.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="23.88" y="311.5" ></text>
</g>
<g >
<title>drop_gil (26,236,681 samples, 0.92%)</title><rect x="532.6" y="285" width="10.9" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="535.60" y="295.5" ></text>
</g>
<g >
<title>path_parentat (26,233,637 samples, 0.92%)</title><rect x="184.5" y="157" width="10.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="187.51" y="167.5" ></text>
</g>
<g >
<title>x64_sys_call (78,706,865 samples, 2.76%)</title><rect x="434.7" y="237" width="32.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="437.74" y="247.5" >x6..</text>
</g>
<g >
<title>do_unlinkat (52,468,881 samples, 1.84%)</title><rect x="173.6" y="189" width="21.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="176.63" y="199.5" >d..</text>
</g>
<g >
<title>__x64_sys_getdents64 (78,706,865 samples, 2.76%)</title><rect x="434.7" y="221" width="32.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="437.74" y="231.5" >__..</text>
</g>
<g >
<title>_PyEval_MakeFrameVector (26,361,288 samples, 0.93%)</title><rect x="763.2" y="301" width="10.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="766.18" y="311.5" ></text>
</g>
<g >
<title>write_size_t (78,704,968 samples, 2.76%)</title><rect x="730.6" y="285" width="32.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="733.56" y="295.5" >wr..</text>
</g>
<g >
<title>lookup_fast (26,234,746 samples, 0.92%)</title><rect x="893.7" y="125" width="10.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="896.74" y="135.5" ></text>
</g>
<g >
<title>_PyLong_New (52,533,412 samples, 1.85%)</title><rect x="795.8" y="301" width="21.8" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="798.85" y="311.5" >_..</text>
</g>
<g >
<title>__set_task_comm (3,837,725 samples, 0.13%)</title><rect x="543.5" y="109" width="1.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="546.47" y="119.5" ></text>
</g>
<g >
<title>unicode_fromformat_write_cstr (26,233,699 samples, 0.92%)</title><rect x="162.8" y="269" width="10.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="165.76" y="279.5" ></text>
</g>
<g >
<title>filldir64 (26,237,174 samples, 0.92%)</title><rect x="434.7" y="141" width="10.9" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="437.74" y="151.5" ></text>
</g>
<g >
<title>security_inode_getattr (52,474,671 samples, 1.84%)</title><rect x="861.1" y="189" width="21.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="864.11" y="199.5" >s..</text>
</g>
<g >
<title>user_path_at_empty (131,164,471 samples, 4.61%)</title><rect x="882.9" y="189" width="54.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="885.86" y="199.5" >user_..</text>
</g>
<g >
<title>call_function.lto_priv.0 (26,236,342 samples, 0.92%)</title><rect x="141.0" y="269" width="10.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="144.01" y="279.5" ></text>
</g>
<g >
<title>os_stat.lto_priv.0 (26,252,327 samples, 0.92%)</title><rect x="610.4" y="285" width="10.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="613.41" y="295.5" ></text>
</g>
<g >
<title>PyNumber_AsSsize_t (26,235,134 samples, 0.92%)</title><rect x="31.8" y="301" width="10.8" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="34.76" y="311.5" ></text>
</g>
<g >
<title>complete_walk (26,233,637 samples, 0.92%)</title><rect x="184.5" y="141" width="10.9" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="187.51" y="151.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (26,234,410 samples, 0.92%)</title><rect x="915.5" y="109" width="10.8" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="918.48" y="119.5" ></text>
</g>
<g >
<title>PyErr_CheckSignals (26,234,622 samples, 0.92%)</title><rect x="42.6" y="285" width="10.9" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="45.63" y="295.5" ></text>
</g>
<g >
<title>iterate_dir (78,706,865 samples, 2.76%)</title><rect x="434.7" y="205" width="32.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="437.74" y="215.5" >it..</text>
</g>
<g >
<title>kmem_cache_alloc (26,222,999 samples, 0.92%)</title><rect x="904.6" y="141" width="10.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="907.61" y="151.5" ></text>
</g>
<g >
<title>unicode_concatenate.lto_priv.0 (26,239,634 samples, 0.92%)</title><rect x="719.7" y="285" width="10.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="722.68" y="295.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (26,234,746 samples, 0.92%)</title><rect x="893.7" y="109" width="10.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="896.74" y="119.5" ></text>
</g>
<g >
<title>[unknown] (26,269,214 samples, 0.92%)</title><rect x="130.1" y="269" width="10.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="133.13" y="279.5" ></text>
</g>
<g >
<title>search_binary_handler (3,837,725 samples, 0.13%)</title><rect x="543.5" y="157" width="1.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="546.47" y="167.5" ></text>
</g>
<g >
<title>method_vectorcall (26,236,183 samples, 0.92%)</title><rect x="599.5" y="285" width="10.9" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="602.54" y="295.5" ></text>
</g>
<g >
<title>[unknown] (26,269,214 samples, 0.92%)</title><rect x="130.1" y="253" width="10.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="133.13" y="263.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (183,639,142 samples, 6.45%)</title><rect x="861.1" y="221" width="76.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="864.11" y="231.5" >__do_sys..</text>
</g>
<g >
<title>__x64_sys_unlinkat (52,468,881 samples, 1.84%)</title><rect x="173.6" y="205" width="21.8" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="176.63" y="215.5" >_..</text>
</g>
<g >
<title>do_syscall_64 (183,639,142 samples, 6.45%)</title><rect x="861.1" y="269" width="76.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="864.11" y="279.5" >do_sysca..</text>
</g>
<g >
<title>[unknown] (26,269,214 samples, 0.92%)</title><rect x="130.1" y="237" width="10.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="133.13" y="247.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (3,837,725 samples, 0.13%)</title><rect x="543.5" y="221" width="1.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="546.47" y="231.5" ></text>
</g>
<g >
<title>__GI___fstatat64 (236,110,092 samples, 8.29%)</title><rect x="861.1" y="301" width="97.9" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="864.11" y="311.5" >__GI___fsta..</text>
</g>
<g >
<title>[unknown] (26,269,214 samples, 0.92%)</title><rect x="130.1" y="205" width="10.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="133.13" y="215.5" ></text>
</g>
<g >
<title>pthread_getspecific@@GLIBC_2.34 (52,514,685 samples, 1.84%)</title><rect x="621.3" y="285" width="21.8" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="624.29" y="295.5" >p..</text>
</g>
<g >
<title>_PyMem_DebugCheckAddress (131,575,583 samples, 4.62%)</title><rect x="282.4" y="285" width="54.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="285.36" y="295.5" >_PyMe..</text>
</g>
<g >
<title>_PyLong_New (26,234,777 samples, 0.92%)</title><rect x="271.5" y="285" width="10.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="274.49" y="295.5" ></text>
</g>
<g >
<title>[unknown] (26,269,214 samples, 0.92%)</title><rect x="130.1" y="221" width="10.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="133.13" y="231.5" ></text>
</g>
<g >
<title>ext4_htree_store_dirent (52,469,691 samples, 1.84%)</title><rect x="445.6" y="125" width="21.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="448.62" y="135.5" >e..</text>
</g>
<g >
<title>walk_component (26,234,746 samples, 0.92%)</title><rect x="893.7" y="141" width="10.9" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="896.74" y="151.5" ></text>
</g>
<g >
<title>__errno_location (26,237,708 samples, 0.92%)</title><rect x="467.4" y="285" width="10.8" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="470.36" y="295.5" ></text>
</g>
<g >
<title>siphash24 (504,974,198 samples, 17.74%)</title><rect x="980.7" y="301" width="209.3" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="983.72" y="311.5" >siphash24</text>
</g>
<g >
<title>getname_flags.part.0 (52,457,409 samples, 1.84%)</title><rect x="904.6" y="157" width="21.7" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="907.61" y="167.5" >g..</text>
</g>
<g >
<title>PyThread_tss_get (26,234,782 samples, 0.92%)</title><rect x="97.5" y="285" width="10.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="100.51" y="295.5" ></text>
</g>
<g >
<title>PyErr_Format (26,234,709 samples, 0.92%)</title><rect x="53.5" y="285" width="10.9" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="56.50" y="295.5" ></text>
</g>
<g >
<title>__x64_sys_execve (3,837,725 samples, 0.13%)</title><rect x="543.5" y="237" width="1.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="546.47" y="247.5" ></text>
</g>
<g >
<title>_PyObject_GetMethod (26,233,864 samples, 0.92%)</title><rect x="774.1" y="285" width="10.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="777.10" y="295.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (3,837,725 samples, 0.13%)</title><rect x="543.5" y="61" width="1.6" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="546.47" y="71.5" ></text>
</g>
<g >
<title>_PyMem_DebugRawAlloc (26,269,214 samples, 0.92%)</title><rect x="130.1" y="109" width="10.9" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="133.13" y="119.5" ></text>
</g>
<g >
<title>perf_event_comm (3,837,725 samples, 0.13%)</title><rect x="543.5" y="93" width="1.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="546.47" y="103.5" ></text>
</g>
<g >
<title>_int_malloc (26,234,491 samples, 0.92%)</title><rect x="959.0" y="301" width="10.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="961.97" y="311.5" ></text>
</g>
<g >
<title>do_syscall_64 (52,468,881 samples, 1.84%)</title><rect x="173.6" y="237" width="21.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="176.63" y="247.5" >d..</text>
</g>
<g >
<title>all (2,847,175,382 samples, 100%)</title><rect x="10.0" y="333" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="343.5" ></text>
</g>
<g >
<title>ext4_htree_fill_tree (52,469,691 samples, 1.84%)</title><rect x="445.6" y="157" width="21.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="448.62" y="167.5" >e..</text>
</g>
<g >
<title>clear_slots (26,237,815 samples, 0.92%)</title><rect x="969.8" y="301" width="10.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="972.84" y="311.5" ></text>
</g>
<g >
<title>clear_weakref.lto_priv.0 (26,232,234 samples, 0.92%)</title><rect x="521.7" y="285" width="10.9" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="524.73" y="295.5" ></text>
</g>
<g >
<title>[unknown] (1,738,576,387 samples, 61.06%)</title><rect x="42.6" y="301" width="720.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="45.63" y="311.5" >[unknown]</text>
</g>
<g >
<title>htree_dirblock_to_tree (52,469,691 samples, 1.84%)</title><rect x="445.6" y="141" width="21.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="448.62" y="151.5" >h..</text>
</g>
<g >
<title>gen_iternext.lto_priv.0 (26,234,440 samples, 0.92%)</title><rect x="556.0" y="285" width="10.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="558.97" y="295.5" ></text>
</g>
<g >
<title>strncpy_from_user (26,234,410 samples, 0.92%)</title><rect x="915.5" y="141" width="10.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="918.48" y="151.5" ></text>
</g>
<g >
<title>lookdict_split.lto_priv.0 (26,401,685 samples, 0.93%)</title><rect x="577.7" y="285" width="11.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="580.72" y="295.5" ></text>
</g>
<g >
<title>state_init (26,235,838 samples, 0.92%)</title><rect x="708.8" y="285" width="10.9" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="711.81" y="295.5" ></text>
</g>
<g >
<title>ext4_readdir (78,706,865 samples, 2.76%)</title><rect x="434.7" y="189" width="32.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="437.74" y="199.5" >ex..</text>
</g>
<g >
<title>_PyUnicode_CheckConsistency (104,938,766 samples, 3.69%)</title><rect x="391.3" y="285" width="43.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="394.25" y="295.5" >_PyU..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (52,468,881 samples, 1.84%)</title><rect x="173.6" y="253" width="21.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="176.63" y="263.5" >e..</text>
</g>
<g >
<title>x64_sys_call (3,837,725 samples, 0.13%)</title><rect x="543.5" y="253" width="1.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="546.47" y="263.5" ></text>
</g>
<g >
<title>__strlen_avx2_rtm (26,236,496 samples, 0.92%)</title><rect x="478.2" y="285" width="10.9" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="481.24" y="295.5" ></text>
</g>
<g >
<title>do_syscall_64 (78,706,865 samples, 2.76%)</title><rect x="434.7" y="253" width="32.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="437.74" y="263.5" >do..</text>
</g>
<g >
<title>read_size_t (158,658,352 samples, 5.57%)</title><rect x="643.1" y="285" width="65.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="646.05" y="295.5" >read_si..</text>
</g>
<g >
<title>lookdict_unicode_nodummy (26,245,028 samples, 0.92%)</title><rect x="588.7" y="285" width="10.8" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="591.66" y="295.5" ></text>
</g>
<g >
<title>getname_flags (52,457,409 samples, 1.84%)</title><rect x="904.6" y="173" width="21.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="907.61" y="183.5" >g..</text>
</g>
<g >
<title>do_syscall_64 (3,837,725 samples, 0.13%)</title><rect x="543.5" y="269" width="1.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="546.47" y="279.5" ></text>
</g>
<g >
<title>bprm_execve (3,837,725 samples, 0.13%)</title><rect x="543.5" y="205" width="1.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="546.47" y="215.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (183,639,142 samples, 6.45%)</title><rect x="861.1" y="237" width="76.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="864.11" y="247.5" >__x64_sy..</text>
</g>
<g >
<title>[unknown] (26,269,214 samples, 0.92%)</title><rect x="130.1" y="189" width="10.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="133.13" y="199.5" ></text>
</g>
<g >
<title>PyObject_Free (26,992,272 samples, 0.95%)</title><rect x="75.2" y="285" width="11.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="78.25" y="295.5" ></text>
</g>
<g >
<title>_PyObject_Free (26,235,209 samples, 0.92%)</title><rect x="336.9" y="285" width="10.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="339.89" y="295.5" ></text>
</g>
<g >
<title>__filename_parentat (26,233,637 samples, 0.92%)</title><rect x="184.5" y="173" width="10.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="187.51" y="183.5" ></text>
</g>
<g >
<title>_PyGILState_GetThisThreadState (26,239,207 samples, 0.92%)</title><rect x="785.0" y="301" width="10.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="787.97" y="311.5" ></text>
</g>
<g >
<title>__check_object_size (26,234,410 samples, 0.92%)</title><rect x="915.5" y="125" width="10.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="918.48" y="135.5" ></text>
</g>
<g >
<title>_Py_CheckFunctionResult (52,469,189 samples, 1.84%)</title><rect x="828.5" y="301" width="21.7" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="831.49" y="311.5" >_..</text>
</g>
<g >
<title>_Py_NewReference (26,238,233 samples, 0.92%)</title><rect x="850.2" y="301" width="10.9" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="853.24" y="311.5" ></text>
</g>
<g >
<title>load_elf_binary (3,837,725 samples, 0.13%)</title><rect x="543.5" y="141" width="1.6" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="546.47" y="151.5" ></text>
</g>
<g >
<title>x64_sys_call (183,639,142 samples, 6.45%)</title><rect x="861.1" y="253" width="76.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="864.11" y="263.5" >x64_sys_..</text>
</g>
<g >
<title>PyMember_SetOne (26,237,093 samples, 0.92%)</title><rect x="64.4" y="285" width="10.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="67.38" y="295.5" ></text>
</g>
<g >
<title>[unknown] (26,269,214 samples, 0.92%)</title><rect x="130.1" y="157" width="10.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="133.13" y="167.5" ></text>
</g>
<g >
<title>list_dealloc.lto_priv.0 (26,232,182 samples, 0.92%)</title><rect x="566.8" y="285" width="10.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="569.84" y="295.5" ></text>
</g>
<g >
<title>ext4_dx_readdir (78,706,865 samples, 2.76%)</title><rect x="434.7" y="173" width="32.7" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="437.74" y="183.5" >ex..</text>
</g>
<g >
<title>perf_iterate_sb (3,837,725 samples, 0.13%)</title><rect x="543.5" y="77" width="1.6" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="546.47" y="87.5" ></text>
</g>
<g >
<title>vfs_statx (183,639,142 samples, 6.45%)</title><rect x="861.1" y="205" width="76.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="864.11" y="215.5" >vfs_statx</text>
</g>
<g >
<title>__GI___getdents64 (78,706,865 samples, 2.76%)</title><rect x="434.7" y="285" width="32.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="437.74" y="295.5" >__..</text>
</g>
<g >
<title>python (2,847,157,815 samples, 100.00%)</title><rect x="10.0" y="317" width="1180.0" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="13.01" y="327.5" >python</text>
</g>
<g >
<title>frame_dealloc.lto_priv.0 (26,319,100 samples, 0.92%)</title><rect x="545.1" y="285" width="10.9" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="548.06" y="295.5" ></text>
</g>
<g >
<title>arena_map_get (26,229,598 samples, 0.92%)</title><rect x="489.1" y="285" width="10.9" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="492.11" y="295.5" ></text>
</g>
<g >
<title>PyObject_Str (26,715,621 samples, 0.94%)</title><rect x="86.4" y="285" width="11.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="89.44" y="295.5" ></text>
</g>
<g >
<title>[unknown] (26,269,214 samples, 0.92%)</title><rect x="130.1" y="173" width="10.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="133.13" y="183.5" ></text>
</g>
<g >
<title>__virt_addr_valid (26,234,410 samples, 0.92%)</title><rect x="915.5" y="93" width="10.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="918.48" y="103.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (183,639,142 samples, 6.45%)</title><rect x="861.1" y="285" width="76.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="864.11" y="295.5" >entry_SY..</text>
</g>
<g >
<title>[unknown] (157,445,308 samples, 5.53%)</title><rect x="130.1" y="285" width="65.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="133.13" y="295.5" >[unknown]</text>
</g>
<g >
<title>syscall_return_via_sysret (52,470,950 samples, 1.84%)</title><rect x="937.2" y="285" width="21.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="940.22" y="295.5" >s..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (78,706,865 samples, 2.76%)</title><rect x="434.7" y="269" width="32.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="437.74" y="279.5" >en..</text>
</g>
<g >
<title>[unknown] (26,269,214 samples, 0.92%)</title><rect x="130.1" y="141" width="10.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="133.13" y="151.5" ></text>
</g>
<g >
<title>_PyThreadState_Swap (26,234,756 samples, 0.92%)</title><rect x="358.6" y="285" width="10.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="361.64" y="295.5" ></text>
</g>
<g >
<title>exec_binprm (3,837,725 samples, 0.13%)</title><rect x="543.5" y="173" width="1.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="546.47" y="183.5" ></text>
</g>
<g >
<title>kmem_cache_free (26,236,270 samples, 0.92%)</title><rect x="926.3" y="173" width="10.9" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="929.35" y="183.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (3,837,725 samples, 0.13%)</title><rect x="543.5" y="189" width="1.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="546.47" y="199.5" ></text>
</g>
<g >
<title>begin_new_exec (3,837,725 samples, 0.13%)</title><rect x="543.5" y="125" width="1.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="546.47" y="135.5" ></text>
</g>
<g >
<title>_PyFrame_New_NoTrack (26,233,864 samples, 0.92%)</title><rect x="774.1" y="301" width="10.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="777.10" y="311.5" ></text>
</g>
<g >
<title>[unknown] (26,269,214 samples, 0.92%)</title><rect x="130.1" y="125" width="10.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="133.13" y="135.5" ></text>
</g>
<g >
<title>PyType_IsSubtype (52,468,430 samples, 1.84%)</title><rect x="108.4" y="285" width="21.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="111.38" y="295.5" >P..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,837,725 samples, 0.13%)</title><rect x="543.5" y="285" width="1.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="546.47" y="295.5" ></text>
</g>
<g >
<title>_PyObject_IsFreed (26,235,105 samples, 0.92%)</title><rect x="347.8" y="285" width="10.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="350.76" y="295.5" ></text>
</g>
<g >
<title>unlinkat (52,468,881 samples, 1.84%)</title><rect x="173.6" y="269" width="21.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="176.63" y="279.5" >u..</text>
</g>
<g >
<title>apparmor_inode_getattr (52,474,671 samples, 1.84%)</title><rect x="861.1" y="173" width="21.8" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="864.11" y="183.5" >a..</text>
</g>
<g >
<title>method_dealloc.lto_priv.0 (26,237,172 samples, 0.92%)</title><rect x="151.9" y="269" width="10.9" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="154.89" y="279.5" ></text>
</g>
<g >
<title>call_filldir (26,237,174 samples, 0.92%)</title><rect x="434.7" y="157" width="10.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="437.74" y="167.5" ></text>
</g>
</g>
</svg>
